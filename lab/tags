!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
AF_INET	./net/lwip/include/lwip/sockets.h	118;"	d
AF_UNSPEC	./net/lwip/include/lwip/sockets.h	117;"	d
ALLOC_ZERO	./kern/pmap.h	/^	ALLOC_ZERO = 1<<0,$/;"	e	enum:__anon3
ANNOUNCE_INTERVAL	./net/lwip/include/ipv4/lwip/autoip.h	65;"	d
ANNOUNCE_NUM	./net/lwip/include/ipv4/lwip/autoip.h	64;"	d
ANNOUNCE_WAIT	./net/lwip/include/ipv4/lwip/autoip.h	66;"	d
API_EVENT	./net/lwip/include/lwip/api.h	158;"	d
API_LIB_DEBUG	./net/lwip/include/lwip/opt.h	1497;"	d
API_MSG_DEBUG	./net/lwip/include/lwip/opt.h	1504;"	d
ARP_QUEUEING	./net/lwip/include/lwip/opt.h	336;"	d
ARP_REPLY	./net/lwip/include/netif/etharp.h	132;"	d
ARP_REQUEST	./net/lwip/include/netif/etharp.h	131;"	d
ARP_TABLE_SIZE	./net/lwip/include/lwip/opt.h	328;"	d
ARP_TMR_INTERVAL	./net/lwip/include/netif/etharp.h	123;"	d
AUTHDEBUG	./net/lwip/netif/ppp/pppdebug.h	66;"	d
AUTHDEBUG	./net/lwip/netif/ppp/pppdebug.h	76;"	d
AUTH_H	./net/lwip/netif/ppp/auth.h	54;"	d
AUTOIP_DEBUG	./net/lwip/include/lwip/opt.h	1680;"	d
AUTOIP_STATE_ANNOUNCING	./net/lwip/include/ipv4/lwip/autoip.h	74;"	d
AUTOIP_STATE_BOUND	./net/lwip/include/ipv4/lwip/autoip.h	75;"	d
AUTOIP_STATE_OFF	./net/lwip/include/ipv4/lwip/autoip.h	72;"	d
AUTOIP_STATE_PROBING	./net/lwip/include/ipv4/lwip/autoip.h	73;"	d
AUTOIP_TICKS_PER_SECOND	./net/lwip/include/ipv4/lwip/autoip.h	57;"	d
AUTOIP_TMR_INTERVAL	./net/lwip/include/ipv4/lwip/autoip.h	56;"	d
Argstate	./inc/args.h	/^struct Argstate {$/;"	s
Argstate::argc	./inc/args.h	/^	int *argc;$/;"	m	struct:Argstate	access:public
Argstate::argv	./inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate	access:public
Argstate::argvalue	./inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate	access:public
Argstate::curarg	./inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate	access:public
BCMP	./net/lwip/netif/ppp/ppp.h	210;"	d
BCOPY	./net/lwip/netif/ppp/ppp.h	211;"	d
BIG_ENDIAN	./net/lwip/include/lwip/arch.h	40;"	d
BLKBITSIZE	./inc/fs.h	13;"	d
BLKFILES	./inc/fs.h	45;"	d
BLKSECTS	./fs/fs.h	5;"	d
BLKSIZE	./inc/fs.h	12;"	d
BYTE_ORDER	./net/lwip/jos/arch/cc.h	38;"	d
BZERO	./net/lwip/netif/ppp/ppp.h	212;"	d
CBCP_OPT	./net/lwip/netif/ppp/lcp.h	82;"	d
CBCP_SUPPORT	./net/lwip/include/lwip/opt.h	1302;"	d
CCP_SUPPORT	./net/lwip/include/lwip/opt.h	1309;"	d
CGA_BASE	./kern/console.h	13;"	d
CGA_BUF	./kern/console.h	14;"	d
CHAPCS_CLOSED	./net/lwip/netif/ppp/chap.h	103;"	d
CHAPCS_INITIAL	./net/lwip/netif/ppp/chap.h	102;"	d
CHAPCS_LISTEN	./net/lwip/netif/ppp/chap.h	105;"	d
CHAPCS_OPEN	./net/lwip/netif/ppp/chap.h	107;"	d
CHAPCS_PENDING	./net/lwip/netif/ppp/chap.h	104;"	d
CHAPCS_RESPONSE	./net/lwip/netif/ppp/chap.h	106;"	d
CHAPDEBUG	./net/lwip/netif/ppp/pppdebug.h	71;"	d
CHAPDEBUG	./net/lwip/netif/ppp/pppdebug.h	81;"	d
CHAPSS_BADAUTH	./net/lwip/netif/ppp/chap.h	118;"	d
CHAPSS_CLOSED	./net/lwip/netif/ppp/chap.h	113;"	d
CHAPSS_INITIAL	./net/lwip/netif/ppp/chap.h	112;"	d
CHAPSS_INITIAL_CHAL	./net/lwip/netif/ppp/chap.h	115;"	d
CHAPSS_OPEN	./net/lwip/netif/ppp/chap.h	116;"	d
CHAPSS_PENDING	./net/lwip/netif/ppp/chap.h	114;"	d
CHAPSS_RECHALLENGE	./net/lwip/netif/ppp/chap.h	117;"	d
CHAP_CHALLENGE	./net/lwip/netif/ppp/chap.h	87;"	d
CHAP_DEFTIMEOUT	./net/lwip/include/lwip/opt.h	1354;"	d
CHAP_DEFTRANSMITS	./net/lwip/include/lwip/opt.h	1358;"	d
CHAP_DIGEST_MD5	./net/lwip/netif/ppp/chap.h	82;"	d
CHAP_FAILURE	./net/lwip/netif/ppp/chap.h	90;"	d
CHAP_H	./net/lwip/netif/ppp/chap.h	69;"	d
CHAP_HEADERLEN	./net/lwip/netif/ppp/chap.h	76;"	d
CHAP_MICROSOFT	./net/lwip/netif/ppp/chap.h	84;"	d
CHAP_RESPONSE	./net/lwip/netif/ppp/chap.h	88;"	d
CHAP_SUCCESS	./net/lwip/netif/ppp/chap.h	89;"	d
CHAP_SUPPORT	./net/lwip/include/lwip/opt.h	1288;"	d
CHECKSUM_CHECK_IP	./net/lwip/include/lwip/opt.h	1433;"	d
CHECKSUM_CHECK_TCP	./net/lwip/include/lwip/opt.h	1447;"	d
CHECKSUM_CHECK_UDP	./net/lwip/include/lwip/opt.h	1440;"	d
CHECKSUM_GEN_IP	./net/lwip/include/lwip/opt.h	1412;"	d
CHECKSUM_GEN_TCP	./net/lwip/include/lwip/opt.h	1426;"	d
CHECKSUM_GEN_UDP	./net/lwip/include/lwip/opt.h	1419;"	d
CHPMS_H	./net/lwip/netif/ppp/chpms.h	58;"	d
CI_ACCOMPRESSION	./net/lwip/netif/ppp/lcp.h	69;"	d
CI_ADDR	./net/lwip/netif/ppp/ipcp.h	65;"	d
CI_ADDRS	./net/lwip/netif/ppp/ipcp.h	63;"	d
CI_ASYNCMAP	./net/lwip/netif/ppp/lcp.h	64;"	d
CI_AUTHTYPE	./net/lwip/netif/ppp/lcp.h	65;"	d
CI_CALLBACK	./net/lwip/netif/ppp/lcp.h	70;"	d
CI_COMPRESSTYPE	./net/lwip/netif/ppp/ipcp.h	64;"	d
CI_EPDISC	./net/lwip/netif/ppp/lcp.h	73;"	d
CI_MAGICNUMBER	./net/lwip/netif/ppp/lcp.h	67;"	d
CI_MRRU	./net/lwip/netif/ppp/lcp.h	71;"	d
CI_MRU	./net/lwip/netif/ppp/lcp.h	63;"	d
CI_MS_DNS1	./net/lwip/netif/ppp/ipcp.h	68;"	d
CI_MS_DNS2	./net/lwip/netif/ppp/ipcp.h	70;"	d
CI_MS_WINS1	./net/lwip/netif/ppp/ipcp.h	67;"	d
CI_MS_WINS2	./net/lwip/netif/ppp/ipcp.h	69;"	d
CI_PCOMPRESSION	./net/lwip/netif/ppp/lcp.h	68;"	d
CI_QUALITY	./net/lwip/netif/ppp/lcp.h	66;"	d
CI_SSNHF	./net/lwip/netif/ppp/lcp.h	72;"	d
CLOSED	./net/lwip/include/lwip/tcp.h	/^  CLOSED      = 0,$/;"	e	enum:tcp_state
CLOSE_WAIT	./net/lwip/include/lwip/tcp.h	/^  CLOSE_WAIT  = 7,$/;"	e	enum:tcp_state
CLOSING	./net/lwip/include/lwip/tcp.h	/^  CLOSING     = 8,$/;"	e	enum:tcp_state
CMDBYTE	./inc/kbdreg.h	60;"	d
CODEREJ	./net/lwip/netif/ppp/fsm.h	75;"	d
CONFACK	./net/lwip/netif/ppp/fsm.h	70;"	d
CONFNAK	./net/lwip/netif/ppp/fsm.h	71;"	d
CONFREJ	./net/lwip/netif/ppp/fsm.h	72;"	d
CONFREQ	./net/lwip/netif/ppp/fsm.h	69;"	d
CPU_HALTED	./kern/cpu.h	/^	CPU_HALTED,$/;"	e	enum:__anon1
CPU_STARTED	./kern/cpu.h	/^	CPU_STARTED,$/;"	e	enum:__anon1
CPU_UNUSED	./kern/cpu.h	/^	CPU_UNUSED = 0,$/;"	e	enum:__anon1
CR0_AM	./inc/mmu.h	86;"	d
CR0_CD	./inc/mmu.h	88;"	d
CR0_EM	./inc/mmu.h	81;"	d
CR0_ET	./inc/mmu.h	83;"	d
CR0_MP	./inc/mmu.h	80;"	d
CR0_NE	./inc/mmu.h	84;"	d
CR0_NW	./inc/mmu.h	87;"	d
CR0_PE	./inc/mmu.h	79;"	d
CR0_PG	./inc/mmu.h	89;"	d
CR0_TS	./inc/mmu.h	82;"	d
CR0_WP	./inc/mmu.h	85;"	d
CR4_DE	./inc/mmu.h	94;"	d
CR4_MCE	./inc/mmu.h	92;"	d
CR4_PCE	./inc/mmu.h	91;"	d
CR4_PSE	./inc/mmu.h	93;"	d
CR4_PVI	./inc/mmu.h	96;"	d
CR4_TSD	./inc/mmu.h	95;"	d
CR4_VME	./inc/mmu.h	97;"	d
CRT_COLS	./kern/console.h	17;"	d
CRT_ROWS	./kern/console.h	16;"	d
CRT_SIZE	./kern/console.h	18;"	d
ChapAuthPeer	./net/lwip/netif/ppp/chap.h	/^void ChapAuthPeer (int, char *, int);$/;"	p	signature:(int, char *, int)
ChapAuthWithPeer	./net/lwip/netif/ppp/chap.h	/^void ChapAuthWithPeer (int, char *, int);$/;"	p	signature:(int, char *, int)
ChapMS	./net/lwip/netif/ppp/chpms.h	/^void ChapMS (chap_state *, char *, int, char *, int);$/;"	p	signature:(chap_state *, char *, int, char *, int)
CpuInfo	./kern/cpu.h	/^struct CpuInfo {$/;"	s
CpuInfo::cpu_env	./kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env	access:public
CpuInfo::cpu_id	./kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo	access:public
CpuInfo::cpu_status	./kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo	access:public
CpuInfo::cpu_ts	./kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate	access:public
DBG_MIN_LEVEL	./net/lwip/jos/lwipopts.h	57;"	d
DEBUG_SPINLOCK	./kern/spinlock.h	7;"	d
DECPTR	./net/lwip/netif/ppp/ppp.h	208;"	d
DEFAULT	./net/ns.h	6;"	d
DEFAULT_ACCEPTMBOX_SIZE	./net/lwip/include/lwip/opt.h	1043;"	d
DEFAULT_RAW_RECVMBOX_SIZE	./net/lwip/include/lwip/opt.h	1016;"	d
DEFAULT_TCP_RECVMBOX_SIZE	./net/lwip/include/lwip/opt.h	1034;"	d
DEFAULT_THREAD_NAME	./net/lwip/include/lwip/opt.h	989;"	d
DEFAULT_THREAD_PRIO	./net/lwip/include/lwip/opt.h	1007;"	d
DEFAULT_THREAD_STACKSIZE	./net/lwip/include/lwip/opt.h	998;"	d
DEFAULT_UDP_RECVMBOX_SIZE	./net/lwip/include/lwip/opt.h	1025;"	d
DEFEND_INTERVAL	./net/lwip/include/ipv4/lwip/autoip.h	69;"	d
DEFLOOPBACKFAIL	./net/lwip/netif/ppp/lcp.h	165;"	d
DHCP_ACK	./net/lwip/include/lwip/dhcp.h	188;"	d
DHCP_AUTOIP_COOP_STATE_OFF	./net/lwip/include/lwip/dhcp.h	178;"	d
DHCP_AUTOIP_COOP_STATE_ON	./net/lwip/include/lwip/dhcp.h	179;"	d
DHCP_BACKING_OFF	./net/lwip/include/lwip/dhcp.h	174;"	d
DHCP_BOOTREPLY	./net/lwip/include/lwip/dhcp.h	182;"	d
DHCP_BOOTREQUEST	./net/lwip/include/lwip/dhcp.h	181;"	d
DHCP_BOUND	./net/lwip/include/lwip/dhcp.h	172;"	d
DHCP_BROADCAST_FLAG	./net/lwip/include/lwip/dhcp.h	197;"	d
DHCP_BROADCAST_MASK	./net/lwip/include/lwip/dhcp.h	198;"	d
DHCP_CHADDR_LEN	./net/lwip/include/lwip/dhcp.h	93;"	d
DHCP_CHADDR_OFS	./net/lwip/include/lwip/dhcp.h	151;"	d
DHCP_CHECKING	./net/lwip/include/lwip/dhcp.h	170;"	d
DHCP_CIADDR_OFS	./net/lwip/include/lwip/dhcp.h	147;"	d
DHCP_CLIENT_PORT	./net/lwip/include/lwip/dhcp.h	159;"	d
DHCP_COARSE_TIMER_MSECS	./net/lwip/include/lwip/dhcp.h	21;"	d
DHCP_COARSE_TIMER_SECS	./net/lwip/include/lwip/dhcp.h	19;"	d
DHCP_COOKIE_OFS	./net/lwip/include/lwip/dhcp.h	156;"	d
DHCP_DEBUG	./net/lwip/include/lwip/opt.h	1673;"	d
DHCP_DECLINE	./net/lwip/include/lwip/dhcp.h	187;"	d
DHCP_DISCOVER	./net/lwip/include/lwip/dhcp.h	184;"	d
DHCP_DOES_ARP_CHECK	./net/lwip/include/lwip/opt.h	490;"	d
DHCP_FILE_LEN	./net/lwip/include/lwip/dhcp.h	97;"	d
DHCP_FILE_OFS	./net/lwip/include/lwip/dhcp.h	153;"	d
DHCP_FINE_TIMER_MSECS	./net/lwip/include/lwip/dhcp.h	23;"	d
DHCP_FLAGS_OFS	./net/lwip/include/lwip/dhcp.h	146;"	d
DHCP_GIADDR_OFS	./net/lwip/include/lwip/dhcp.h	150;"	d
DHCP_HLEN_ETH	./net/lwip/include/lwip/dhcp.h	195;"	d
DHCP_HLEN_OFS	./net/lwip/include/lwip/dhcp.h	142;"	d
DHCP_HOPS_OFS	./net/lwip/include/lwip/dhcp.h	143;"	d
DHCP_HTYPE_ETH	./net/lwip/include/lwip/dhcp.h	193;"	d
DHCP_HTYPE_OFS	./net/lwip/include/lwip/dhcp.h	141;"	d
DHCP_INFORM	./net/lwip/include/lwip/dhcp.h	191;"	d
DHCP_INFORMING	./net/lwip/include/lwip/dhcp.h	169;"	d
DHCP_INIT	./net/lwip/include/lwip/dhcp.h	164;"	d
DHCP_MAX_DNS	./net/lwip/include/lwip/dhcp.h	55;"	d
DHCP_MIN_OPTIONS_LEN	./net/lwip/include/lwip/dhcp.h	100;"	d
DHCP_MSG_LEN	./net/lwip/include/lwip/dhcp.h	154;"	d
DHCP_MSG_OFS	./net/lwip/include/lwip/dhcp.h	139;"	d
DHCP_NAK	./net/lwip/include/lwip/dhcp.h	189;"	d
DHCP_OFF	./net/lwip/include/lwip/dhcp.h	175;"	d
DHCP_OFFER	./net/lwip/include/lwip/dhcp.h	185;"	d
DHCP_OPTIONS_LEN	./net/lwip/include/lwip/dhcp.h	103;"	d
DHCP_OPTIONS_LEN	./net/lwip/include/lwip/dhcp.h	108;"	d
DHCP_OPTIONS_OFS	./net/lwip/include/lwip/dhcp.h	157;"	d
DHCP_OPTION_BOOTFILE	./net/lwip/include/lwip/dhcp.h	232;"	d
DHCP_OPTION_BROADCAST	./net/lwip/include/lwip/dhcp.h	208;"	d
DHCP_OPTION_CLIENT_ID	./net/lwip/include/lwip/dhcp.h	230;"	d
DHCP_OPTION_DNS_SERVER	./net/lwip/include/lwip/dhcp.h	204;"	d
DHCP_OPTION_END	./net/lwip/include/lwip/dhcp.h	210;"	d
DHCP_OPTION_HOSTNAME	./net/lwip/include/lwip/dhcp.h	205;"	d
DHCP_OPTION_IP_TTL	./net/lwip/include/lwip/dhcp.h	206;"	d
DHCP_OPTION_LEASE_TIME	./net/lwip/include/lwip/dhcp.h	214;"	d
DHCP_OPTION_MAX_MSG_SIZE	./net/lwip/include/lwip/dhcp.h	224;"	d
DHCP_OPTION_MAX_MSG_SIZE_LEN	./net/lwip/include/lwip/dhcp.h	225;"	d
DHCP_OPTION_MESSAGE_TYPE	./net/lwip/include/lwip/dhcp.h	217;"	d
DHCP_OPTION_MESSAGE_TYPE_LEN	./net/lwip/include/lwip/dhcp.h	218;"	d
DHCP_OPTION_MTU	./net/lwip/include/lwip/dhcp.h	207;"	d
DHCP_OPTION_OVERLOAD	./net/lwip/include/lwip/dhcp.h	215;"	d
DHCP_OPTION_PAD	./net/lwip/include/lwip/dhcp.h	201;"	d
DHCP_OPTION_PARAMETER_REQUEST_LIST	./net/lwip/include/lwip/dhcp.h	222;"	d
DHCP_OPTION_REQUESTED_IP	./net/lwip/include/lwip/dhcp.h	213;"	d
DHCP_OPTION_ROUTER	./net/lwip/include/lwip/dhcp.h	203;"	d
DHCP_OPTION_SERVER_ID	./net/lwip/include/lwip/dhcp.h	221;"	d
DHCP_OPTION_SUBNET_MASK	./net/lwip/include/lwip/dhcp.h	202;"	d
DHCP_OPTION_T1	./net/lwip/include/lwip/dhcp.h	227;"	d
DHCP_OPTION_T2	./net/lwip/include/lwip/dhcp.h	228;"	d
DHCP_OPTION_TCP_TTL	./net/lwip/include/lwip/dhcp.h	209;"	d
DHCP_OPTION_TFTP_SERVERNAME	./net/lwip/include/lwip/dhcp.h	231;"	d
DHCP_OPTION_US	./net/lwip/include/lwip/dhcp.h	229;"	d
DHCP_OP_OFS	./net/lwip/include/lwip/dhcp.h	140;"	d
DHCP_OVERLOAD_FILE	./net/lwip/include/lwip/dhcp.h	236;"	d
DHCP_OVERLOAD_NONE	./net/lwip/include/lwip/dhcp.h	235;"	d
DHCP_OVERLOAD_SNAME	./net/lwip/include/lwip/dhcp.h	237;"	d
DHCP_OVERLOAD_SNAME_FILE	./net/lwip/include/lwip/dhcp.h	238;"	d
DHCP_PERMANENT	./net/lwip/include/lwip/dhcp.h	171;"	d
DHCP_REBINDING	./net/lwip/include/lwip/dhcp.h	166;"	d
DHCP_REBOOTING	./net/lwip/include/lwip/dhcp.h	165;"	d
DHCP_RELEASE	./net/lwip/include/lwip/dhcp.h	190;"	d
DHCP_RENEWING	./net/lwip/include/lwip/dhcp.h	167;"	d
DHCP_REQUEST	./net/lwip/include/lwip/dhcp.h	186;"	d
DHCP_REQUESTING	./net/lwip/include/lwip/dhcp.h	163;"	d
DHCP_SECS_OFS	./net/lwip/include/lwip/dhcp.h	145;"	d
DHCP_SELECTING	./net/lwip/include/lwip/dhcp.h	168;"	d
DHCP_SERVER_PORT	./net/lwip/include/lwip/dhcp.h	160;"	d
DHCP_SIADDR_OFS	./net/lwip/include/lwip/dhcp.h	149;"	d
DHCP_SNAME_LEN	./net/lwip/include/lwip/dhcp.h	95;"	d
DHCP_SNAME_OFS	./net/lwip/include/lwip/dhcp.h	152;"	d
DHCP_XID_OFS	./net/lwip/include/lwip/dhcp.h	144;"	d
DHCP_YIADDR_OFS	./net/lwip/include/lwip/dhcp.h	148;"	d
DISCREQ	./net/lwip/netif/ppp/lcp.h	81;"	d
DISKMAP	./fs/fs.h	9;"	d
DISKSIZE	./fs/fs.h	12;"	d
DNS_DEBUG	./net/lwip/include/lwip/opt.h	1701;"	d
DNS_DOES_NAME_CHECK	./net/lwip/include/lwip/opt.h	600;"	d
DNS_MAX_NAME_LENGTH	./net/lwip/include/lwip/opt.h	590;"	d
DNS_MAX_SERVERS	./net/lwip/include/lwip/opt.h	595;"	d
DNS_MSG_SIZE	./net/lwip/include/lwip/opt.h	612;"	d
DNS_RRCLASS_CH	./net/lwip/include/lwip/dns.h	65;"	d
DNS_RRCLASS_CS	./net/lwip/include/lwip/dns.h	64;"	d
DNS_RRCLASS_FLUSH	./net/lwip/include/lwip/dns.h	67;"	d
DNS_RRCLASS_HS	./net/lwip/include/lwip/dns.h	66;"	d
DNS_RRCLASS_IN	./net/lwip/include/lwip/dns.h	63;"	d
DNS_RRTYPE_A	./net/lwip/include/lwip/dns.h	45;"	d
DNS_RRTYPE_CNAME	./net/lwip/include/lwip/dns.h	49;"	d
DNS_RRTYPE_HINFO	./net/lwip/include/lwip/dns.h	57;"	d
DNS_RRTYPE_MB	./net/lwip/include/lwip/dns.h	51;"	d
DNS_RRTYPE_MD	./net/lwip/include/lwip/dns.h	47;"	d
DNS_RRTYPE_MF	./net/lwip/include/lwip/dns.h	48;"	d
DNS_RRTYPE_MG	./net/lwip/include/lwip/dns.h	52;"	d
DNS_RRTYPE_MINFO	./net/lwip/include/lwip/dns.h	58;"	d
DNS_RRTYPE_MR	./net/lwip/include/lwip/dns.h	53;"	d
DNS_RRTYPE_MX	./net/lwip/include/lwip/dns.h	59;"	d
DNS_RRTYPE_NS	./net/lwip/include/lwip/dns.h	46;"	d
DNS_RRTYPE_NULL	./net/lwip/include/lwip/dns.h	54;"	d
DNS_RRTYPE_PTR	./net/lwip/include/lwip/dns.h	56;"	d
DNS_RRTYPE_SOA	./net/lwip/include/lwip/dns.h	50;"	d
DNS_RRTYPE_TXT	./net/lwip/include/lwip/dns.h	60;"	d
DNS_RRTYPE_WKS	./net/lwip/include/lwip/dns.h	55;"	d
DNS_TABLE_SIZE	./net/lwip/include/lwip/opt.h	585;"	d
DNS_TMR_INTERVAL	./net/lwip/include/lwip/dns.h	42;"	d
DNS_USES_STATIC_BUF	./net/lwip/include/lwip/opt.h	607;"	d
Dev	./inc/fd.h	/^struct Dev {$/;"	s
Dev::dev_close	./inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev	access:public
Dev::dev_id	./inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev	access:public
Dev::dev_name	./inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev	access:public
Dev::dev_read	./inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev	access:public
Dev::dev_stat	./inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev	access:public
Dev::dev_trunc	./inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev	access:public
Dev::dev_write	./inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev	access:public
E1000_DEV_ID_82540EM	./kern/e1000.h	14;"	d
E1000_EERD	./kern/e1000.h	15;"	d
E1000_EERD_ADDR	./kern/e1000.h	80;"	d
E1000_EERD_DATA	./kern/e1000.h	81;"	d
E1000_EERD_DONE	./kern/e1000.h	82;"	d
E1000_EERD_READ	./kern/e1000.h	83;"	d
E1000_ICR	./kern/e1000.h	16;"	d
E1000_ICR_LSC	./kern/e1000.h	73;"	d
E1000_ICR_RXDMT0	./kern/e1000.h	75;"	d
E1000_ICR_RXO	./kern/e1000.h	76;"	d
E1000_ICR_RXSEQ	./kern/e1000.h	74;"	d
E1000_ICR_RXT0	./kern/e1000.h	77;"	d
E1000_IMS	./kern/e1000.h	17;"	d
E1000_IPGT	./kern/e1000.h	53;"	d
E1000_IPGT1	./kern/e1000.h	54;"	d
E1000_IPGT2	./kern/e1000.h	55;"	d
E1000_MTA	./kern/e1000.h	32;"	d
E1000_NUM_MAC_WORDS	./kern/e1000.h	89;"	d
E1000_RAH	./kern/e1000.h	34;"	d
E1000_RAH_AV	./kern/e1000.h	37;"	d
E1000_RAL	./kern/e1000.h	33;"	d
E1000_RCTL	./kern/e1000.h	18;"	d
E1000_RCTL_EN	./kern/e1000.h	46;"	d
E1000_RCTL_LBM_NO	./kern/e1000.h	48;"	d
E1000_RCTL_LPE	./kern/e1000.h	47;"	d
E1000_RCTL_SECRC	./kern/e1000.h	49;"	d
E1000_RCTL_SZ_2048	./kern/e1000.h	50;"	d
E1000_RDBAH	./kern/e1000.h	22;"	d
E1000_RDBAL	./kern/e1000.h	21;"	d
E1000_RDH	./kern/e1000.h	24;"	d
E1000_RDLEN	./kern/e1000.h	23;"	d
E1000_RDT	./kern/e1000.h	25;"	d
E1000_RDTR	./kern/e1000.h	26;"	d
E1000_RXD_STAT_DD	./kern/e1000.h	68;"	d
E1000_RXD_STAT_EOP	./kern/e1000.h	69;"	d
E1000_RXT0	./kern/e1000.h	86;"	d
E1000_TCTL	./kern/e1000.h	19;"	d
E1000_TCTL_COLD	./kern/e1000.h	43;"	d
E1000_TCTL_CT	./kern/e1000.h	42;"	d
E1000_TCTL_EN	./kern/e1000.h	40;"	d
E1000_TCTL_PSP	./kern/e1000.h	41;"	d
E1000_TDBAH	./kern/e1000.h	28;"	d
E1000_TDBAL	./kern/e1000.h	27;"	d
E1000_TDH	./kern/e1000.h	30;"	d
E1000_TDLEN	./kern/e1000.h	29;"	d
E1000_TDT	./kern/e1000.h	31;"	d
E1000_TIPG	./kern/e1000.h	20;"	d
E1000_TXD_CMD	./kern/e1000.h	58;"	d
E1000_TXD_CMD_DEXT	./kern/e1000.h	62;"	d
E1000_TXD_CMD_EOP	./kern/e1000.h	60;"	d
E1000_TXD_CMD_IP	./kern/e1000.h	65;"	d
E1000_TXD_CMD_RS	./kern/e1000.h	61;"	d
E1000_TXD_CMD_TCP	./kern/e1000.h	64;"	d
E1000_TXD_STAT	./kern/e1000.h	59;"	d
E1000_TXD_STAT_DD	./kern/e1000.h	63;"	d
E1000_VENDOR_ID	./kern/e1000.h	13;"	d
E2BIG	./net/lwip/include/lwip/arch.h	75;"	d
EACCES	./net/lwip/include/lwip/arch.h	81;"	d
EADDRINUSE	./net/lwip/include/lwip/arch.h	168;"	d
EADDRNOTAVAIL	./net/lwip/include/lwip/arch.h	169;"	d
EADV	./net/lwip/include/lwip/arch.h	138;"	d
EAFNOSUPPORT	./net/lwip/include/lwip/arch.h	167;"	d
EAGAIN	./net/lwip/include/lwip/arch.h	79;"	d
EAI_FAIL	./net/lwip/include/lwip/netdb.h	53;"	d
EAI_MEMORY	./net/lwip/include/lwip/netdb.h	54;"	d
EAI_NONAME	./net/lwip/include/lwip/netdb.h	51;"	d
EAI_SERVICE	./net/lwip/include/lwip/netdb.h	52;"	d
EALREADY	./net/lwip/include/lwip/arch.h	184;"	d
EBADE	./net/lwip/include/lwip/arch.h	120;"	d
EBADF	./net/lwip/include/lwip/arch.h	77;"	d
EBADFD	./net/lwip/include/lwip/arch.h	147;"	d
EBADMSG	./net/lwip/include/lwip/arch.h	144;"	d
EBADR	./net/lwip/include/lwip/arch.h	121;"	d
EBADRQC	./net/lwip/include/lwip/arch.h	124;"	d
EBADSLT	./net/lwip/include/lwip/arch.h	125;"	d
EBFONT	./net/lwip/include/lwip/arch.h	129;"	d
EBUSY	./net/lwip/include/lwip/arch.h	84;"	d
ECHILD	./net/lwip/include/lwip/arch.h	78;"	d
ECHOREP	./net/lwip/netif/ppp/lcp.h	80;"	d
ECHOREQ	./net/lwip/netif/ppp/lcp.h	79;"	d
ECHRNG	./net/lwip/include/lwip/arch.h	112;"	d
ECOMM	./net/lwip/include/lwip/arch.h	140;"	d
ECONNABORTED	./net/lwip/include/lwip/arch.h	173;"	d
ECONNREFUSED	./net/lwip/include/lwip/arch.h	181;"	d
ECONNRESET	./net/lwip/include/lwip/arch.h	174;"	d
EDEADLK	./net/lwip/include/lwip/arch.h	103;"	d
EDEADLOCK	./net/lwip/include/lwip/arch.h	127;"	d
EDESTADDRREQ	./net/lwip/include/lwip/arch.h	159;"	d
EDOM	./net/lwip/include/lwip/arch.h	101;"	d
EDOTDOT	./net/lwip/include/lwip/arch.h	143;"	d
EDQUOT	./net/lwip/include/lwip/arch.h	192;"	d
EEXIST	./net/lwip/include/lwip/arch.h	85;"	d
EFAULT	./net/lwip/include/lwip/arch.h	82;"	d
EFBIG	./net/lwip/include/lwip/arch.h	95;"	d
EHOSTDOWN	./net/lwip/include/lwip/arch.h	182;"	d
EHOSTUNREACH	./net/lwip/include/lwip/arch.h	183;"	d
EIDRM	./net/lwip/include/lwip/arch.h	111;"	d
EILSEQ	./net/lwip/include/lwip/arch.h	154;"	d
EINPROGRESS	./net/lwip/include/lwip/arch.h	185;"	d
EINTR	./net/lwip/include/lwip/arch.h	72;"	d
EINVAL	./net/lwip/include/lwip/arch.h	90;"	d
EIO	./net/lwip/include/lwip/arch.h	73;"	d
EISCONN	./net/lwip/include/lwip/arch.h	176;"	d
EISDIR	./net/lwip/include/lwip/arch.h	89;"	d
EISNAM	./net/lwip/include/lwip/arch.h	190;"	d
EL2HLT	./net/lwip/include/lwip/arch.h	119;"	d
EL2NSYNC	./net/lwip/include/lwip/arch.h	113;"	d
EL3HLT	./net/lwip/include/lwip/arch.h	114;"	d
EL3RST	./net/lwip/include/lwip/arch.h	115;"	d
ELF_MAGIC	./inc/elf.h	4;"	d
ELF_PROG_FLAG_EXEC	./inc/elf.h	52;"	d
ELF_PROG_FLAG_READ	./inc/elf.h	54;"	d
ELF_PROG_FLAG_WRITE	./inc/elf.h	53;"	d
ELF_PROG_LOAD	./inc/elf.h	49;"	d
ELF_SHN_UNDEF	./inc/elf.h	63;"	d
ELF_SHT_NULL	./inc/elf.h	57;"	d
ELF_SHT_PROGBITS	./inc/elf.h	58;"	d
ELF_SHT_STRTAB	./inc/elf.h	60;"	d
ELF_SHT_SYMTAB	./inc/elf.h	59;"	d
ELIBACC	./net/lwip/include/lwip/arch.h	149;"	d
ELIBBAD	./net/lwip/include/lwip/arch.h	150;"	d
ELIBEXEC	./net/lwip/include/lwip/arch.h	153;"	d
ELIBMAX	./net/lwip/include/lwip/arch.h	152;"	d
ELIBSCN	./net/lwip/include/lwip/arch.h	151;"	d
ELNRNG	./net/lwip/include/lwip/arch.h	116;"	d
ELOOP	./net/lwip/include/lwip/arch.h	108;"	d
EMEDIUMTYPE	./net/lwip/include/lwip/arch.h	195;"	d
EMFILE	./net/lwip/include/lwip/arch.h	92;"	d
EMLINK	./net/lwip/include/lwip/arch.h	99;"	d
EMSGSIZE	./net/lwip/include/lwip/arch.h	160;"	d
EMULTIHOP	./net/lwip/include/lwip/arch.h	142;"	d
ENABLE_LOOPBACK	./net/lwip/include/lwip/netif.h	37;"	d
ENAMETOOLONG	./net/lwip/include/lwip/arch.h	104;"	d
ENAVAIL	./net/lwip/include/lwip/arch.h	189;"	d
ENETDOWN	./net/lwip/include/lwip/arch.h	170;"	d
ENETRESET	./net/lwip/include/lwip/arch.h	172;"	d
ENETUNREACH	./net/lwip/include/lwip/arch.h	171;"	d
ENFILE	./net/lwip/include/lwip/arch.h	91;"	d
ENOANO	./net/lwip/include/lwip/arch.h	123;"	d
ENOBUFS	./net/lwip/include/lwip/arch.h	175;"	d
ENOCSI	./net/lwip/include/lwip/arch.h	118;"	d
ENODATA	./net/lwip/include/lwip/arch.h	131;"	d
ENODEV	./net/lwip/include/lwip/arch.h	87;"	d
ENOENT	./net/lwip/include/lwip/arch.h	70;"	d
ENOEXEC	./net/lwip/include/lwip/arch.h	76;"	d
ENOLCK	./net/lwip/include/lwip/arch.h	105;"	d
ENOLINK	./net/lwip/include/lwip/arch.h	137;"	d
ENOMEDIUM	./net/lwip/include/lwip/arch.h	194;"	d
ENOMEM	./net/lwip/include/lwip/arch.h	80;"	d
ENOMSG	./net/lwip/include/lwip/arch.h	110;"	d
ENONET	./net/lwip/include/lwip/arch.h	134;"	d
ENOPKG	./net/lwip/include/lwip/arch.h	135;"	d
ENOPROTOOPT	./net/lwip/include/lwip/arch.h	162;"	d
ENOSPC	./net/lwip/include/lwip/arch.h	96;"	d
ENOSR	./net/lwip/include/lwip/arch.h	133;"	d
ENOSTR	./net/lwip/include/lwip/arch.h	130;"	d
ENOSYS	./net/lwip/include/lwip/arch.h	106;"	d
ENOTBLK	./net/lwip/include/lwip/arch.h	83;"	d
ENOTCONN	./net/lwip/include/lwip/arch.h	177;"	d
ENOTDIR	./net/lwip/include/lwip/arch.h	88;"	d
ENOTEMPTY	./net/lwip/include/lwip/arch.h	107;"	d
ENOTNAM	./net/lwip/include/lwip/arch.h	188;"	d
ENOTSOCK	./net/lwip/include/lwip/arch.h	158;"	d
ENOTTY	./net/lwip/include/lwip/arch.h	93;"	d
ENOTUNIQ	./net/lwip/include/lwip/arch.h	146;"	d
ENSRBADFAMILY	./net/lwip/include/lwip/arch.h	207;"	d
ENSRBADNAME	./net/lwip/include/lwip/arch.h	206;"	d
ENSRBADQUERY	./net/lwip/include/lwip/arch.h	205;"	d
ENSRBADRESP	./net/lwip/include/lwip/arch.h	208;"	d
ENSRCNAMELOOP	./net/lwip/include/lwip/arch.h	216;"	d
ENSRCONNREFUSED	./net/lwip/include/lwip/arch.h	209;"	d
ENSRDESTRUCTION	./net/lwip/include/lwip/arch.h	214;"	d
ENSRFILE	./net/lwip/include/lwip/arch.h	212;"	d
ENSRFORMERR	./net/lwip/include/lwip/arch.h	200;"	d
ENSRNODATA	./net/lwip/include/lwip/arch.h	199;"	d
ENSRNOMEM	./net/lwip/include/lwip/arch.h	213;"	d
ENSRNOTFOUND	./net/lwip/include/lwip/arch.h	202;"	d
ENSRNOTIMP	./net/lwip/include/lwip/arch.h	203;"	d
ENSROF	./net/lwip/include/lwip/arch.h	211;"	d
ENSROK	./net/lwip/include/lwip/arch.h	198;"	d
ENSRQUERYDOMAINTOOLONG	./net/lwip/include/lwip/arch.h	215;"	d
ENSRREFUSED	./net/lwip/include/lwip/arch.h	204;"	d
ENSRSERVFAIL	./net/lwip/include/lwip/arch.h	201;"	d
ENSRTIMEOUT	./net/lwip/include/lwip/arch.h	210;"	d
ENVX	./inc/env.h	30;"	d
ENV_CREATE	./kern/env.h	29;"	d
ENV_DYING	./inc/env.h	/^	ENV_DYING,$/;"	e	enum:__anon8
ENV_FREE	./inc/env.h	/^	ENV_FREE = 0,$/;"	e	enum:__anon8
ENV_NOT_RUNNABLE	./inc/env.h	/^	ENV_NOT_RUNNABLE$/;"	e	enum:__anon8
ENV_PASTE3	./kern/env.h	27;"	d
ENV_RUNNABLE	./inc/env.h	/^	ENV_RUNNABLE,$/;"	e	enum:__anon8
ENV_RUNNING	./inc/env.h	/^	ENV_RUNNING,$/;"	e	enum:__anon8
ENV_TYPE_FS	./inc/env.h	/^	ENV_TYPE_FS,		\/\/ File system server$/;"	e	enum:EnvType
ENV_TYPE_NS	./inc/env.h	/^	ENV_TYPE_NS,		\/\/ Network server$/;"	e	enum:EnvType
ENV_TYPE_USER	./inc/env.h	/^	ENV_TYPE_USER = 0,$/;"	e	enum:EnvType
ENXIO	./net/lwip/include/lwip/arch.h	74;"	d
EOPNOTSUPP	./net/lwip/include/lwip/arch.h	165;"	d
EOVERFLOW	./net/lwip/include/lwip/arch.h	145;"	d
EPERM	./net/lwip/include/lwip/arch.h	69;"	d
EPFNOSUPPORT	./net/lwip/include/lwip/arch.h	166;"	d
EPIPE	./net/lwip/include/lwip/arch.h	100;"	d
EPROTO	./net/lwip/include/lwip/arch.h	141;"	d
EPROTONOSUPPORT	./net/lwip/include/lwip/arch.h	163;"	d
EPROTOTYPE	./net/lwip/include/lwip/arch.h	161;"	d
ERANGE	./net/lwip/include/lwip/arch.h	102;"	d
EREMCHG	./net/lwip/include/lwip/arch.h	148;"	d
EREMOTE	./net/lwip/include/lwip/arch.h	136;"	d
EREMOTEIO	./net/lwip/include/lwip/arch.h	191;"	d
ERESTART	./net/lwip/include/lwip/arch.h	155;"	d
EROFS	./net/lwip/include/lwip/arch.h	98;"	d
ERRNO	./net/lwip/jos/lwipopts.h	61;"	d
ERR_ABRT	./net/lwip/include/lwip/err.h	60;"	d
ERR_ARG	./net/lwip/include/lwip/err.h	67;"	d
ERR_BUF	./net/lwip/include/lwip/err.h	54;"	d
ERR_CLSD	./net/lwip/include/lwip/err.h	62;"	d
ERR_CONN	./net/lwip/include/lwip/err.h	63;"	d
ERR_IF	./net/lwip/include/lwip/err.h	71;"	d
ERR_INPROGRESS	./net/lwip/include/lwip/err.h	74;"	d
ERR_ISCONN	./net/lwip/include/lwip/err.h	72;"	d
ERR_IS_FATAL	./net/lwip/include/lwip/err.h	58;"	d
ERR_MEM	./net/lwip/include/lwip/err.h	53;"	d
ERR_OK	./net/lwip/include/lwip/err.h	52;"	d
ERR_RST	./net/lwip/include/lwip/err.h	61;"	d
ERR_RTE	./net/lwip/include/lwip/err.h	56;"	d
ERR_TIMEOUT	./net/lwip/include/lwip/err.h	55;"	d
ERR_USE	./net/lwip/include/lwip/err.h	69;"	d
ERR_VAL	./net/lwip/include/lwip/err.h	65;"	d
ESHUTDOWN	./net/lwip/include/lwip/arch.h	178;"	d
ESOCKTNOSUPPORT	./net/lwip/include/lwip/arch.h	164;"	d
ESPIPE	./net/lwip/include/lwip/arch.h	97;"	d
ESRCH	./net/lwip/include/lwip/arch.h	71;"	d
ESRMNT	./net/lwip/include/lwip/arch.h	139;"	d
ESTABLISHED	./net/lwip/include/lwip/tcp.h	/^  ESTABLISHED = 4,$/;"	e	enum:tcp_state
ESTALE	./net/lwip/include/lwip/arch.h	186;"	d
ESTRPIPE	./net/lwip/include/lwip/arch.h	156;"	d
ETHARP_DEBUG	./net/lwip/include/lwip/opt.h	1476;"	d
ETHARP_HWADDR_LEN	./net/lwip/include/netif/etharp.h	56;"	d
ETHARP_STATS	./net/lwip/include/lwip/opt.h	1157;"	d
ETHARP_STATS_DISPLAY	./net/lwip/include/lwip/stats.h	202;"	d
ETHARP_STATS_DISPLAY	./net/lwip/include/lwip/stats.h	205;"	d
ETHARP_STATS_INC	./net/lwip/include/lwip/stats.h	201;"	d
ETHARP_STATS_INC	./net/lwip/include/lwip/stats.h	204;"	d
ETHARP_TRUST_IP_MAC	./net/lwip/include/lwip/opt.h	348;"	d
ETHERMTU	./net/lwip/include/netif/ppp_oe.h	135;"	d
ETHTYPE_ARP	./net/lwip/include/netif/etharp.h	125;"	d
ETHTYPE_IP	./net/lwip/include/netif/etharp.h	126;"	d
ETHTYPE_PPPOE	./net/lwip/include/netif/etharp.h	128;"	d
ETHTYPE_PPPOEDISC	./net/lwip/include/netif/etharp.h	127;"	d
ETH_PAD_SIZE	./net/lwip/include/netif/etharp.h	52;"	d
ETIME	./net/lwip/include/lwip/arch.h	132;"	d
ETIMEDOUT	./net/lwip/include/lwip/arch.h	180;"	d
ETOOMANYREFS	./net/lwip/include/lwip/arch.h	179;"	d
ETXTBSY	./net/lwip/include/lwip/arch.h	94;"	d
EUCLEAN	./net/lwip/include/lwip/arch.h	187;"	d
EUNATCH	./net/lwip/include/lwip/arch.h	117;"	d
EUSERS	./net/lwip/include/lwip/arch.h	157;"	d
EWOULDBLOCK	./net/lwip/include/lwip/arch.h	109;"	d
EXDEV	./net/lwip/include/lwip/arch.h	86;"	d
EXFULL	./net/lwip/include/lwip/arch.h	122;"	d
EXTPHYSMEM	./inc/memlayout.h	93;"	d
E_BAD_ENV	./inc/error.h	/^	E_BAD_ENV	,	\/\/ Environment doesn't exist or otherwise$/;"	e	enum:__anon4
E_BAD_PATH	./inc/error.h	/^	E_BAD_PATH	,	\/\/ Bad path$/;"	e	enum:__anon4
E_E1000_RXBUF_EMPTY	./inc/error.h	/^	E_E1000_RXBUF_EMPTY,$/;"	e	enum:__anon4
E_E1000_TXBUF_FULL	./inc/error.h	/^	E_E1000_TXBUF_FULL,$/;"	e	enum:__anon4
E_EOF	./inc/error.h	/^	E_EOF		,	\/\/ Unexpected end of file$/;"	e	enum:__anon4
E_FAULT	./inc/error.h	/^	E_FAULT		,	\/\/ Memory fault$/;"	e	enum:__anon4
E_FILE_EXISTS	./inc/error.h	/^	E_FILE_EXISTS	,	\/\/ File already exists$/;"	e	enum:__anon4
E_INVAL	./inc/error.h	/^	E_INVAL		,	\/\/ Invalid parameter$/;"	e	enum:__anon4
E_IPC_NOT_RECV	./inc/error.h	/^	E_IPC_NOT_RECV	,	\/\/ Attempt to send to env that is not recving$/;"	e	enum:__anon4
E_MAX_OPEN	./inc/error.h	/^	E_MAX_OPEN	,	\/\/ Too many files are open$/;"	e	enum:__anon4
E_NOT_EXEC	./inc/error.h	/^	E_NOT_EXEC	,	\/\/ File not a valid executable$/;"	e	enum:__anon4
E_NOT_FOUND	./inc/error.h	/^	E_NOT_FOUND	, 	\/\/ File or block not found$/;"	e	enum:__anon4
E_NOT_SUPP	./inc/error.h	/^	E_NOT_SUPP	,	\/\/ Operation not supported$/;"	e	enum:__anon4
E_NO_DISK	./inc/error.h	/^	E_NO_DISK	,	\/\/ No free space left on disk$/;"	e	enum:__anon4
E_NO_FREE_ENV	./inc/error.h	/^	E_NO_FREE_ENV	,	\/\/ Attempt to create a new environment beyond$/;"	e	enum:__anon4
E_NO_MEM	./inc/error.h	/^	E_NO_MEM	,	\/\/ Request failed due to memory shortage$/;"	e	enum:__anon4
E_UNSPECIFIED	./inc/error.h	/^	E_UNSPECIFIED	= 1,	\/\/ Unspecified or unknown problem$/;"	e	enum:__anon4
Eipdebuginfo	./kern/kdebug.h	/^struct Eipdebuginfo {$/;"	s
Eipdebuginfo::eip_file	./kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_addr	./kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_name	./kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_namelen	./kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_fn_narg	./kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
Eipdebuginfo::eip_line	./kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
Elf	./inc/elf.h	/^struct Elf {$/;"	s
Elf::e_ehsize	./inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
Elf::e_elf	./inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
Elf::e_entry	./inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
Elf::e_flags	./inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
Elf::e_machine	./inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
Elf::e_magic	./inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
Elf::e_phentsize	./inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
Elf::e_phnum	./inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
Elf::e_phoff	./inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
Elf::e_shentsize	./inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
Elf::e_shnum	./inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
Elf::e_shoff	./inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
Elf::e_shstrndx	./inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
Elf::e_type	./inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
Elf::e_version	./inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
Env	./inc/env.h	/^struct Env {$/;"	s
Env::env_cpunum	./inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env	access:public
Env::env_e1000_waiting_rx	./inc/env.h	/^	bool env_e1000_waiting_rx;$/;"	m	struct:Env	access:public
Env::env_id	./inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env	access:public
Env::env_ipc_dstva	./inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env	access:public
Env::env_ipc_from	./inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env	access:public
Env::env_ipc_perm	./inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env	access:public
Env::env_ipc_recving	./inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env	access:public
Env::env_ipc_value	./inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env	access:public
Env::env_link	./inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env	access:public
Env::env_parent_id	./inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env	access:public
Env::env_pgdir	./inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env	access:public
Env::env_pgfault_upcall	./inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env	access:public
Env::env_runs	./inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env	access:public
Env::env_status	./inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env	access:public
Env::env_tf	./inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe	access:public
Env::env_type	./inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType	access:public
EnvType	./inc/env.h	/^enum EnvType {$/;"	g
FD_CLR	./net/lwip/include/lwip/sockets.h	277;"	d
FD_ISSET	./net/lwip/include/lwip/sockets.h	278;"	d
FD_SET	./net/lwip/include/lwip/sockets.h	276;"	d
FD_SETSIZE	./net/lwip/include/lwip/sockets.h	273;"	d
FD_SETSIZE	./net/lwip/include/lwip/sockets.h	275;"	d
FD_ZERO	./net/lwip/include/lwip/sockets.h	279;"	d
FEC_PR	./inc/mmu.h	123;"	d
FEC_U	./inc/mmu.h	125;"	d
FEC_WR	./inc/mmu.h	124;"	d
FIN_WAIT_1	./net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_1  = 5,$/;"	e	enum:tcp_state
FIN_WAIT_2	./net/lwip/include/lwip/tcp.h	/^  FIN_WAIT_2  = 6,$/;"	e	enum:tcp_state
FIONBIO	./net/lwip/include/lwip/sockets.h	254;"	d
FIONREAD	./net/lwip/include/lwip/sockets.h	251;"	d
FL_AC	./inc/mmu.h	117;"	d
FL_AF	./inc/mmu.h	102;"	d
FL_CF	./inc/mmu.h	100;"	d
FL_DF	./inc/mmu.h	107;"	d
FL_ID	./inc/mmu.h	120;"	d
FL_IF	./inc/mmu.h	106;"	d
FL_IOPL_0	./inc/mmu.h	110;"	d
FL_IOPL_1	./inc/mmu.h	111;"	d
FL_IOPL_2	./inc/mmu.h	112;"	d
FL_IOPL_3	./inc/mmu.h	113;"	d
FL_IOPL_MASK	./inc/mmu.h	109;"	d
FL_NT	./inc/mmu.h	114;"	d
FL_OF	./inc/mmu.h	108;"	d
FL_PF	./inc/mmu.h	101;"	d
FL_RF	./inc/mmu.h	115;"	d
FL_SF	./inc/mmu.h	104;"	d
FL_TF	./inc/mmu.h	105;"	d
FL_VIF	./inc/mmu.h	118;"	d
FL_VIP	./inc/mmu.h	119;"	d
FL_VM	./inc/mmu.h	116;"	d
FL_ZF	./inc/mmu.h	103;"	d
FSMDEBUG	./net/lwip/netif/ppp/pppdebug.h	70;"	d
FSMDEBUG	./net/lwip/netif/ppp/pppdebug.h	80;"	d
FSM_DEFMAXCONFREQS	./net/lwip/include/lwip/opt.h	1338;"	d
FSM_DEFMAXNAKLOOPS	./net/lwip/include/lwip/opt.h	1342;"	d
FSM_DEFMAXTERMREQS	./net/lwip/include/lwip/opt.h	1334;"	d
FSM_DEFTIMEOUT	./net/lwip/include/lwip/opt.h	1330;"	d
FSM_H	./net/lwip/netif/ppp/fsm.h	55;"	d
FSREQ_FLUSH	./inc/fs.h	/^	FSREQ_FLUSH,$/;"	e	enum:__anon10
FSREQ_OPEN	./inc/fs.h	/^	FSREQ_OPEN = 1,$/;"	e	enum:__anon10
FSREQ_READ	./inc/fs.h	/^	FSREQ_READ,$/;"	e	enum:__anon10
FSREQ_REMOVE	./inc/fs.h	/^	FSREQ_REMOVE,$/;"	e	enum:__anon10
FSREQ_SET_SIZE	./inc/fs.h	/^	FSREQ_SET_SIZE,$/;"	e	enum:__anon10
FSREQ_STAT	./inc/fs.h	/^	FSREQ_STAT,$/;"	e	enum:__anon10
FSREQ_SYNC	./inc/fs.h	/^	FSREQ_SYNC$/;"	e	enum:__anon10
FSREQ_WRITE	./inc/fs.h	/^	FSREQ_WRITE,$/;"	e	enum:__anon10
FS_MAGIC	./inc/fs.h	54;"	d
FTYPE_DIR	./inc/fs.h	49;"	d
FTYPE_REG	./inc/fs.h	48;"	d
Fd	./inc/fd.h	/^struct Fd {$/;"	s
Fd::__anon6::fd_file	./inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon6	typeref:struct:Fd::__anon6::FdFile	access:public
Fd::__anon6::fd_sock	./inc/fd.h	/^		struct FdSock fd_sock;$/;"	m	union:Fd::__anon6	typeref:struct:Fd::__anon6::FdSock	access:public
Fd::fd_dev_id	./inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd	access:public
Fd::fd_offset	./inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd	access:public
Fd::fd_omode	./inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd	access:public
FdFile	./inc/fd.h	/^struct FdFile {$/;"	s
FdFile::id	./inc/fd.h	/^	int id;$/;"	m	struct:FdFile	access:public
FdSock	./inc/fd.h	/^struct FdSock {$/;"	s
FdSock::sockid	./inc/fd.h	/^	int sockid;$/;"	m	struct:FdSock	access:public
File	./inc/fs.h	/^struct File {$/;"	s
File::f_direct	./inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File	access:public
File::f_indirect	./inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File	access:public
File::f_name	./inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File	access:public
File::f_pad	./inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File	access:public
File::f_size	./inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File	access:public
File::f_type	./inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File	access:public
Fsipc	./inc/fs.h	/^union Fsipc {$/;"	u
Fsipc::Fsreq_flush	./inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc	access:public
Fsipc::Fsreq_flush::req_fileid	./inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush	access:public
Fsipc::Fsreq_open	./inc/fs.h	/^	struct Fsreq_open {$/;"	s	union:Fsipc	access:public
Fsipc::Fsreq_open::req_omode	./inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open	access:public
Fsipc::Fsreq_open::req_path	./inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open	access:public
Fsipc::Fsreq_read	./inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc	access:public
Fsipc::Fsreq_read::req_fileid	./inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read	access:public
Fsipc::Fsreq_read::req_n	./inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read	access:public
Fsipc::Fsreq_remove	./inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc	access:public
Fsipc::Fsreq_remove::req_path	./inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove	access:public
Fsipc::Fsreq_set_size	./inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc	access:public
Fsipc::Fsreq_set_size::req_fileid	./inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size	access:public
Fsipc::Fsreq_set_size::req_size	./inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size	access:public
Fsipc::Fsreq_stat	./inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc	access:public
Fsipc::Fsreq_stat::req_fileid	./inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat	access:public
Fsipc::Fsreq_write	./inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc	access:public
Fsipc::Fsreq_write::req_buf	./inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write	access:public
Fsipc::Fsreq_write::req_fileid	./inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write	access:public
Fsipc::Fsreq_write::req_n	./inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write	access:public
Fsipc::Fsret_read	./inc/fs.h	/^	struct Fsret_read {$/;"	s	union:Fsipc	access:public
Fsipc::Fsret_read::ret_buf	./inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read	access:public
Fsipc::Fsret_stat	./inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc	access:public
Fsipc::Fsret_stat::ret_isdir	./inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat	access:public
Fsipc::Fsret_stat::ret_name	./inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat	access:public
Fsipc::Fsret_stat::ret_size	./inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat	access:public
Fsipc::_pad	./inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc	access:public
Fsipc::flush	./inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush	access:public
Fsipc::open	./inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open	access:public
Fsipc::read	./inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read	access:public
Fsipc::readRet	./inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read	access:public
Fsipc::remove	./inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove	access:public
Fsipc::set_size	./inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size	access:public
Fsipc::stat	./inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat	access:public
Fsipc::statRet	./inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat	access:public
Fsipc::write	./inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write	access:public
Fsreq_flush	./inc/fs.h	/^	struct Fsreq_flush {$/;"	s	union:Fsipc	access:public
Fsreq_open	./inc/fs.h	/^	struct Fsreq_open {$/;"	s	union:Fsipc	access:public
Fsreq_read	./inc/fs.h	/^	struct Fsreq_read {$/;"	s	union:Fsipc	access:public
Fsreq_remove	./inc/fs.h	/^	struct Fsreq_remove {$/;"	s	union:Fsipc	access:public
Fsreq_set_size	./inc/fs.h	/^	struct Fsreq_set_size {$/;"	s	union:Fsipc	access:public
Fsreq_stat	./inc/fs.h	/^	struct Fsreq_stat {$/;"	s	union:Fsipc	access:public
Fsreq_write	./inc/fs.h	/^	struct Fsreq_write {$/;"	s	union:Fsipc	access:public
Fsret_read	./inc/fs.h	/^	struct Fsret_read {$/;"	s	union:Fsipc	access:public
Fsret_stat	./inc/fs.h	/^	struct Fsret_stat {$/;"	s	union:Fsipc	access:public
GD_KD	./inc/memlayout.h	16;"	d
GD_KT	./inc/memlayout.h	15;"	d
GD_TSS0	./inc/memlayout.h	19;"	d
GD_UD	./inc/memlayout.h	18;"	d
GD_UT	./inc/memlayout.h	17;"	d
GETCHAR	./net/lwip/netif/ppp/ppp.h	176;"	d
GETLONG	./net/lwip/netif/ppp/ppp.h	193;"	d
GETSHORT	./net/lwip/netif/ppp/ppp.h	184;"	d
Gatedesc	./inc/mmu.h	/^struct Gatedesc {$/;"	s
Gatedesc::gd_args	./inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_dpl	./inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_15_0	./inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_off_31_16	./inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_p	./inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_rsv1	./inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_s	./inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_sel	./inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
Gatedesc::gd_type	./inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
GetMask	./net/lwip/netif/ppp/ppp.h	/^u32_t GetMask (u32_t); $/;"	p	signature:(u32_t)
HEADERLEN	./net/lwip/netif/ppp/fsm.h	63;"	d
HOST_NOT_FOUND	./net/lwip/include/lwip/netdb.h	56;"	d
ICMP6_DUR	./net/lwip/include/ipv6/lwip/icmp.h	46;"	d
ICMP6_ECHO	./net/lwip/include/ipv6/lwip/icmp.h	48;"	d
ICMP6_ER	./net/lwip/include/ipv6/lwip/icmp.h	49;"	d
ICMP6_TE	./net/lwip/include/ipv6/lwip/icmp.h	47;"	d
ICMPH_CODE	./net/lwip/include/ipv4/lwip/icmp.h	110;"	d
ICMPH_CODE_SET	./net/lwip/include/ipv4/lwip/icmp.h	113;"	d
ICMPH_TYPE	./net/lwip/include/ipv4/lwip/icmp.h	109;"	d
ICMPH_TYPE_SET	./net/lwip/include/ipv4/lwip/icmp.h	112;"	d
ICMP_DEBUG	./net/lwip/include/lwip/opt.h	1518;"	d
ICMP_DUR	./net/lwip/include/ipv4/lwip/icmp.h	48;"	d
ICMP_DUR_FRAG	./net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_FRAG	./net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_FRAG = 4,   \/* fragmentation needed and DF set *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	./net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_HOST	./net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_HOST = 1,   \/* host unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	./net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_NET	./net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_NET = 0,    \/* net unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	./net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PORT	./net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PORT = 3,   \/* port unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	./net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_PROTO	./net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_PROTO = 2,  \/* protocol unreachable *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	./net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_DUR_SR	./net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_DUR_SR = 5      \/* source route failed *\/$/;"	e	enum:icmp_dur_type
ICMP_ECHO	./net/lwip/include/ipv4/lwip/icmp.h	51;"	d
ICMP_ER	./net/lwip/include/ipv4/lwip/icmp.h	47;"	d
ICMP_IR	./net/lwip/include/ipv4/lwip/icmp.h	57;"	d
ICMP_IRQ	./net/lwip/include/ipv4/lwip/icmp.h	56;"	d
ICMP_PP	./net/lwip/include/ipv4/lwip/icmp.h	53;"	d
ICMP_RD	./net/lwip/include/ipv4/lwip/icmp.h	50;"	d
ICMP_SQ	./net/lwip/include/ipv4/lwip/icmp.h	49;"	d
ICMP_STATS	./net/lwip/include/lwip/opt.h	1179;"	d
ICMP_STATS	./net/lwip/include/lwip/opt.h	1231;"	d
ICMP_STATS_DISPLAY	./net/lwip/include/lwip/stats.h	170;"	d
ICMP_STATS_DISPLAY	./net/lwip/include/lwip/stats.h	173;"	d
ICMP_STATS_INC	./net/lwip/include/lwip/stats.h	169;"	d
ICMP_STATS_INC	./net/lwip/include/lwip/stats.h	172;"	d
ICMP_TE	./net/lwip/include/ipv4/lwip/icmp.h	52;"	d
ICMP_TE_FRAG	./net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_FRAG	./net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_FRAG = 1     \/* fragment reassembly time exceeded *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	./net/lwip/include/ipv4/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TE_TTL	./net/lwip/include/ipv6/lwip/icmp.h	/^  ICMP_TE_TTL = 0,     \/* time to live exceeded in transit *\/$/;"	e	enum:icmp_te_type
ICMP_TS	./net/lwip/include/ipv4/lwip/icmp.h	54;"	d
ICMP_TSR	./net/lwip/include/ipv4/lwip/icmp.h	55;"	d
ICMP_TTL	./net/lwip/include/lwip/opt.h	452;"	d
IGMP_ADD_MAC_FILTER	./net/lwip/include/ipv4/lwip/igmp.h	73;"	d
IGMP_DEBUG	./net/lwip/include/lwip/opt.h	1525;"	d
IGMP_DEL_MAC_FILTER	./net/lwip/include/ipv4/lwip/igmp.h	72;"	d
IGMP_GROUP_DELAYING_MEMBER	./net/lwip/include/ipv4/lwip/igmp.h	77;"	d
IGMP_GROUP_IDLE_MEMBER	./net/lwip/include/ipv4/lwip/igmp.h	78;"	d
IGMP_GROUP_NON_MEMBER	./net/lwip/include/ipv4/lwip/igmp.h	76;"	d
IGMP_JOIN_DELAYING_MEMBER_TMR	./net/lwip/include/ipv4/lwip/igmp.h	69;"	d
IGMP_LEAVE_GROUP	./net/lwip/include/ipv4/lwip/igmp.h	64;"	d
IGMP_MEMB_QUERY	./net/lwip/include/ipv4/lwip/igmp.h	61;"	d
IGMP_MINLEN	./net/lwip/include/ipv4/lwip/igmp.h	54;"	d
IGMP_STATS	./net/lwip/include/lwip/opt.h	1186;"	d
IGMP_STATS	./net/lwip/include/lwip/opt.h	1232;"	d
IGMP_STATS_DISPLAY	./net/lwip/include/lwip/stats.h	178;"	d
IGMP_STATS_DISPLAY	./net/lwip/include/lwip/stats.h	181;"	d
IGMP_STATS_INC	./net/lwip/include/lwip/stats.h	177;"	d
IGMP_STATS_INC	./net/lwip/include/lwip/stats.h	180;"	d
IGMP_TMR_INTERVAL	./net/lwip/include/ipv4/lwip/igmp.h	67;"	d
IGMP_TTL	./net/lwip/include/ipv4/lwip/igmp.h	53;"	d
IGMP_V1_DELAYING_MEMBER_TMR	./net/lwip/include/ipv4/lwip/igmp.h	68;"	d
IGMP_V1_MEMB_REPORT	./net/lwip/include/ipv4/lwip/igmp.h	62;"	d
IGMP_V2_MEMB_REPORT	./net/lwip/include/ipv4/lwip/igmp.h	63;"	d
INADDR_ANY	./net/lwip/include/lwip/sockets.h	127;"	d
INADDR_BROADCAST	./net/lwip/include/lwip/sockets.h	128;"	d
INADDR_LOOPBACK	./net/lwip/include/ipv4/lwip/ip_addr.h	81;"	d
INADDR_NONE	./net/lwip/include/ipv4/lwip/ip_addr.h	80;"	d
INCPTR	./net/lwip/netif/ppp/ppp.h	207;"	d
INET_DEBUG	./net/lwip/include/lwip/opt.h	1532;"	d
IN_BADCLASS	./net/lwip/include/ipv4/lwip/ip_addr.h	112;"	d
IN_CLASSA	./net/lwip/include/ipv4/lwip/ip_addr.h	88;"	d
IN_CLASSA_HOST	./net/lwip/include/ipv4/lwip/ip_addr.h	91;"	d
IN_CLASSA_MAX	./net/lwip/include/ipv4/lwip/ip_addr.h	92;"	d
IN_CLASSA_NET	./net/lwip/include/ipv4/lwip/ip_addr.h	89;"	d
IN_CLASSA_NSHIFT	./net/lwip/include/ipv4/lwip/ip_addr.h	90;"	d
IN_CLASSB	./net/lwip/include/ipv4/lwip/ip_addr.h	94;"	d
IN_CLASSB_HOST	./net/lwip/include/ipv4/lwip/ip_addr.h	97;"	d
IN_CLASSB_MAX	./net/lwip/include/ipv4/lwip/ip_addr.h	98;"	d
IN_CLASSB_NET	./net/lwip/include/ipv4/lwip/ip_addr.h	95;"	d
IN_CLASSB_NSHIFT	./net/lwip/include/ipv4/lwip/ip_addr.h	96;"	d
IN_CLASSC	./net/lwip/include/ipv4/lwip/ip_addr.h	100;"	d
IN_CLASSC_HOST	./net/lwip/include/ipv4/lwip/ip_addr.h	103;"	d
IN_CLASSC_NET	./net/lwip/include/ipv4/lwip/ip_addr.h	101;"	d
IN_CLASSC_NSHIFT	./net/lwip/include/ipv4/lwip/ip_addr.h	102;"	d
IN_CLASSD	./net/lwip/include/ipv4/lwip/ip_addr.h	105;"	d
IN_CLASSD_HOST	./net/lwip/include/ipv4/lwip/ip_addr.h	108;"	d
IN_CLASSD_NET	./net/lwip/include/ipv4/lwip/ip_addr.h	106;"	d
IN_CLASSD_NSHIFT	./net/lwip/include/ipv4/lwip/ip_addr.h	107;"	d
IN_EXPERIMENTAL	./net/lwip/include/ipv4/lwip/ip_addr.h	111;"	d
IN_LOOPBACKNET	./net/lwip/include/ipv4/lwip/ip_addr.h	114;"	d
IN_MULTICAST	./net/lwip/include/ipv4/lwip/ip_addr.h	109;"	d
IOCPARM_MASK	./net/lwip/include/lwip/sockets.h	236;"	d
IOC_IN	./net/lwip/include/lwip/sockets.h	239;"	d
IOC_INOUT	./net/lwip/include/lwip/sockets.h	240;"	d
IOC_OUT	./net/lwip/include/lwip/sockets.h	238;"	d
IOC_VOID	./net/lwip/include/lwip/sockets.h	237;"	d
IOPHYSMEM	./inc/memlayout.h	92;"	d
IO_PIC1	./kern/picirq.h	12;"	d
IO_PIC2	./kern/picirq.h	13;"	d
IO_RTC	./kern/kclock.h	9;"	d
IP	./net/ns.h	4;"	d
IP4_ADDR	./net/lwip/include/ipv4/lwip/ip_addr.h	116;"	d
IP6_ADDR	./net/lwip/include/ipv6/lwip/ip_addr.h	71;"	d
IPCPDEBUG	./net/lwip/netif/ppp/pppdebug.h	67;"	d
IPCPDEBUG	./net/lwip/netif/ppp/pppdebug.h	77;"	d
IPCP_H	./net/lwip/netif/ppp/ipcp.h	55;"	d
IPCP_VJMODE_OLD	./net/lwip/netif/ppp/ipcp.h	72;"	d
IPCP_VJMODE_RFC1172	./net/lwip/netif/ppp/ipcp.h	73;"	d
IPCP_VJMODE_RFC1332	./net/lwip/netif/ppp/ipcp.h	74;"	d
IPCP_VJ_COMP	./net/lwip/netif/ppp/ipcp.h	77;"	d
IPCP_VJ_COMP_OLD	./net/lwip/netif/ppp/ipcp.h	78;"	d
IPFRAG_STATS	./net/lwip/include/lwip/opt.h	1172;"	d
IPFRAG_STATS	./net/lwip/include/lwip/opt.h	1230;"	d
IPFRAG_STATS_DISPLAY	./net/lwip/include/lwip/stats.h	194;"	d
IPFRAG_STATS_DISPLAY	./net/lwip/include/lwip/stats.h	197;"	d
IPFRAG_STATS_INC	./net/lwip/include/lwip/stats.h	193;"	d
IPFRAG_STATS_INC	./net/lwip/include/lwip/stats.h	196;"	d
IPH_CHKSUM	./net/lwip/include/ipv4/lwip/ip.h	151;"	d
IPH_CHKSUM_SET	./net/lwip/include/ipv4/lwip/ip.h	159;"	d
IPH_HL	./net/lwip/include/ipv4/lwip/ip.h	144;"	d
IPH_ID	./net/lwip/include/ipv4/lwip/ip.h	147;"	d
IPH_ID_SET	./net/lwip/include/ipv4/lwip/ip.h	155;"	d
IPH_LEN	./net/lwip/include/ipv4/lwip/ip.h	146;"	d
IPH_LEN_SET	./net/lwip/include/ipv4/lwip/ip.h	154;"	d
IPH_OFFSET	./net/lwip/include/ipv4/lwip/ip.h	148;"	d
IPH_OFFSET_SET	./net/lwip/include/ipv4/lwip/ip.h	156;"	d
IPH_PROTO	./net/lwip/include/ipv4/lwip/ip.h	150;"	d
IPH_PROTO	./net/lwip/include/ipv6/lwip/ip.h	99;"	d
IPH_PROTO_SET	./net/lwip/include/ipv4/lwip/ip.h	158;"	d
IPH_TOS	./net/lwip/include/ipv4/lwip/ip.h	145;"	d
IPH_TTL	./net/lwip/include/ipv4/lwip/ip.h	149;"	d
IPH_TTL_SET	./net/lwip/include/ipv4/lwip/ip.h	157;"	d
IPH_V	./net/lwip/include/ipv4/lwip/ip.h	143;"	d
IPH_VHLTOS_SET	./net/lwip/include/ipv4/lwip/ip.h	153;"	d
IPPROTO_IP	./net/lwip/include/lwip/sockets.h	122;"	d
IPPROTO_TCP	./net/lwip/include/lwip/sockets.h	123;"	d
IPPROTO_UDP	./net/lwip/include/lwip/sockets.h	124;"	d
IPPROTO_UDPLITE	./net/lwip/include/lwip/sockets.h	125;"	d
IPTOS_LOWCOST	./net/lwip/include/lwip/sockets.h	201;"	d
IPTOS_LOWDELAY	./net/lwip/include/lwip/sockets.h	198;"	d
IPTOS_MINCOST	./net/lwip/include/lwip/sockets.h	202;"	d
IPTOS_PREC	./net/lwip/include/lwip/sockets.h	214;"	d
IPTOS_PREC_CRITIC_ECP	./net/lwip/include/lwip/sockets.h	217;"	d
IPTOS_PREC_FLASH	./net/lwip/include/lwip/sockets.h	219;"	d
IPTOS_PREC_FLASHOVERRIDE	./net/lwip/include/lwip/sockets.h	218;"	d
IPTOS_PREC_IMMEDIATE	./net/lwip/include/lwip/sockets.h	220;"	d
IPTOS_PREC_INTERNETCONTROL	./net/lwip/include/lwip/sockets.h	216;"	d
IPTOS_PREC_MASK	./net/lwip/include/lwip/sockets.h	213;"	d
IPTOS_PREC_NETCONTROL	./net/lwip/include/lwip/sockets.h	215;"	d
IPTOS_PREC_PRIORITY	./net/lwip/include/lwip/sockets.h	221;"	d
IPTOS_PREC_ROUTINE	./net/lwip/include/lwip/sockets.h	222;"	d
IPTOS_RELIABILITY	./net/lwip/include/lwip/sockets.h	200;"	d
IPTOS_THROUGHPUT	./net/lwip/include/lwip/sockets.h	199;"	d
IPTOS_TOS	./net/lwip/include/lwip/sockets.h	197;"	d
IPTOS_TOS_MASK	./net/lwip/include/lwip/sockets.h	196;"	d
IP_ADDR_ANY	./net/lwip/include/ipv4/lwip/ip_addr.h	77;"	d
IP_ADDR_ANY	./net/lwip/include/ipv6/lwip/ip_addr.h	41;"	d
IP_ADDR_BROADCAST	./net/lwip/include/ipv4/lwip/ip_addr.h	78;"	d
IP_ADD_MEMBERSHIP	./net/lwip/include/lwip/sockets.h	168;"	d
IP_DEBUG	./net/lwip/include/lwip/opt.h	1539;"	d
IP_DEFAULT_TTL	./net/lwip/include/lwip/opt.h	432;"	d
IP_DF	./net/lwip/include/ipv4/lwip/ip.h	127;"	d
IP_DF	./net/lwip/netif/ppp/vjbsdhdr.h	33;"	d
IP_DROP_MEMBERSHIP	./net/lwip/include/lwip/sockets.h	169;"	d
IP_FORWARD	./net/lwip/include/lwip/opt.h	362;"	d
IP_FRAG	./net/lwip/include/lwip/opt.h	389;"	d
IP_FRAG_MAX_MTU	./net/lwip/include/lwip/opt.h	425;"	d
IP_FRAG_USES_STATIC_BUF	./net/lwip/include/lwip/opt.h	417;"	d
IP_HDRINCL	./net/lwip/include/ipv4/lwip/ip.h	66;"	d
IP_HDRINCL	./net/lwip/include/ipv4/lwip/ip.h	68;"	d
IP_HDRINCL	./net/lwip/include/ipv6/lwip/ip.h	57;"	d
IP_HDRINCL	./net/lwip/include/ipv6/lwip/ip.h	59;"	d
IP_HLEN	./net/lwip/include/ipv4/lwip/ip.h	55;"	d
IP_HLEN	./net/lwip/include/ipv6/lwip/ip.h	46;"	d
IP_MF	./net/lwip/include/ipv4/lwip/ip.h	128;"	d
IP_MF	./net/lwip/netif/ppp/vjbsdhdr.h	34;"	d
IP_MULTICAST_IF	./net/lwip/include/lwip/sockets.h	171;"	d
IP_MULTICAST_LOOP	./net/lwip/include/lwip/sockets.h	172;"	d
IP_MULTICAST_TTL	./net/lwip/include/lwip/sockets.h	170;"	d
IP_OFFMASK	./net/lwip/include/ipv4/lwip/ip.h	129;"	d
IP_OFFMASK	./net/lwip/netif/ppp/vjbsdhdr.h	35;"	d
IP_OPTIONS_ALLOWED	./net/lwip/include/lwip/opt.h	371;"	d
IP_PCB	./net/lwip/include/ipv4/lwip/ip.h	/^  IP_PCB;$/;"	m	struct:ip_pcb	access:public
IP_PCB	./net/lwip/include/ipv4/lwip/ip.h	80;"	d
IP_PCB	./net/lwip/include/ipv6/lwip/ip.h	71;"	d
IP_PCB	./net/lwip/include/lwip/raw.h	/^  IP_PCB;$/;"	m	struct:raw_pcb	access:public
IP_PCB	./net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb	access:public
IP_PCB	./net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb_listen	access:public
IP_PCB	./net/lwip/include/lwip/udp.h	/^  IP_PCB;$/;"	m	struct:udp_pcb	access:public
IP_PCB_ADDRHINT	./net/lwip/include/ipv4/lwip/ip.h	71;"	d
IP_PCB_ADDRHINT	./net/lwip/include/ipv4/lwip/ip.h	73;"	d
IP_PCB_ADDRHINT	./net/lwip/include/ipv6/lwip/ip.h	62;"	d
IP_PCB_ADDRHINT	./net/lwip/include/ipv6/lwip/ip.h	64;"	d
IP_PROTO_ICMP	./net/lwip/include/ipv4/lwip/ip.h	57;"	d
IP_PROTO_ICMP	./net/lwip/include/ipv6/lwip/ip.h	48;"	d
IP_PROTO_IGMP	./net/lwip/include/ipv4/lwip/igmp.h	52;"	d
IP_PROTO_TCP	./net/lwip/include/ipv4/lwip/ip.h	60;"	d
IP_PROTO_TCP	./net/lwip/include/ipv6/lwip/ip.h	51;"	d
IP_PROTO_UDP	./net/lwip/include/ipv4/lwip/ip.h	58;"	d
IP_PROTO_UDP	./net/lwip/include/ipv6/lwip/ip.h	49;"	d
IP_PROTO_UDPLITE	./net/lwip/include/ipv4/lwip/ip.h	59;"	d
IP_PROTO_UDPLITE	./net/lwip/include/ipv6/lwip/ip.h	50;"	d
IP_REASSEMBLY	./net/lwip/include/lwip/opt.h	380;"	d
IP_REASS_DEBUG	./net/lwip/include/lwip/opt.h	1546;"	d
IP_REASS_MAXAGE	./net/lwip/include/lwip/opt.h	398;"	d
IP_REASS_MAX_PBUFS	./net/lwip/include/lwip/opt.h	408;"	d
IP_RF	./net/lwip/include/ipv4/lwip/ip.h	126;"	d
IP_STATS	./net/lwip/include/lwip/opt.h	1164;"	d
IP_STATS	./net/lwip/include/lwip/opt.h	1229;"	d
IP_STATS_DISPLAY	./net/lwip/include/lwip/stats.h	186;"	d
IP_STATS_DISPLAY	./net/lwip/include/lwip/stats.h	189;"	d
IP_STATS_INC	./net/lwip/include/lwip/stats.h	185;"	d
IP_STATS_INC	./net/lwip/include/lwip/stats.h	188;"	d
IP_TMR_INTERVAL	./net/lwip/include/ipv4/lwip/ip_frag.h	49;"	d
IP_TOS	./net/lwip/include/lwip/sockets.h	141;"	d
IP_TTL	./net/lwip/include/lwip/sockets.h	142;"	d
IRQ_E1000	./inc/trap.h	39;"	d
IRQ_ERROR	./inc/trap.h	41;"	d
IRQ_IDE	./inc/trap.h	40;"	d
IRQ_KBD	./inc/trap.h	36;"	d
IRQ_OFFSET	./inc/trap.h	32;"	d
IRQ_SERIAL	./inc/trap.h	37;"	d
IRQ_SLAVE	./kern/picirq.h	15;"	d
IRQ_SPURIOUS	./inc/trap.h	38;"	d
IRQ_TIMER	./inc/trap.h	35;"	d
JOS_INC_ARGS_H	./inc/args.h	2;"	d
JOS_INC_ASSERT_H	./inc/assert.h	4;"	d
JOS_INC_CPU_H	./kern/cpu.h	3;"	d
JOS_INC_ELF_H	./inc/elf.h	2;"	d
JOS_INC_ENV_H	./inc/env.h	4;"	d
JOS_INC_ERROR_H	./inc/error.h	4;"	d
JOS_INC_FD_H	./inc/fd.h	6;"	d
JOS_INC_FS_H	./inc/fs.h	4;"	d
JOS_INC_LIB_H	./inc/lib.h	8;"	d
JOS_INC_MALLOC_H	./inc/malloc.h	2;"	d
JOS_INC_MEMLAYOUT_H	./inc/memlayout.h	2;"	d
JOS_INC_MMU_H	./inc/mmu.h	2;"	d
JOS_INC_NS_H	./inc/ns.h	4;"	d
JOS_INC_PARTITION_H	./inc/partition.h	2;"	d
JOS_INC_PERROR_H	./net/lwip/jos/arch/perror.h	2;"	d
JOS_INC_SETJMP_H	./net/lwip/jos/arch/setjmp.h	2;"	d
JOS_INC_SPINLOCK_H	./kern/spinlock.h	2;"	d
JOS_INC_STDARG_H	./inc/stdarg.h	4;"	d
JOS_INC_STDIO_H	./inc/stdio.h	2;"	d
JOS_INC_STRING_H	./inc/string.h	2;"	d
JOS_INC_SYSCALL_H	./inc/syscall.h	2;"	d
JOS_INC_THREADQ_H	./net/lwip/jos/arch/threadq.h	2;"	d
JOS_INC_TRAP_H	./inc/trap.h	2;"	d
JOS_INC_TYPES_H	./inc/types.h	2;"	d
JOS_INC_X86_H	./inc/x86.h	2;"	d
JOS_KBDREG_H	./inc/kbdreg.h	2;"	d
JOS_KERN_E1000_H	./kern/e1000.h	2;"	d
JOS_KERN_ENV_H	./kern/env.h	4;"	d
JOS_KERN_KCLOCK_H	./kern/kclock.h	4;"	d
JOS_KERN_KDEBUG_H	./kern/kdebug.h	2;"	d
JOS_KERN_MONITOR_H	./kern/monitor.h	2;"	d
JOS_KERN_PCI_H	./kern/pci.h	2;"	d
JOS_KERN_PICIRQ_H	./kern/picirq.h	4;"	d
JOS_KERN_PMAP_H	./kern/pmap.h	4;"	d
JOS_KERN_SCHED_H	./kern/sched.h	4;"	d
JOS_KERN_SYSCALL_H	./kern/syscall.h	2;"	d
JOS_KERN_TIME_H	./kern/time.h	2;"	d
JOS_KERN_TRAP_H	./kern/trap.h	4;"	d
JOS_LONGJMP_GCCATTR	./net/lwip/jos/arch/i386/setjmp.h	6;"	d
JOS_LWIP_LWIPOPTS_H	./net/lwip/jos/lwipopts.h	2;"	d
JOS_MACHINE_SETJMP_H	./net/lwip/jos/arch/i386/setjmp.h	2;"	d
JOS_STAB_H	./inc/stab.h	2;"	d
KADDR	./kern/pmap.h	38;"	d
KBCMDP	./inc/kbdreg.h	29;"	d
KBC_AUXDISABLE	./inc/kbdreg.h	32;"	d
KBC_AUXECHO	./inc/kbdreg.h	36;"	d
KBC_AUXENABLE	./inc/kbdreg.h	33;"	d
KBC_AUXTEST	./inc/kbdreg.h	34;"	d
KBC_AUXWRITE	./inc/kbdreg.h	37;"	d
KBC_DISABLE	./inc/kbdreg.h	66;"	d
KBC_ECHO	./inc/kbdreg.h	71;"	d
KBC_ENABLE	./inc/kbdreg.h	67;"	d
KBC_KBDDISABLE	./inc/kbdreg.h	40;"	d
KBC_KBDECHO	./inc/kbdreg.h	35;"	d
KBC_KBDENABLE	./inc/kbdreg.h	41;"	d
KBC_KBDTEST	./inc/kbdreg.h	39;"	d
KBC_MODEIND	./inc/kbdreg.h	70;"	d
KBC_PULSE0	./inc/kbdreg.h	42;"	d
KBC_PULSE1	./inc/kbdreg.h	43;"	d
KBC_PULSE2	./inc/kbdreg.h	44;"	d
KBC_PULSE3	./inc/kbdreg.h	45;"	d
KBC_RAMREAD	./inc/kbdreg.h	30;"	d
KBC_RAMWRITE	./inc/kbdreg.h	31;"	d
KBC_RESEND	./inc/kbdreg.h	64;"	d
KBC_RESET	./inc/kbdreg.h	63;"	d
KBC_SELFTEST	./inc/kbdreg.h	38;"	d
KBC_SETDEFAULT	./inc/kbdreg.h	65;"	d
KBC_SETTABLE	./inc/kbdreg.h	69;"	d
KBC_TYPEMATIC	./inc/kbdreg.h	68;"	d
KBDATAP	./inc/kbdreg.h	47;"	d
KBOUTP	./inc/kbdreg.h	48;"	d
KBR_ACK	./inc/kbdreg.h	76;"	d
KBR_BREAK	./inc/kbdreg.h	79;"	d
KBR_ECHO	./inc/kbdreg.h	81;"	d
KBR_EXTENDED	./inc/kbdreg.h	74;"	d
KBR_FAILURE	./inc/kbdreg.h	78;"	d
KBR_OVERRUN	./inc/kbdreg.h	77;"	d
KBR_RESEND	./inc/kbdreg.h	75;"	d
KBR_RSTDONE	./inc/kbdreg.h	80;"	d
KBSTATP	./inc/kbdreg.h	19;"	d
KBS_DIB	./inc/kbdreg.h	20;"	d
KBS_IBF	./inc/kbdreg.h	21;"	d
KBS_NOSEC	./inc/kbdreg.h	24;"	d
KBS_OCMD	./inc/kbdreg.h	23;"	d
KBS_PERR	./inc/kbdreg.h	27;"	d
KBS_RERR	./inc/kbdreg.h	26;"	d
KBS_TERR	./inc/kbdreg.h	25;"	d
KBS_WARM	./inc/kbdreg.h	22;"	d
KC8_CPU	./inc/kbdreg.h	57;"	d
KC8_IGNSEC	./inc/kbdreg.h	56;"	d
KC8_KDISABLE	./inc/kbdreg.h	55;"	d
KC8_KENABLE	./inc/kbdreg.h	59;"	d
KC8_MDISABLE	./inc/kbdreg.h	54;"	d
KC8_MENABLE	./inc/kbdreg.h	58;"	d
KC8_TRANS	./inc/kbdreg.h	53;"	d
KERNBASE	./inc/memlayout.h	87;"	d
KEY_DEL	./inc/kbdreg.h	14;"	d
KEY_DN	./inc/kbdreg.h	8;"	d
KEY_END	./inc/kbdreg.h	6;"	d
KEY_HOME	./inc/kbdreg.h	5;"	d
KEY_INS	./inc/kbdreg.h	13;"	d
KEY_LF	./inc/kbdreg.h	9;"	d
KEY_PGDN	./inc/kbdreg.h	12;"	d
KEY_PGUP	./inc/kbdreg.h	11;"	d
KEY_RT	./inc/kbdreg.h	10;"	d
KEY_UP	./inc/kbdreg.h	7;"	d
KSTACKTOP	./inc/memlayout.h	96;"	d
KSTKGAP	./inc/memlayout.h	98;"	d
KSTKSIZE	./inc/memlayout.h	97;"	d
K_LDCMDBYTE	./inc/kbdreg.h	51;"	d
K_RDCMDBYTE	./inc/kbdreg.h	50;"	d
LAST_ACK	./net/lwip/include/lwip/tcp.h	/^  LAST_ACK    = 9,$/;"	e	enum:tcp_state
LCPDEBUG	./net/lwip/netif/ppp/pppdebug.h	69;"	d
LCPDEBUG	./net/lwip/netif/ppp/pppdebug.h	79;"	d
LCP_ECHOINTERVAL	./net/lwip/include/lwip/opt.h	1363;"	d
LCP_H	./net/lwip/netif/ppp/lcp.h	55;"	d
LCP_MAXECHOFAILS	./net/lwip/include/lwip/opt.h	1368;"	d
LINK_STATS	./net/lwip/include/lwip/opt.h	1150;"	d
LINK_STATS	./net/lwip/include/lwip/opt.h	1228;"	d
LINK_STATS_DISPLAY	./net/lwip/include/lwip/stats.h	210;"	d
LINK_STATS_DISPLAY	./net/lwip/include/lwip/stats.h	213;"	d
LINK_STATS_INC	./net/lwip/include/lwip/stats.h	209;"	d
LINK_STATS_INC	./net/lwip/include/lwip/stats.h	212;"	d
LISTEN	./net/lwip/include/lwip/tcp.h	/^  LISTEN      = 1,$/;"	e	enum:tcp_state
LIST_EMPTY	./net/lwip/jos/arch/queue.h	142;"	d
LIST_ENTRY	./net/lwip/jos/arch/queue.h	129;"	d
LIST_FIRST	./net/lwip/jos/arch/queue.h	147;"	d
LIST_FOREACH	./net/lwip/jos/arch/queue.h	160;"	d
LIST_HEAD	./net/lwip/jos/arch/queue.h	109;"	d
LIST_HEAD_INITIALIZER	./net/lwip/jos/arch/queue.h	118;"	d
LIST_INIT	./net/lwip/jos/arch/queue.h	168;"	d
LIST_INSERT_AFTER	./net/lwip/jos/arch/queue.h	177;"	d
LIST_INSERT_BEFORE	./net/lwip/jos/arch/queue.h	190;"	d
LIST_INSERT_HEAD	./net/lwip/jos/arch/queue.h	201;"	d
LIST_NEXT	./net/lwip/jos/arch/queue.h	153;"	d
LIST_REMOVE	./net/lwip/jos/arch/queue.h	212;"	d
LITTLE_ENDIAN	./net/lwip/include/lwip/arch.h	36;"	d
LOCK_TCPIP_CORE	./net/lwip/include/lwip/tcpip.h	52;"	d
LOCK_TCPIP_CORE	./net/lwip/include/lwip/tcpip.h	59;"	d
LOG2NENV	./inc/env.h	28;"	d
LOG_CRITICAL	./net/lwip/netif/ppp/pppdebug.h	/^LOG_CRITICAL = 0,$/;"	e	enum:__anon11
LOG_DEBUG	./net/lwip/netif/ppp/pppdebug.h	/^LOG_DEBUG    = 7$/;"	e	enum:__anon11
LOG_DETAIL	./net/lwip/netif/ppp/pppdebug.h	/^LOG_DETAIL   = 6,$/;"	e	enum:__anon11
LOG_ERR	./net/lwip/netif/ppp/pppdebug.h	/^LOG_ERR      = 1,$/;"	e	enum:__anon11
LOG_INFO	./net/lwip/netif/ppp/pppdebug.h	/^LOG_INFO     = 5,$/;"	e	enum:__anon11
LOG_NOTICE	./net/lwip/netif/ppp/pppdebug.h	/^LOG_NOTICE   = 2,$/;"	e	enum:__anon11
LOG_WARNING	./net/lwip/netif/ppp/pppdebug.h	/^LOG_WARNING  = 3,$/;"	e	enum:__anon11
LS_ACKRCVD	./net/lwip/netif/ppp/fsm.h	87;"	d
LS_ACKSENT	./net/lwip/netif/ppp/fsm.h	88;"	d
LS_CLOSED	./net/lwip/netif/ppp/fsm.h	82;"	d
LS_CLOSING	./net/lwip/netif/ppp/fsm.h	84;"	d
LS_INITIAL	./net/lwip/netif/ppp/fsm.h	80;"	d
LS_OPENED	./net/lwip/netif/ppp/fsm.h	89;"	d
LS_REQSENT	./net/lwip/netif/ppp/fsm.h	86;"	d
LS_STARTING	./net/lwip/netif/ppp/fsm.h	81;"	d
LS_STOPPED	./net/lwip/netif/ppp/fsm.h	83;"	d
LS_STOPPING	./net/lwip/netif/ppp/fsm.h	85;"	d
LWIP_ALLOW_MEM_FREE_FROM_OTHER_CONTEXT	./net/lwip/include/lwip/opt.h	177;"	d
LWIP_ARCH_CC_H	./net/lwip/jos/arch/cc.h	2;"	d
LWIP_ARCH_PERF_H	./net/lwip/jos/arch/perf.h	2;"	d
LWIP_ARCH_QUEUE_H	./net/lwip/jos/arch/queue.h	36;"	d
LWIP_ARCH_SYS_ARCH_H	./net/lwip/jos/arch/sys_arch.h	2;"	d
LWIP_ARCH_THREAD_H	./net/lwip/jos/arch/thread.h	2;"	d
LWIP_ARP	./net/lwip/include/lwip/opt.h	321;"	d
LWIP_ASSERT	./net/lwip/include/lwip/debug.h	64;"	d
LWIP_ASSERT	./net/lwip/include/lwip/debug.h	67;"	d
LWIP_AUTOIP	./net/lwip/include/lwip/opt.h	502;"	d
LWIP_CALLBACK_API	./net/lwip/include/lwip/opt.h	762;"	d
LWIP_CALLBACK_API	./net/lwip/include/lwip/opt.h	765;"	d
LWIP_COMPAT_SOCKETS	./net/lwip/include/lwip/opt.h	1083;"	d
LWIP_COMPAT_SOCKETS	./net/lwip/jos/lwipopts.h	16;"	d
LWIP_DBG_FRESH	./net/lwip/include/lwip/debug.h	59;"	d
LWIP_DBG_HALT	./net/lwip/include/lwip/debug.h	61;"	d
LWIP_DBG_LEVEL_OFF	./net/lwip/include/lwip/debug.h	43;"	d
LWIP_DBG_LEVEL_SERIOUS	./net/lwip/include/lwip/debug.h	45;"	d
LWIP_DBG_LEVEL_SEVERE	./net/lwip/include/lwip/debug.h	46;"	d
LWIP_DBG_LEVEL_WARNING	./net/lwip/include/lwip/debug.h	44;"	d
LWIP_DBG_MASK_LEVEL	./net/lwip/include/lwip/debug.h	47;"	d
LWIP_DBG_MIN_LEVEL	./net/lwip/include/lwip/opt.h	1461;"	d
LWIP_DBG_MIN_LEVEL	./net/lwip/jos/lwipopts.h	58;"	d
LWIP_DBG_OFF	./net/lwip/include/lwip/debug.h	52;"	d
LWIP_DBG_ON	./net/lwip/include/lwip/debug.h	50;"	d
LWIP_DBG_STATE	./net/lwip/include/lwip/debug.h	57;"	d
LWIP_DBG_TRACE	./net/lwip/include/lwip/debug.h	55;"	d
LWIP_DBG_TYPES_ON	./net/lwip/include/lwip/opt.h	1469;"	d
LWIP_DEBUG	./net/lwip/jos/lwipopts.h	49;"	d
LWIP_DEBUGF	./net/lwip/include/lwip/debug.h	80;"	d
LWIP_DEBUGF	./net/lwip/include/lwip/debug.h	93;"	d
LWIP_DHCP	./net/lwip/include/lwip/opt.h	483;"	d
LWIP_DHCP	./net/lwip/jos/lwipopts.h	15;"	d
LWIP_DHCP_AUTOIP_COOP	./net/lwip/include/lwip/opt.h	510;"	d
LWIP_DNS	./net/lwip/include/lwip/opt.h	580;"	d
LWIP_DNS_API_DECLARE_H_ERRNO	./net/lwip/include/lwip/netdb.h	38;"	d
LWIP_DNS_API_DECLARE_STRUCTS	./net/lwip/include/lwip/netdb.h	46;"	d
LWIP_DNS_API_DEFINE_ERRORS	./net/lwip/include/lwip/netdb.h	42;"	d
LWIP_ERROR	./net/lwip/include/lwip/debug.h	72;"	d
LWIP_EVENT_ACCEPT	./net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ACCEPT,$/;"	e	enum:lwip_event
LWIP_EVENT_API	./net/lwip/include/lwip/opt.h	761;"	d
LWIP_EVENT_API	./net/lwip/include/lwip/opt.h	764;"	d
LWIP_EVENT_CONNECTED	./net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_CONNECTED,$/;"	e	enum:lwip_event
LWIP_EVENT_ERR	./net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_ERR$/;"	e	enum:lwip_event
LWIP_EVENT_POLL	./net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_POLL,$/;"	e	enum:lwip_event
LWIP_EVENT_RECV	./net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_RECV,$/;"	e	enum:lwip_event
LWIP_EVENT_SENT	./net/lwip/include/lwip/tcp.h	/^  LWIP_EVENT_SENT,$/;"	e	enum:lwip_event
LWIP_HAVE_LOOPIF	./net/lwip/include/lwip/opt.h	881;"	d
LWIP_HAVE_SLIPIF	./net/lwip/include/lwip/opt.h	893;"	d
LWIP_ICMP	./net/lwip/include/lwip/opt.h	445;"	d
LWIP_IGMP	./net/lwip/include/lwip/opt.h	567;"	d
LWIP_LOOPBACK_MAX_PBUFS	./net/lwip/include/lwip/opt.h	852;"	d
LWIP_MALLOC_MEMPOOL	./net/lwip/include/lwip/memp.h	57;"	d
LWIP_MALLOC_MEMPOOL	./net/lwip/include/lwip/memp.h	66;"	d
LWIP_MALLOC_MEMPOOL	./net/lwip/include/lwip/memp_std.h	14;"	d
LWIP_MALLOC_MEMPOOL	./net/lwip/include/lwip/memp_std.h	98;"	d
LWIP_MALLOC_MEMPOOL_END	./net/lwip/include/lwip/memp.h	58;"	d
LWIP_MALLOC_MEMPOOL_END	./net/lwip/include/lwip/memp.h	67;"	d
LWIP_MALLOC_MEMPOOL_END	./net/lwip/include/lwip/memp_std.h	100;"	d
LWIP_MALLOC_MEMPOOL_END	./net/lwip/include/lwip/memp_std.h	16;"	d
LWIP_MALLOC_MEMPOOL_START	./net/lwip/include/lwip/memp.h	56;"	d
LWIP_MALLOC_MEMPOOL_START	./net/lwip/include/lwip/memp.h	65;"	d
LWIP_MALLOC_MEMPOOL_START	./net/lwip/include/lwip/memp_std.h	15;"	d
LWIP_MALLOC_MEMPOOL_START	./net/lwip/include/lwip/memp_std.h	99;"	d
LWIP_MAX	./net/lwip/include/lwip/def.h	38;"	d
LWIP_MEMPOOL	./net/lwip/include/lwip/memp.h	44;"	d
LWIP_MEMPOOL	./net/lwip/include/lwip/memp.h	55;"	d
LWIP_MEMPOOL	./net/lwip/include/lwip/memp.h	64;"	d
LWIP_MEMPOOL	./net/lwip/include/lwip/memp_std.h	97;"	d
LWIP_MEM_ALIGN	./net/lwip/include/lwip/mem.h	96;"	d
LWIP_MEM_ALIGN_SIZE	./net/lwip/include/lwip/mem.h	92;"	d
LWIP_MIN	./net/lwip/include/lwip/def.h	39;"	d
LWIP_NETCONN	./net/lwip/include/lwip/opt.h	1063;"	d
LWIP_NETIF_API	./net/lwip/include/lwip/opt.h	809;"	d
LWIP_NETIF_HOSTNAME	./net/lwip/include/lwip/opt.h	802;"	d
LWIP_NETIF_HWADDRHINT	./net/lwip/include/lwip/opt.h	836;"	d
LWIP_NETIF_LINK_CALLBACK	./net/lwip/include/lwip/opt.h	825;"	d
LWIP_NETIF_LOOPBACK	./net/lwip/include/lwip/opt.h	844;"	d
LWIP_NETIF_LOOPBACK_MULTITHREADING	./net/lwip/include/lwip/opt.h	869;"	d
LWIP_NETIF_STATUS_CALLBACK	./net/lwip/include/lwip/opt.h	817;"	d
LWIP_PBUF_MEMPOOL	./net/lwip/include/lwip/memp_std.h	101;"	d
LWIP_PBUF_MEMPOOL	./net/lwip/include/lwip/memp_std.h	22;"	d
LWIP_PLATFORM_ASSERT	./net/lwip/jos/arch/cc.h	35;"	d
LWIP_PLATFORM_BYTESWAP	./net/lwip/include/ipv4/lwip/inet.h	66;"	d
LWIP_PLATFORM_DIAG	./net/lwip/jos/arch/cc.h	34;"	d
LWIP_POSIX_SOCKETS_IO_NAMES	./net/lwip/include/lwip/opt.h	1092;"	d
LWIP_PROVIDE_ERRNO	./net/lwip/jos/lwipopts.h	18;"	d
LWIP_RAW	./net/lwip/include/lwip/opt.h	464;"	d
LWIP_SNMP	./net/lwip/include/lwip/opt.h	523;"	d
LWIP_SNMP_OBJ_ID_LEN	./net/lwip/include/lwip/snmp.h	88;"	d
LWIP_SOCKET	./net/lwip/include/lwip/opt.h	1075;"	d
LWIP_SO_RCVBUF	./net/lwip/include/lwip/opt.h	1115;"	d
LWIP_SO_RCVTIMEO	./net/lwip/include/lwip/opt.h	1108;"	d
LWIP_STATS	./net/lwip/include/lwip/opt.h	1134;"	d
LWIP_STATS	./net/lwip/jos/lwipopts.h	13;"	d
LWIP_STATS_DISPLAY	./net/lwip/include/lwip/opt.h	1143;"	d
LWIP_STATS_DISPLAY	./net/lwip/include/lwip/opt.h	1238;"	d
LWIP_STATS_DISPLAY	./net/lwip/jos/lwipopts.h	14;"	d
LWIP_STATS_LARGE	./net/lwip/include/lwip/stats.h	47;"	d
LWIP_TCP	./net/lwip/include/lwip/opt.h	650;"	d
LWIP_TCPIP_CORE_LOCKING	./net/lwip/include/lwip/opt.h	1056;"	d
LWIP_TCP_KEEPALIVE	./net/lwip/include/lwip/opt.h	1101;"	d
LWIP_TIMEVAL_PRIVATE	./net/lwip/include/lwip/sockets.h	290;"	d
LWIP_UDP	./net/lwip/include/lwip/opt.h	624;"	d
LWIP_UDPLITE	./net/lwip/include/lwip/opt.h	631;"	d
LWIP_UNUSED_ARG	./net/lwip/include/lwip/arch.h	63;"	d
LinkPhase	./net/lwip/netif/ppp/lcp.h	/^} LinkPhase;$/;"	t	typeref:enum:__anon14
LogCodes	./net/lwip/netif/ppp/pppdebug.h	/^} LogCodes;$/;"	t	typeref:enum:__anon11
MAGIC_H	./net/lwip/netif/ppp/magic.h	55;"	d
MAKEHEADER	./net/lwip/netif/ppp/ppp.h	223;"	d
MASK	./net/ns.h	5;"	d
MAX	./inc/types.h	49;"	d
MAXERROR	./inc/error.h	/^	MAXERROR$/;"	e	enum:__anon4
MAXFILESIZE	./inc/fs.h	27;"	d
MAXNAMELEN	./inc/fs.h	17;"	d
MAXNAMELEN	./net/lwip/include/lwip/opt.h	1398;"	d
MAXPATHLEN	./inc/fs.h	20;"	d
MAXSECRETLEN	./net/lwip/include/lwip/opt.h	1399;"	d
MAX_CHALLENGE_LENGTH	./net/lwip/netif/ppp/chap.h	96;"	d
MAX_CONFLICTS	./net/lwip/include/ipv4/lwip/autoip.h	67;"	d
MAX_HDR	./net/lwip/netif/ppp/vj.h	31;"	d
MAX_IRQS	./kern/picirq.h	9;"	d
MAX_NT_PASSWORD	./net/lwip/netif/ppp/chpms.h	60;"	d
MAX_RESPONSE_LENGTH	./net/lwip/netif/ppp/chap.h	97;"	d
MAX_SLOTS	./net/lwip/netif/ppp/vj.h	30;"	d
MC_NVRAM_SIZE	./kern/kclock.h	12;"	d
MC_NVRAM_START	./kern/kclock.h	11;"	d
MD5Final	./net/lwip/netif/ppp/md5.h	/^void MD5Final ( unsigned char hash[], MD5_CTX *mdContext);$/;"	p	signature:( unsigned char hash[], MD5_CTX *mdContext)
MD5Init	./net/lwip/netif/ppp/md5.h	/^void MD5Init  ( MD5_CTX *mdContext);$/;"	p	signature:( MD5_CTX *mdContext)
MD5Update	./net/lwip/netif/ppp/md5.h	/^void MD5Update( MD5_CTX *mdContext, unsigned char *inBuf, unsigned int inLen);$/;"	p	signature:( MD5_CTX *mdContext, unsigned char *inBuf, unsigned int inLen)
MD5_CTX	./net/lwip/netif/ppp/md5.h	/^} MD5_CTX;$/;"	t	typeref:struct:__anon13
MD5_H	./net/lwip/netif/ppp/md5.h	41;"	d
MD5_SIGNATURE_SIZE	./net/lwip/netif/ppp/chap.h	83;"	d
MD5_SUPPORT	./net/lwip/include/lwip/opt.h	1323;"	d
MEMCPY	./net/lwip/include/lwip/opt.h	76;"	d
MEMP_DEBUG	./net/lwip/include/lwip/opt.h	1567;"	d
MEMP_MAX	./net/lwip/include/lwip/memp.h	/^  MEMP_MAX$/;"	e	enum:__anon15
MEMP_NUM_ARP_QUEUE	./net/lwip/include/lwip/opt.h	250;"	d
MEMP_NUM_IGMP_GROUP	./net/lwip/include/lwip/opt.h	260;"	d
MEMP_NUM_NETBUF	./net/lwip/include/lwip/opt.h	276;"	d
MEMP_NUM_NETBUF	./net/lwip/jos/lwipopts.h	30;"	d
MEMP_NUM_NETCONN	./net/lwip/include/lwip/opt.h	284;"	d
MEMP_NUM_NETCONN	./net/lwip/jos/lwipopts.h	31;"	d
MEMP_NUM_PBUF	./net/lwip/include/lwip/opt.h	191;"	d
MEMP_NUM_PBUF	./net/lwip/jos/lwipopts.h	25;"	d
MEMP_NUM_RAW_PCB	./net/lwip/include/lwip/opt.h	199;"	d
MEMP_NUM_REASSDATA	./net/lwip/include/lwip/opt.h	240;"	d
MEMP_NUM_SYS_TIMEOUT	./net/lwip/include/lwip/opt.h	268;"	d
MEMP_NUM_SYS_TIMEOUT	./net/lwip/jos/lwipopts.h	32;"	d
MEMP_NUM_TCPIP_MSG_API	./net/lwip/include/lwip/opt.h	293;"	d
MEMP_NUM_TCPIP_MSG_INPKT	./net/lwip/include/lwip/opt.h	302;"	d
MEMP_NUM_TCP_PCB	./net/lwip/include/lwip/opt.h	216;"	d
MEMP_NUM_TCP_PCB	./net/lwip/jos/lwipopts.h	27;"	d
MEMP_NUM_TCP_PCB_LISTEN	./net/lwip/include/lwip/opt.h	224;"	d
MEMP_NUM_TCP_PCB_LISTEN	./net/lwip/jos/lwipopts.h	28;"	d
MEMP_NUM_TCP_SEG	./net/lwip/include/lwip/opt.h	232;"	d
MEMP_NUM_TCP_SEG	./net/lwip/jos/lwipopts.h	29;"	d
MEMP_NUM_UDP_PCB	./net/lwip/include/lwip/opt.h	208;"	d
MEMP_NUM_UDP_PCB	./net/lwip/jos/lwipopts.h	26;"	d
MEMP_OVERFLOW_CHECK	./net/lwip/include/lwip/opt.h	128;"	d
MEMP_POOL_FIRST	./net/lwip/include/lwip/memp.h	74;"	d
MEMP_POOL_HELPER_FIRST	./net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_FIRST = ((u8_t)$/;"	e	enum:__anon16
MEMP_POOL_HELPER_LAST	./net/lwip/include/lwip/memp.h	/^    MEMP_POOL_HELPER_LAST = ((u8_t)$/;"	e	enum:__anon16
MEMP_POOL_LAST	./net/lwip/include/lwip/memp.h	75;"	d
MEMP_SANITY_CHECK	./net/lwip/include/lwip/opt.h	136;"	d
MEMP_SANITY_CHECK	./net/lwip/jos/lwipopts.h	59;"	d
MEMP_STATS	./net/lwip/include/lwip/opt.h	1216;"	d
MEMP_STATS	./net/lwip/include/lwip/opt.h	1236;"	d
MEMP_STATS_AVAIL	./net/lwip/include/lwip/stats.h	235;"	d
MEMP_STATS_AVAIL	./net/lwip/include/lwip/stats.h	245;"	d
MEMP_STATS_DEC	./net/lwip/include/lwip/stats.h	237;"	d
MEMP_STATS_DEC	./net/lwip/include/lwip/stats.h	247;"	d
MEMP_STATS_DISPLAY	./net/lwip/include/lwip/stats.h	243;"	d
MEMP_STATS_DISPLAY	./net/lwip/include/lwip/stats.h	249;"	d
MEMP_STATS_INC	./net/lwip/include/lwip/stats.h	236;"	d
MEMP_STATS_INC	./net/lwip/include/lwip/stats.h	246;"	d
MEMP_STATS_INC_USED	./net/lwip/include/lwip/stats.h	238;"	d
MEMP_STATS_INC_USED	./net/lwip/include/lwip/stats.h	248;"	d
MEMP_USE_CUSTOM_POOLS	./net/lwip/include/lwip/opt.h	155;"	d
MEM_ALIGNMENT	./net/lwip/include/lwip/opt.h	107;"	d
MEM_ALIGNMENT	./net/lwip/jos/lwipopts.h	23;"	d
MEM_DEBUG	./net/lwip/include/lwip/opt.h	1560;"	d
MEM_LIBC_MALLOC	./net/lwip/include/lwip/opt.h	98;"	d
MEM_SIZE	./net/lwip/include/lwip/opt.h	115;"	d
MEM_SIZE	./net/lwip/jos/lwipopts.h	35;"	d
MEM_STATS	./net/lwip/include/lwip/opt.h	1209;"	d
MEM_STATS	./net/lwip/include/lwip/opt.h	1235;"	d
MEM_STATS_AVAIL	./net/lwip/include/lwip/stats.h	217;"	d
MEM_STATS_AVAIL	./net/lwip/include/lwip/stats.h	227;"	d
MEM_STATS_DEC_USED	./net/lwip/include/lwip/stats.h	224;"	d
MEM_STATS_DEC_USED	./net/lwip/include/lwip/stats.h	230;"	d
MEM_STATS_DISPLAY	./net/lwip/include/lwip/stats.h	225;"	d
MEM_STATS_DISPLAY	./net/lwip/include/lwip/stats.h	231;"	d
MEM_STATS_INC	./net/lwip/include/lwip/stats.h	218;"	d
MEM_STATS_INC	./net/lwip/include/lwip/stats.h	228;"	d
MEM_STATS_INC_USED	./net/lwip/include/lwip/stats.h	219;"	d
MEM_STATS_INC_USED	./net/lwip/include/lwip/stats.h	229;"	d
MEM_USE_POOLS	./net/lwip/include/lwip/opt.h	145;"	d
MIB_NODE_AR	./net/lwip/include/lwip/snmp_structs.h	91;"	d
MIB_NODE_EX	./net/lwip/include/lwip/snmp_structs.h	97;"	d
MIB_NODE_LR	./net/lwip/include/lwip/snmp_structs.h	95;"	d
MIB_NODE_RA	./net/lwip/include/lwip/snmp_structs.h	93;"	d
MIB_NODE_SC	./net/lwip/include/lwip/snmp_structs.h	89;"	d
MIB_OBJECT_NONE	./net/lwip/include/lwip/snmp_structs.h	55;"	d
MIB_OBJECT_NOT_ACCESSIBLE	./net/lwip/include/lwip/snmp_structs.h	63;"	d
MIB_OBJECT_READ_ONLY	./net/lwip/include/lwip/snmp_structs.h	60;"	d
MIB_OBJECT_READ_WRITE	./net/lwip/include/lwip/snmp_structs.h	61;"	d
MIB_OBJECT_SCALAR	./net/lwip/include/lwip/snmp_structs.h	56;"	d
MIB_OBJECT_TAB	./net/lwip/include/lwip/snmp_structs.h	57;"	d
MIB_OBJECT_WRITE_ONLY	./net/lwip/include/lwip/snmp_structs.h	62;"	d
MIN	./inc/types.h	43;"	d
MIN_CHALLENGE_LENGTH	./net/lwip/netif/ppp/chap.h	95;"	d
MMIOBASE	./inc/memlayout.h	102;"	d
MMIOLIM	./inc/memlayout.h	101;"	d
MONO_BASE	./kern/console.h	11;"	d
MONO_BUF	./kern/console.h	12;"	d
MPENTRY_PADDR	./inc/memlayout.h	142;"	d
MSCHAP_SUPPORT	./net/lwip/include/lwip/opt.h	1295;"	d
MSG_DONTWAIT	./net/lwip/include/lwip/sockets.h	134;"	d
MSG_MORE	./net/lwip/include/lwip/sockets.h	135;"	d
MSG_OOB	./net/lwip/include/lwip/sockets.h	133;"	d
MSG_PEEK	./net/lwip/include/lwip/sockets.h	131;"	d
MSG_WAITALL	./net/lwip/include/lwip/sockets.h	132;"	d
MS_CHAP_RESPONSE_LEN	./net/lwip/netif/ppp/chap.h	85;"	d
NCPU	./kern/cpu.h	11;"	d
NDIRECT	./inc/fs.h	23;"	d
NENV	./inc/env.h	29;"	d
NETCONNTYPE_DATAGRAM	./net/lwip/include/lwip/api.h	60;"	d
NETCONNTYPE_GROUP	./net/lwip/include/lwip/api.h	59;"	d
NETCONN_CLOSE	./net/lwip/include/lwip/api.h	/^  NETCONN_CLOSE$/;"	e	enum:netconn_state
NETCONN_CONNECT	./net/lwip/include/lwip/api.h	/^  NETCONN_CONNECT,$/;"	e	enum:netconn_state
NETCONN_COPY	./net/lwip/include/lwip/api.h	55;"	d
NETCONN_EVT_RCVMINUS	./net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVMINUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_RCVPLUS	./net/lwip/include/lwip/api.h	/^  NETCONN_EVT_RCVPLUS,$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDMINUS	./net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDMINUS$/;"	e	enum:netconn_evt
NETCONN_EVT_SENDPLUS	./net/lwip/include/lwip/api.h	/^  NETCONN_EVT_SENDPLUS,$/;"	e	enum:netconn_evt
NETCONN_INVALID	./net/lwip/include/lwip/api.h	/^  NETCONN_INVALID    = 0,$/;"	e	enum:netconn_type
NETCONN_JOIN	./net/lwip/include/lwip/api.h	/^  NETCONN_JOIN,$/;"	e	enum:netconn_igmp
NETCONN_LEAVE	./net/lwip/include/lwip/api.h	/^  NETCONN_LEAVE$/;"	e	enum:netconn_igmp
NETCONN_LISTEN	./net/lwip/include/lwip/api.h	/^  NETCONN_LISTEN,$/;"	e	enum:netconn_state
NETCONN_MORE	./net/lwip/include/lwip/api.h	56;"	d
NETCONN_NOCOPY	./net/lwip/include/lwip/api.h	54;"	d
NETCONN_NOFLAG	./net/lwip/include/lwip/api.h	53;"	d
NETCONN_NONE	./net/lwip/include/lwip/api.h	/^  NETCONN_NONE,$/;"	e	enum:netconn_state
NETCONN_RAW	./net/lwip/include/lwip/api.h	/^  NETCONN_RAW        = 0x40$/;"	e	enum:netconn_type
NETCONN_TCP	./net/lwip/include/lwip/api.h	/^  NETCONN_TCP        = 0x10,$/;"	e	enum:netconn_type
NETCONN_UDP	./net/lwip/include/lwip/api.h	/^  NETCONN_UDP        = 0x20,$/;"	e	enum:netconn_type
NETCONN_UDPLITE	./net/lwip/include/lwip/api.h	/^  NETCONN_UDPLITE    = 0x21,$/;"	e	enum:netconn_type
NETCONN_UDPNOCHKSUM	./net/lwip/include/lwip/api.h	/^  NETCONN_UDPNOCHKSUM= 0x22,$/;"	e	enum:netconn_type
NETCONN_WRITE	./net/lwip/include/lwip/api.h	/^  NETCONN_WRITE,$/;"	e	enum:netconn_state
NETIF_DEBUG	./net/lwip/include/lwip/opt.h	1483;"	d
NETIF_FLAG_BROADCAST	./net/lwip/include/lwip/netif.h	71;"	d
NETIF_FLAG_DHCP	./net/lwip/include/lwip/netif.h	75;"	d
NETIF_FLAG_ETHARP	./net/lwip/include/lwip/netif.h	80;"	d
NETIF_FLAG_IGMP	./net/lwip/include/lwip/netif.h	82;"	d
NETIF_FLAG_LINK_UP	./net/lwip/include/lwip/netif.h	78;"	d
NETIF_FLAG_POINTTOPOINT	./net/lwip/include/lwip/netif.h	73;"	d
NETIF_FLAG_UP	./net/lwip/include/lwip/netif.h	69;"	d
NETIF_INIT_SNMP	./net/lwip/include/lwip/netif.h	181;"	d
NETIF_INIT_SNMP	./net/lwip/include/lwip/netif.h	196;"	d
NETIF_MAX_HWADDR_LEN	./net/lwip/include/lwip/netif.h	61;"	d
NEW_A	./net/lwip/netif/ppp/vj.h	86;"	d
NEW_C	./net/lwip/netif/ppp/vj.h	83;"	d
NEW_I	./net/lwip/netif/ppp/vj.h	84;"	d
NEW_S	./net/lwip/netif/ppp/vj.h	85;"	d
NEW_U	./net/lwip/netif/ppp/vj.h	88;"	d
NEW_W	./net/lwip/netif/ppp/vj.h	87;"	d
NINDIRECT	./inc/fs.h	25;"	d
NMTA	./kern/e1000.h	10;"	d
NO_DATA	./net/lwip/include/lwip/netdb.h	57;"	d
NO_RECOVERY	./net/lwip/include/lwip/netdb.h	58;"	d
NO_SYS	./net/lwip/include/lwip/opt.h	68;"	d
NPDENTRIES	./inc/mmu.h	45;"	d
NPMODE_DROP	./net/lwip/netif/ppp/ppp.h	/^  NPMODE_DROP,        \/* silently drop the packet *\/$/;"	e	enum:NPmode
NPMODE_ERROR	./net/lwip/netif/ppp/ppp.h	/^  NPMODE_ERROR,       \/* return an error *\/$/;"	e	enum:NPmode
NPMODE_PASS	./net/lwip/netif/ppp/ppp.h	/^  NPMODE_PASS,        \/* pass the packet through *\/$/;"	e	enum:NPmode
NPMODE_QUEUE	./net/lwip/netif/ppp/ppp.h	/^  NPMODE_QUEUE        \/* save it up for later. *\/$/;"	e	enum:NPmode
NPTENTRIES	./inc/mmu.h	46;"	d
NPmode	./net/lwip/netif/ppp/ppp.h	/^enum NPmode {$/;"	g
NRXQ	./kern/e1000.h	9;"	d
NSREQ_ACCEPT	./inc/ns.h	/^	NSREQ_ACCEPT = 1,$/;"	e	enum:__anon7
NSREQ_BIND	./inc/ns.h	/^	NSREQ_BIND,$/;"	e	enum:__anon7
NSREQ_CLOSE	./inc/ns.h	/^	NSREQ_CLOSE,$/;"	e	enum:__anon7
NSREQ_CONNECT	./inc/ns.h	/^	NSREQ_CONNECT,$/;"	e	enum:__anon7
NSREQ_INPUT	./inc/ns.h	/^	NSREQ_INPUT,$/;"	e	enum:__anon7
NSREQ_LISTEN	./inc/ns.h	/^	NSREQ_LISTEN,$/;"	e	enum:__anon7
NSREQ_OUTPUT	./inc/ns.h	/^	NSREQ_OUTPUT,$/;"	e	enum:__anon7
NSREQ_RECV	./inc/ns.h	/^	NSREQ_RECV,$/;"	e	enum:__anon7
NSREQ_SEND	./inc/ns.h	/^	NSREQ_SEND,$/;"	e	enum:__anon7
NSREQ_SHUTDOWN	./inc/ns.h	/^	NSREQ_SHUTDOWN,$/;"	e	enum:__anon7
NSREQ_SOCKET	./inc/ns.h	/^	NSREQ_SOCKET,$/;"	e	enum:__anon7
NSREQ_TIMER	./inc/ns.h	/^	NSREQ_TIMER,$/;"	e	enum:__anon7
NSYSCALLS	./inc/syscall.h	/^	NSYSCALLS$/;"	e	enum:__anon9
NTXQ	./kern/e1000.h	8;"	d
NULL	./inc/stdio.h	7;"	d
NULL	./inc/types.h	5;"	d
NULL	./net/lwip/include/lwip/def.h	42;"	d
NUM_PPP	./net/lwip/include/lwip/opt.h	1274;"	d
NVRAM_BASEHI	./kern/kclock.h	16;"	d
NVRAM_BASELO	./kern/kclock.h	15;"	d
NVRAM_CENTURY	./kern/kclock.h	27;"	d
NVRAM_EXTHI	./kern/kclock.h	20;"	d
NVRAM_EXTLO	./kern/kclock.h	19;"	d
NVRAM_PEXTHI	./kern/kclock.h	24;"	d
NVRAM_PEXTLO	./kern/kclock.h	23;"	d
N_BCOMM	./inc/stab.h	37;"	d
N_BINCL	./inc/stab.h	29;"	d
N_BSLINE	./inc/stab.h	25;"	d
N_DSLINE	./inc/stab.h	24;"	d
N_ECOML	./inc/stab.h	39;"	d
N_ECOMM	./inc/stab.h	38;"	d
N_EINCL	./inc/stab.h	32;"	d
N_ENTRY	./inc/stab.h	33;"	d
N_EXCL	./inc/stab.h	35;"	d
N_FNAME	./inc/stab.h	16;"	d
N_FUN	./inc/stab.h	17;"	d
N_GSYM	./inc/stab.h	15;"	d
N_LBRAC	./inc/stab.h	34;"	d
N_LCSYM	./inc/stab.h	19;"	d
N_LENG	./inc/stab.h	40;"	d
N_LSYM	./inc/stab.h	28;"	d
N_MAIN	./inc/stab.h	20;"	d
N_PC	./inc/stab.h	21;"	d
N_PSYM	./inc/stab.h	31;"	d
N_RBRAC	./inc/stab.h	36;"	d
N_RSYM	./inc/stab.h	22;"	d
N_SLINE	./inc/stab.h	23;"	d
N_SO	./inc/stab.h	27;"	d
N_SOL	./inc/stab.h	30;"	d
N_SSYM	./inc/stab.h	26;"	d
N_STSYM	./inc/stab.h	18;"	d
Nsipc	./inc/ns.h	/^union Nsipc {$/;"	u
Nsipc::Nsreq_accept	./inc/ns.h	/^	struct Nsreq_accept {$/;"	s	union:Nsipc	access:public
Nsipc::Nsreq_accept::req_addrlen	./inc/ns.h	/^		socklen_t req_addrlen;$/;"	m	struct:Nsipc::Nsreq_accept	access:public
Nsipc::Nsreq_accept::req_s	./inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_accept	access:public
Nsipc::Nsreq_bind	./inc/ns.h	/^	struct Nsreq_bind {$/;"	s	union:Nsipc	access:public
Nsipc::Nsreq_bind::req_name	./inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_bind	typeref:struct:Nsipc::Nsreq_bind::sockaddr	access:public
Nsipc::Nsreq_bind::req_namelen	./inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_bind	access:public
Nsipc::Nsreq_bind::req_s	./inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_bind	access:public
Nsipc::Nsreq_close	./inc/ns.h	/^	struct Nsreq_close {$/;"	s	union:Nsipc	access:public
Nsipc::Nsreq_close::req_s	./inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_close	access:public
Nsipc::Nsreq_connect	./inc/ns.h	/^	struct Nsreq_connect {$/;"	s	union:Nsipc	access:public
Nsipc::Nsreq_connect::req_name	./inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_connect	typeref:struct:Nsipc::Nsreq_connect::sockaddr	access:public
Nsipc::Nsreq_connect::req_namelen	./inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_connect	access:public
Nsipc::Nsreq_connect::req_s	./inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_connect	access:public
Nsipc::Nsreq_listen	./inc/ns.h	/^	struct Nsreq_listen {$/;"	s	union:Nsipc	access:public
Nsipc::Nsreq_listen::req_backlog	./inc/ns.h	/^		int req_backlog;$/;"	m	struct:Nsipc::Nsreq_listen	access:public
Nsipc::Nsreq_listen::req_s	./inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_listen	access:public
Nsipc::Nsreq_recv	./inc/ns.h	/^	struct Nsreq_recv {$/;"	s	union:Nsipc	access:public
Nsipc::Nsreq_recv::req_flags	./inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_recv	access:public
Nsipc::Nsreq_recv::req_len	./inc/ns.h	/^		int req_len;$/;"	m	struct:Nsipc::Nsreq_recv	access:public
Nsipc::Nsreq_recv::req_s	./inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_recv	access:public
Nsipc::Nsreq_send	./inc/ns.h	/^	struct Nsreq_send {$/;"	s	union:Nsipc	access:public
Nsipc::Nsreq_send::req_buf	./inc/ns.h	/^		char req_buf[0];$/;"	m	struct:Nsipc::Nsreq_send	access:public
Nsipc::Nsreq_send::req_flags	./inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_send	access:public
Nsipc::Nsreq_send::req_s	./inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_send	access:public
Nsipc::Nsreq_send::req_size	./inc/ns.h	/^		int req_size;$/;"	m	struct:Nsipc::Nsreq_send	access:public
Nsipc::Nsreq_shutdown	./inc/ns.h	/^	struct Nsreq_shutdown {$/;"	s	union:Nsipc	access:public
Nsipc::Nsreq_shutdown::req_how	./inc/ns.h	/^		int req_how;$/;"	m	struct:Nsipc::Nsreq_shutdown	access:public
Nsipc::Nsreq_shutdown::req_s	./inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_shutdown	access:public
Nsipc::Nsreq_socket	./inc/ns.h	/^	struct Nsreq_socket {$/;"	s	union:Nsipc	access:public
Nsipc::Nsreq_socket::req_domain	./inc/ns.h	/^		int req_domain;$/;"	m	struct:Nsipc::Nsreq_socket	access:public
Nsipc::Nsreq_socket::req_protocol	./inc/ns.h	/^		int req_protocol;$/;"	m	struct:Nsipc::Nsreq_socket	access:public
Nsipc::Nsreq_socket::req_type	./inc/ns.h	/^		int req_type;$/;"	m	struct:Nsipc::Nsreq_socket	access:public
Nsipc::Nsret_accept	./inc/ns.h	/^	struct Nsret_accept {$/;"	s	union:Nsipc	access:public
Nsipc::Nsret_accept::ret_addr	./inc/ns.h	/^		struct sockaddr ret_addr;$/;"	m	struct:Nsipc::Nsret_accept	typeref:struct:Nsipc::Nsret_accept::sockaddr	access:public
Nsipc::Nsret_accept::ret_addrlen	./inc/ns.h	/^		socklen_t ret_addrlen;$/;"	m	struct:Nsipc::Nsret_accept	access:public
Nsipc::Nsret_recv	./inc/ns.h	/^	struct Nsret_recv {$/;"	s	union:Nsipc	access:public
Nsipc::Nsret_recv::ret_buf	./inc/ns.h	/^		char ret_buf[0];$/;"	m	struct:Nsipc::Nsret_recv	access:public
Nsipc::_pad	./inc/ns.h	/^	char _pad[PGSIZE];$/;"	m	union:Nsipc	access:public
Nsipc::accept	./inc/ns.h	/^	} accept;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_accept	access:public
Nsipc::acceptRet	./inc/ns.h	/^	} acceptRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_accept	access:public
Nsipc::bind	./inc/ns.h	/^	} bind;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_bind	access:public
Nsipc::close	./inc/ns.h	/^	} close;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_close	access:public
Nsipc::connect	./inc/ns.h	/^	} connect;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_connect	access:public
Nsipc::listen	./inc/ns.h	/^	} listen;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_listen	access:public
Nsipc::pkt	./inc/ns.h	/^	struct jif_pkt pkt;$/;"	m	union:Nsipc	typeref:struct:Nsipc::jif_pkt	access:public
Nsipc::recv	./inc/ns.h	/^	} recv;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_recv	access:public
Nsipc::recvRet	./inc/ns.h	/^	} recvRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_recv	access:public
Nsipc::send	./inc/ns.h	/^	} send;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_send	access:public
Nsipc::shutdown	./inc/ns.h	/^	} shutdown;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_shutdown	access:public
Nsipc::socket	./inc/ns.h	/^	} socket;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_socket	access:public
Nsreq_accept	./inc/ns.h	/^	struct Nsreq_accept {$/;"	s	union:Nsipc	access:public
Nsreq_bind	./inc/ns.h	/^	struct Nsreq_bind {$/;"	s	union:Nsipc	access:public
Nsreq_close	./inc/ns.h	/^	struct Nsreq_close {$/;"	s	union:Nsipc	access:public
Nsreq_connect	./inc/ns.h	/^	struct Nsreq_connect {$/;"	s	union:Nsipc	access:public
Nsreq_listen	./inc/ns.h	/^	struct Nsreq_listen {$/;"	s	union:Nsipc	access:public
Nsreq_recv	./inc/ns.h	/^	struct Nsreq_recv {$/;"	s	union:Nsipc	access:public
Nsreq_send	./inc/ns.h	/^	struct Nsreq_send {$/;"	s	union:Nsipc	access:public
Nsreq_shutdown	./inc/ns.h	/^	struct Nsreq_shutdown {$/;"	s	union:Nsipc	access:public
Nsreq_socket	./inc/ns.h	/^	struct Nsreq_socket {$/;"	s	union:Nsipc	access:public
Nsret_accept	./inc/ns.h	/^	struct Nsret_accept {$/;"	s	union:Nsipc	access:public
Nsret_recv	./inc/ns.h	/^	struct Nsret_recv {$/;"	s	union:Nsipc	access:public
OPT_PASSIVE	./net/lwip/netif/ppp/fsm.h	94;"	d
OPT_RESTART	./net/lwip/netif/ppp/fsm.h	95;"	d
OPT_SILENT	./net/lwip/netif/ppp/fsm.h	96;"	d
O_ACCMODE	./inc/lib.h	150;"	d
O_CREAT	./inc/lib.h	152;"	d
O_EXCL	./inc/lib.h	154;"	d
O_MKDIR	./inc/lib.h	155;"	d
O_NONBLOCK	./net/lwip/include/lwip/sockets.h	268;"	d
O_RDONLY	./inc/lib.h	147;"	d
O_RDWR	./inc/lib.h	149;"	d
O_TRUNC	./inc/lib.h	153;"	d
O_WRONLY	./inc/lib.h	148;"	d
PACK_STRUCT_BEGIN	./net/lwip/include/lwip/arch.h	50;"	d
PACK_STRUCT_BEGIN	./net/lwip/jos/arch/cc.h	23;"	d
PACK_STRUCT_END	./net/lwip/include/lwip/arch.h	54;"	d
PACK_STRUCT_END	./net/lwip/jos/arch/cc.h	24;"	d
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/icmp.h	/^  PACK_STRUCT_FIELD(u16_t _type_code);$/;"	p	struct:icmp_dur_hdr	access:public	signature:(u16_t _type_code)
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/icmp.h	/^  PACK_STRUCT_FIELD(u16_t _type_code);$/;"	p	struct:icmp_echo_hdr	access:public	signature:(u16_t _type_code)
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/icmp.h	/^  PACK_STRUCT_FIELD(u16_t _type_code);$/;"	p	struct:icmp_te_hdr	access:public	signature:(u16_t _type_code)
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/icmp.h	/^  PACK_STRUCT_FIELD(u16_t chksum);$/;"	p	struct:icmp_dur_hdr	access:public	signature:(u16_t chksum)
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/icmp.h	/^  PACK_STRUCT_FIELD(u16_t chksum);$/;"	p	struct:icmp_echo_hdr	access:public	signature:(u16_t chksum)
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/icmp.h	/^  PACK_STRUCT_FIELD(u16_t chksum);$/;"	p	struct:icmp_te_hdr	access:public	signature:(u16_t chksum)
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/icmp.h	/^  PACK_STRUCT_FIELD(u16_t id);$/;"	p	struct:icmp_echo_hdr	access:public	signature:(u16_t id)
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/icmp.h	/^  PACK_STRUCT_FIELD(u16_t seqno);$/;"	p	struct:icmp_echo_hdr	access:public	signature:(u16_t seqno)
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/icmp.h	/^  PACK_STRUCT_FIELD(u32_t unused);$/;"	p	struct:icmp_dur_hdr	access:public	signature:(u32_t unused)
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/icmp.h	/^  PACK_STRUCT_FIELD(u32_t unused);$/;"	p	struct:icmp_te_hdr	access:public	signature:(u32_t unused)
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/igmp.h	/^ PACK_STRUCT_FIELD(struct ip_addr igmp_group_address);$/;"	p	struct:igmp_msg	access:public	signature:(struct ip_addr igmp_group_address)
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/igmp.h	/^ PACK_STRUCT_FIELD(u16_t          igmp_checksum);$/;"	p	struct:igmp_msg	access:public	signature:(u16_t igmp_checksum)
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/igmp.h	/^ PACK_STRUCT_FIELD(u8_t           igmp_maxresp);$/;"	p	struct:igmp_msg	access:public	signature:(u8_t igmp_maxresp)
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/igmp.h	/^ PACK_STRUCT_FIELD(u8_t           igmp_msgtype);$/;"	p	struct:igmp_msg	access:public	signature:(u8_t igmp_msgtype)
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/ip.h	/^  PACK_STRUCT_FIELD(struct ip_addr dest); $/;"	p	struct:ip_hdr	access:public	signature:(struct ip_addr dest)
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/ip.h	/^  PACK_STRUCT_FIELD(struct ip_addr src);$/;"	p	struct:ip_hdr	access:public	signature:(struct ip_addr src)
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/ip.h	/^  PACK_STRUCT_FIELD(u16_t _chksum);$/;"	p	struct:ip_hdr	access:public	signature:(u16_t _chksum)
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/ip.h	/^  PACK_STRUCT_FIELD(u16_t _id);$/;"	p	struct:ip_hdr	access:public	signature:(u16_t _id)
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/ip.h	/^  PACK_STRUCT_FIELD(u16_t _len);$/;"	p	struct:ip_hdr	access:public	signature:(u16_t _len)
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/ip.h	/^  PACK_STRUCT_FIELD(u16_t _offset);$/;"	p	struct:ip_hdr	access:public	signature:(u16_t _offset)
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/ip.h	/^  PACK_STRUCT_FIELD(u16_t _ttl_proto);$/;"	p	struct:ip_hdr	access:public	signature:(u16_t _ttl_proto)
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/ip.h	/^  PACK_STRUCT_FIELD(u16_t _v_hl_tos);$/;"	p	struct:ip_hdr	access:public	signature:(u16_t _v_hl_tos)
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/ip_addr.h	/^  PACK_STRUCT_FIELD(u16_t addrw[2]);$/;"	p	struct:ip_addr2	access:public	signature:(u16_t addrw[2])
PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/ip_addr.h	/^  PACK_STRUCT_FIELD(u32_t addr);$/;"	p	struct:ip_addr	access:public	signature:(u32_t addr)
PACK_STRUCT_FIELD	./net/lwip/include/ipv6/lwip/ip_addr.h	/^  PACK_STRUCT_FIELD(u16_t addrw[2]);$/;"	p	struct:ip_addr2	access:public	signature:(u16_t addrw[2])
PACK_STRUCT_FIELD	./net/lwip/include/ipv6/lwip/ip_addr.h	/^  PACK_STRUCT_FIELD(u32_t addr[4]);$/;"	p	struct:ip_addr	access:public	signature:(u32_t addr[4])
PACK_STRUCT_FIELD	./net/lwip/include/lwip/arch.h	58;"	d
PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(struct ip_addr ciaddr);$/;"	p	struct:dhcp_msg	access:public	signature:(struct ip_addr ciaddr)
PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(struct ip_addr giaddr);$/;"	p	struct:dhcp_msg	access:public	signature:(struct ip_addr giaddr)
PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(struct ip_addr siaddr);$/;"	p	struct:dhcp_msg	access:public	signature:(struct ip_addr siaddr)
PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(struct ip_addr yiaddr);$/;"	p	struct:dhcp_msg	access:public	signature:(struct ip_addr yiaddr)
PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u16_t flags);$/;"	p	struct:dhcp_msg	access:public	signature:(u16_t flags)
PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u16_t secs);$/;"	p	struct:dhcp_msg	access:public	signature:(u16_t secs)
PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u32_t cookie);$/;"	p	struct:dhcp_msg	access:public	signature:(u32_t cookie)
PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u32_t xid);$/;"	p	struct:dhcp_msg	access:public	signature:(u32_t xid)
PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u8_t chaddr[DHCP_CHADDR_LEN]);$/;"	p	struct:dhcp_msg	access:public	signature:(u8_t chaddr[DHCP_CHADDR_LEN])
PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u8_t file[DHCP_FILE_LEN]);$/;"	p	struct:dhcp_msg	access:public	signature:(u8_t file[DHCP_FILE_LEN])
PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u8_t hlen);$/;"	p	struct:dhcp_msg	access:public	signature:(u8_t hlen)
PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u8_t hops);$/;"	p	struct:dhcp_msg	access:public	signature:(u8_t hops)
PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u8_t htype);$/;"	p	struct:dhcp_msg	access:public	signature:(u8_t htype)
PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u8_t op);$/;"	p	struct:dhcp_msg	access:public	signature:(u8_t op)
PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u8_t options[DHCP_OPTIONS_LEN]);$/;"	p	struct:dhcp_msg	access:public	signature:(u8_t options[DHCP_OPTIONS_LEN])
PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u8_t sname[DHCP_SNAME_LEN]);$/;"	p	struct:dhcp_msg	access:public	signature:(u8_t sname[DHCP_SNAME_LEN])
PACK_STRUCT_FIELD	./net/lwip/include/lwip/tcp.h	/^  PACK_STRUCT_FIELD(u16_t _hdrlen_rsvd_flags);$/;"	p	struct:tcp_hdr	access:public	signature:(u16_t _hdrlen_rsvd_flags)
PACK_STRUCT_FIELD	./net/lwip/include/lwip/tcp.h	/^  PACK_STRUCT_FIELD(u16_t chksum);$/;"	p	struct:tcp_hdr	access:public	signature:(u16_t chksum)
PACK_STRUCT_FIELD	./net/lwip/include/lwip/tcp.h	/^  PACK_STRUCT_FIELD(u16_t dest);$/;"	p	struct:tcp_hdr	access:public	signature:(u16_t dest)
PACK_STRUCT_FIELD	./net/lwip/include/lwip/tcp.h	/^  PACK_STRUCT_FIELD(u16_t src);$/;"	p	struct:tcp_hdr	access:public	signature:(u16_t src)
PACK_STRUCT_FIELD	./net/lwip/include/lwip/tcp.h	/^  PACK_STRUCT_FIELD(u16_t urgp);$/;"	p	struct:tcp_hdr	access:public	signature:(u16_t urgp)
PACK_STRUCT_FIELD	./net/lwip/include/lwip/tcp.h	/^  PACK_STRUCT_FIELD(u16_t wnd);$/;"	p	struct:tcp_hdr	access:public	signature:(u16_t wnd)
PACK_STRUCT_FIELD	./net/lwip/include/lwip/tcp.h	/^  PACK_STRUCT_FIELD(u32_t ackno);$/;"	p	struct:tcp_hdr	access:public	signature:(u32_t ackno)
PACK_STRUCT_FIELD	./net/lwip/include/lwip/tcp.h	/^  PACK_STRUCT_FIELD(u32_t seqno);$/;"	p	struct:tcp_hdr	access:public	signature:(u32_t seqno)
PACK_STRUCT_FIELD	./net/lwip/include/lwip/udp.h	/^  PACK_STRUCT_FIELD(u16_t chksum);$/;"	p	struct:udp_hdr	access:public	signature:(u16_t chksum)
PACK_STRUCT_FIELD	./net/lwip/include/lwip/udp.h	/^  PACK_STRUCT_FIELD(u16_t dest);  \/* src\/dest UDP ports *\/$/;"	p	struct:udp_hdr	access:public	signature:(u16_t dest)
PACK_STRUCT_FIELD	./net/lwip/include/lwip/udp.h	/^  PACK_STRUCT_FIELD(u16_t len);$/;"	p	struct:udp_hdr	access:public	signature:(u16_t len)
PACK_STRUCT_FIELD	./net/lwip/include/lwip/udp.h	/^  PACK_STRUCT_FIELD(u16_t src);$/;"	p	struct:udp_hdr	access:public	signature:(u16_t src)
PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(struct eth_addr dest);$/;"	p	struct:eth_hdr	access:public	signature:(struct eth_addr dest)
PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(struct eth_addr dhwaddr);$/;"	p	struct:etharp_hdr	access:public	signature:(struct eth_addr dhwaddr)
PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(struct eth_addr shwaddr);$/;"	p	struct:etharp_hdr	access:public	signature:(struct eth_addr shwaddr)
PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(struct eth_addr src);$/;"	p	struct:eth_hdr	access:public	signature:(struct eth_addr src)
PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(struct eth_hdr eth);$/;"	p	struct:ethip_hdr	access:public	signature:(struct eth_hdr eth)
PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(struct eth_hdr ethhdr);$/;"	p	struct:etharp_hdr	access:public	signature:(struct eth_hdr ethhdr)
PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(struct ip_addr2 dipaddr);$/;"	p	struct:etharp_hdr	access:public	signature:(struct ip_addr2 dipaddr)
PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(struct ip_addr2 sipaddr);$/;"	p	struct:etharp_hdr	access:public	signature:(struct ip_addr2 sipaddr)
PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(struct ip_hdr ip);$/;"	p	struct:ethip_hdr	access:public	signature:(struct ip_hdr ip)
PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(u16_t _hwlen_protolen);$/;"	p	struct:etharp_hdr	access:public	signature:(u16_t _hwlen_protolen)
PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(u16_t hwtype);$/;"	p	struct:etharp_hdr	access:public	signature:(u16_t hwtype)
PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(u16_t opcode);$/;"	p	struct:etharp_hdr	access:public	signature:(u16_t opcode)
PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(u16_t proto);$/;"	p	struct:etharp_hdr	access:public	signature:(u16_t proto)
PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(u16_t type);$/;"	p	struct:eth_hdr	access:public	signature:(u16_t type)
PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(u8_t addr[ETHARP_HWADDR_LEN]);$/;"	p	struct:eth_addr	access:public	signature:(u8_t addr[ETHARP_HWADDR_LEN])
PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(u8_t padding[ETH_PAD_SIZE]);$/;"	p	struct:eth_hdr	access:public	signature:(u8_t padding[ETH_PAD_SIZE])
PACK_STRUCT_FIELD	./net/lwip/include/netif/ppp_oe.h	/^	PACK_STRUCT_FIELD(u16_t len);$/;"	p	struct:pppoetag	access:public	signature:(u16_t len)
PACK_STRUCT_FIELD	./net/lwip/include/netif/ppp_oe.h	/^	PACK_STRUCT_FIELD(u16_t plen);$/;"	p	struct:pppoehdr	access:public	signature:(u16_t plen)
PACK_STRUCT_FIELD	./net/lwip/include/netif/ppp_oe.h	/^	PACK_STRUCT_FIELD(u16_t session);$/;"	p	struct:pppoehdr	access:public	signature:(u16_t session)
PACK_STRUCT_FIELD	./net/lwip/include/netif/ppp_oe.h	/^	PACK_STRUCT_FIELD(u16_t tag);$/;"	p	struct:pppoetag	access:public	signature:(u16_t tag)
PACK_STRUCT_FIELD	./net/lwip/include/netif/ppp_oe.h	/^	PACK_STRUCT_FIELD(u8_t code);$/;"	p	struct:pppoehdr	access:public	signature:(u8_t code)
PACK_STRUCT_FIELD	./net/lwip/include/netif/ppp_oe.h	/^	PACK_STRUCT_FIELD(u8_t vertype);$/;"	p	struct:pppoehdr	access:public	signature:(u8_t vertype)
PACK_STRUCT_FIELD	./net/lwip/jos/arch/cc.h	21;"	d
PACK_STRUCT_STRUCT	./net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_dur_hdr
PACK_STRUCT_STRUCT	./net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_echo_hdr
PACK_STRUCT_STRUCT	./net/lwip/include/ipv4/lwip/icmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:icmp_te_hdr
PACK_STRUCT_STRUCT	./net/lwip/include/ipv4/lwip/igmp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:igmp_msg
PACK_STRUCT_STRUCT	./net/lwip/include/ipv4/lwip/ip.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_hdr
PACK_STRUCT_STRUCT	./net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	./net/lwip/include/ipv4/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	./net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr
PACK_STRUCT_STRUCT	./net/lwip/include/ipv6/lwip/ip_addr.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ip_addr2
PACK_STRUCT_STRUCT	./net/lwip/include/lwip/dhcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:dhcp_msg
PACK_STRUCT_STRUCT	./net/lwip/include/lwip/tcp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:tcp_hdr
PACK_STRUCT_STRUCT	./net/lwip/include/lwip/udp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:udp_hdr
PACK_STRUCT_STRUCT	./net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_addr
PACK_STRUCT_STRUCT	./net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:eth_hdr
PACK_STRUCT_STRUCT	./net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:etharp_hdr
PACK_STRUCT_STRUCT	./net/lwip/include/netif/etharp.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:ethip_hdr
PACK_STRUCT_STRUCT	./net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoehdr
PACK_STRUCT_STRUCT	./net/lwip/include/netif/ppp_oe.h	/^} PACK_STRUCT_STRUCT;$/;"	v	typeref:struct:pppoetag
PACK_STRUCT_STRUCT	./net/lwip/jos/arch/cc.h	22;"	d
PADDR	./kern/pmap.h	26;"	d
PAP_H	./net/lwip/netif/ppp/pap.h	53;"	d
PAP_SUPPORT	./net/lwip/include/lwip/opt.h	1281;"	d
PBUF_DEBUG	./net/lwip/include/lwip/opt.h	1490;"	d
PBUF_FLAG_PUSH	./net/lwip/include/lwip/pbuf.h	62;"	d
PBUF_IP	./net/lwip/include/lwip/pbuf.h	/^  PBUF_IP,$/;"	e	enum:__anon25
PBUF_IP_HLEN	./net/lwip/include/lwip/pbuf.h	44;"	d
PBUF_LINK	./net/lwip/include/lwip/pbuf.h	/^  PBUF_LINK,$/;"	e	enum:__anon25
PBUF_LINK_HLEN	./net/lwip/include/lwip/opt.h	780;"	d
PBUF_POOL	./net/lwip/include/lwip/pbuf.h	/^  PBUF_POOL \/* pbuf payload refers to RAM *\/$/;"	e	enum:__anon26
PBUF_POOL_BUFSIZE	./net/lwip/include/lwip/opt.h	789;"	d
PBUF_POOL_BUFSIZE	./net/lwip/jos/lwipopts.h	38;"	d
PBUF_POOL_SIZE	./net/lwip/include/lwip/opt.h	309;"	d
PBUF_POOL_SIZE	./net/lwip/jos/lwipopts.h	37;"	d
PBUF_RAM	./net/lwip/include/lwip/pbuf.h	/^  PBUF_RAM, \/* pbuf data is stored in RAM *\/$/;"	e	enum:__anon26
PBUF_RAW	./net/lwip/include/lwip/pbuf.h	/^  PBUF_RAW$/;"	e	enum:__anon25
PBUF_REF	./net/lwip/include/lwip/pbuf.h	/^  PBUF_REF, \/* pbuf comes from the pbuf pool *\/$/;"	e	enum:__anon26
PBUF_ROM	./net/lwip/include/lwip/pbuf.h	/^  PBUF_ROM, \/* pbuf data is stored in ROM *\/$/;"	e	enum:__anon26
PBUF_TRANSPORT	./net/lwip/include/lwip/pbuf.h	/^  PBUF_TRANSPORT,$/;"	e	enum:__anon25
PBUF_TRANSPORT_HLEN	./net/lwip/include/lwip/pbuf.h	43;"	d
PCI32_DMA_BOUNCE_THRESHOLD	./kern/pcireg.h	708;"	d
PCI_BHLC_CODE	./kern/pcireg.h	329;"	d
PCI_BHLC_REG	./kern/pcireg.h	302;"	d
PCI_BIST	./kern/pcireg.h	306;"	d
PCI_BIST_MASK	./kern/pcireg.h	305;"	d
PCI_BIST_SHIFT	./kern/pcireg.h	304;"	d
PCI_BRIDGE_BUS_PRIMARY_SHIFT	./kern/pcireg.h	590;"	d
PCI_BRIDGE_BUS_REG	./kern/pcireg.h	589;"	d
PCI_BRIDGE_BUS_SECONDARY_SHIFT	./kern/pcireg.h	591;"	d
PCI_BRIDGE_BUS_SUBORDINATE_SHIFT	./kern/pcireg.h	592;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_SERR	./kern/pcireg.h	639;"	d
PCI_BRIDGE_CONTROL_DISC_TIMER_STAT	./kern/pcireg.h	638;"	d
PCI_BRIDGE_CONTROL_ISA	./kern/pcireg.h	630;"	d
PCI_BRIDGE_CONTROL_MABRT	./kern/pcireg.h	633;"	d
PCI_BRIDGE_CONTROL_MASK	./kern/pcireg.h	627;"	d
PCI_BRIDGE_CONTROL_PERE	./kern/pcireg.h	628;"	d
PCI_BRIDGE_CONTROL_PRI_DISC_TIMER	./kern/pcireg.h	636;"	d
PCI_BRIDGE_CONTROL_REG	./kern/pcireg.h	625;"	d
PCI_BRIDGE_CONTROL_SECBR	./kern/pcireg.h	634;"	d
PCI_BRIDGE_CONTROL_SECFASTB2B	./kern/pcireg.h	635;"	d
PCI_BRIDGE_CONTROL_SEC_DISC_TIMER	./kern/pcireg.h	637;"	d
PCI_BRIDGE_CONTROL_SERR	./kern/pcireg.h	629;"	d
PCI_BRIDGE_CONTROL_SHIFT	./kern/pcireg.h	626;"	d
PCI_BRIDGE_CONTROL_VGA	./kern/pcireg.h	631;"	d
PCI_BRIDGE_IOHIGH_BASE_MASK	./kern/pcireg.h	622;"	d
PCI_BRIDGE_IOHIGH_BASE_SHIFT	./kern/pcireg.h	620;"	d
PCI_BRIDGE_IOHIGH_LIMIT_MASK	./kern/pcireg.h	623;"	d
PCI_BRIDGE_IOHIGH_LIMIT_SHIFT	./kern/pcireg.h	621;"	d
PCI_BRIDGE_IOHIGH_REG	./kern/pcireg.h	619;"	d
PCI_BRIDGE_IO_32BITS	./kern/pcireg.h	601;"	d
PCI_BRIDGE_MEMORY_BASE_MASK	./kern/pcireg.h	606;"	d
PCI_BRIDGE_MEMORY_BASE_SHIFT	./kern/pcireg.h	604;"	d
PCI_BRIDGE_MEMORY_LIMIT_MASK	./kern/pcireg.h	607;"	d
PCI_BRIDGE_MEMORY_LIMIT_SHIFT	./kern/pcireg.h	605;"	d
PCI_BRIDGE_MEMORY_REG	./kern/pcireg.h	603;"	d
PCI_BRIDGE_PREFETCHBASE32_REG	./kern/pcireg.h	616;"	d
PCI_BRIDGE_PREFETCHLIMIT32_REG	./kern/pcireg.h	617;"	d
PCI_BRIDGE_PREFETCHMEM_64BITS	./kern/pcireg.h	614;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_MASK	./kern/pcireg.h	612;"	d
PCI_BRIDGE_PREFETCHMEM_BASE_SHIFT	./kern/pcireg.h	610;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_MASK	./kern/pcireg.h	613;"	d
PCI_BRIDGE_PREFETCHMEM_LIMIT_SHIFT	./kern/pcireg.h	611;"	d
PCI_BRIDGE_PREFETCHMEM_REG	./kern/pcireg.h	609;"	d
PCI_BRIDGE_STATIO_IOBASE_MASK	./kern/pcireg.h	598;"	d
PCI_BRIDGE_STATIO_IOBASE_SHIFT	./kern/pcireg.h	595;"	d
PCI_BRIDGE_STATIO_IOLIMIT_MASK	./kern/pcireg.h	599;"	d
PCI_BRIDGE_STATIO_IOLIMIT_SHIFT	./kern/pcireg.h	596;"	d
PCI_BRIDGE_STATIO_REG	./kern/pcireg.h	594;"	d
PCI_BRIDGE_STATIO_STATUS_MASK	./kern/pcireg.h	600;"	d
PCI_BRIDGE_STATIO_STATUS_SHIFT	./kern/pcireg.h	597;"	d
PCI_CACHELINE	./kern/pcireg.h	326;"	d
PCI_CACHELINE_MASK	./kern/pcireg.h	325;"	d
PCI_CACHELINE_SHIFT	./kern/pcireg.h	324;"	d
PCI_CAPLISTPTR_REG	./kern/pcireg.h	412;"	d
PCI_CAPLIST_CAP	./kern/pcireg.h	416;"	d
PCI_CAPLIST_NEXT	./kern/pcireg.h	415;"	d
PCI_CAPLIST_PTR	./kern/pcireg.h	414;"	d
PCI_CAP_AGP	./kern/pcireg.h	420;"	d
PCI_CAP_AGP8	./kern/pcireg.h	433;"	d
PCI_CAP_AGP_MAJOR	./kern/pcireg.h	421;"	d
PCI_CAP_AGP_MINOR	./kern/pcireg.h	422;"	d
PCI_CAP_CPCI_HOTSWAP	./kern/pcireg.h	426;"	d
PCI_CAP_CPCI_RSRCCTL	./kern/pcireg.h	431;"	d
PCI_CAP_DEBUGPORT	./kern/pcireg.h	430;"	d
PCI_CAP_HOTPLUG	./kern/pcireg.h	432;"	d
PCI_CAP_LDT	./kern/pcireg.h	428;"	d
PCI_CAP_MSI	./kern/pcireg.h	425;"	d
PCI_CAP_MSIX	./kern/pcireg.h	436;"	d
PCI_CAP_PCIEXPRESS	./kern/pcireg.h	435;"	d
PCI_CAP_PCIX	./kern/pcireg.h	427;"	d
PCI_CAP_PWRMGMT	./kern/pcireg.h	419;"	d
PCI_CAP_RESERVED0	./kern/pcireg.h	418;"	d
PCI_CAP_SECURE	./kern/pcireg.h	434;"	d
PCI_CAP_SLOTID	./kern/pcireg.h	424;"	d
PCI_CAP_VENDSPEC	./kern/pcireg.h	429;"	d
PCI_CAP_VPD	./kern/pcireg.h	423;"	d
PCI_CARDBUS_CAPLISTPTR_REG	./kern/pcireg.h	413;"	d
PCI_CARDBUS_CIS_REG	./kern/pcireg.h	400;"	d
PCI_CLASS	./kern/pcireg.h	118;"	d
PCI_CLASS_BRIDGE	./kern/pcireg.h	148;"	d
PCI_CLASS_CODE	./kern/pcireg.h	136;"	d
PCI_CLASS_COMMUNICATIONS	./kern/pcireg.h	149;"	d
PCI_CLASS_CRYPTO	./kern/pcireg.h	158;"	d
PCI_CLASS_DASP	./kern/pcireg.h	159;"	d
PCI_CLASS_DISPLAY	./kern/pcireg.h	145;"	d
PCI_CLASS_DOCK	./kern/pcireg.h	152;"	d
PCI_CLASS_I2O	./kern/pcireg.h	156;"	d
PCI_CLASS_INPUT	./kern/pcireg.h	151;"	d
PCI_CLASS_MASK	./kern/pcireg.h	117;"	d
PCI_CLASS_MASS_STORAGE	./kern/pcireg.h	143;"	d
PCI_CLASS_MEMORY	./kern/pcireg.h	147;"	d
PCI_CLASS_MULTIMEDIA	./kern/pcireg.h	146;"	d
PCI_CLASS_NETWORK	./kern/pcireg.h	144;"	d
PCI_CLASS_PREHISTORIC	./kern/pcireg.h	142;"	d
PCI_CLASS_PROCESSOR	./kern/pcireg.h	153;"	d
PCI_CLASS_REG	./kern/pcireg.h	109;"	d
PCI_CLASS_SATCOM	./kern/pcireg.h	157;"	d
PCI_CLASS_SERIALBUS	./kern/pcireg.h	154;"	d
PCI_CLASS_SHIFT	./kern/pcireg.h	116;"	d
PCI_CLASS_SYSTEM	./kern/pcireg.h	150;"	d
PCI_CLASS_UNDEFINED	./kern/pcireg.h	160;"	d
PCI_CLASS_WIRELESS	./kern/pcireg.h	155;"	d
PCI_COMMAND_BACKTOBACK_ENABLE	./kern/pcireg.h	89;"	d
PCI_COMMAND_INVALIDATE_ENABLE	./kern/pcireg.h	84;"	d
PCI_COMMAND_IO_ENABLE	./kern/pcireg.h	80;"	d
PCI_COMMAND_MASK	./kern/pcireg.h	72;"	d
PCI_COMMAND_MASTER_ENABLE	./kern/pcireg.h	82;"	d
PCI_COMMAND_MEM_ENABLE	./kern/pcireg.h	81;"	d
PCI_COMMAND_PALETTE_ENABLE	./kern/pcireg.h	85;"	d
PCI_COMMAND_PARITY_ENABLE	./kern/pcireg.h	86;"	d
PCI_COMMAND_SERR_ENABLE	./kern/pcireg.h	88;"	d
PCI_COMMAND_SHIFT	./kern/pcireg.h	71;"	d
PCI_COMMAND_SPECIAL_ENABLE	./kern/pcireg.h	83;"	d
PCI_COMMAND_STATUS_CODE	./kern/pcireg.h	76;"	d
PCI_COMMAND_STATUS_REG	./kern/pcireg.h	70;"	d
PCI_COMMAND_STEPPING_ENABLE	./kern/pcireg.h	87;"	d
PCI_HDRTYPE	./kern/pcireg.h	311;"	d
PCI_HDRTYPE_DEVICE	./kern/pcireg.h	339;"	d
PCI_HDRTYPE_MASK	./kern/pcireg.h	310;"	d
PCI_HDRTYPE_MULTIFN	./kern/pcireg.h	316;"	d
PCI_HDRTYPE_PCB	./kern/pcireg.h	341;"	d
PCI_HDRTYPE_PPB	./kern/pcireg.h	340;"	d
PCI_HDRTYPE_SHIFT	./kern/pcireg.h	309;"	d
PCI_HDRTYPE_TYPE	./kern/pcireg.h	314;"	d
PCI_ID_CODE	./kern/pcireg.h	63;"	d
PCI_ID_REG	./kern/pcireg.h	48;"	d
PCI_INTERFACE	./kern/pcireg.h	128;"	d
PCI_INTERFACE_MASK	./kern/pcireg.h	127;"	d
PCI_INTERFACE_SHIFT	./kern/pcireg.h	126;"	d
PCI_INTERRUPT_CODE	./kern/pcireg.h	575;"	d
PCI_INTERRUPT_GRANT	./kern/pcireg.h	557;"	d
PCI_INTERRUPT_GRANT_MASK	./kern/pcireg.h	556;"	d
PCI_INTERRUPT_GRANT_SHIFT	./kern/pcireg.h	555;"	d
PCI_INTERRUPT_LATENCY	./kern/pcireg.h	562;"	d
PCI_INTERRUPT_LATENCY_MASK	./kern/pcireg.h	561;"	d
PCI_INTERRUPT_LATENCY_SHIFT	./kern/pcireg.h	560;"	d
PCI_INTERRUPT_LINE	./kern/pcireg.h	572;"	d
PCI_INTERRUPT_LINE_MASK	./kern/pcireg.h	571;"	d
PCI_INTERRUPT_LINE_SHIFT	./kern/pcireg.h	570;"	d
PCI_INTERRUPT_PIN	./kern/pcireg.h	567;"	d
PCI_INTERRUPT_PIN_A	./kern/pcireg.h	582;"	d
PCI_INTERRUPT_PIN_B	./kern/pcireg.h	583;"	d
PCI_INTERRUPT_PIN_C	./kern/pcireg.h	584;"	d
PCI_INTERRUPT_PIN_D	./kern/pcireg.h	585;"	d
PCI_INTERRUPT_PIN_MASK	./kern/pcireg.h	566;"	d
PCI_INTERRUPT_PIN_MAX	./kern/pcireg.h	586;"	d
PCI_INTERRUPT_PIN_NONE	./kern/pcireg.h	581;"	d
PCI_INTERRUPT_PIN_SHIFT	./kern/pcireg.h	565;"	d
PCI_INTERRUPT_REG	./kern/pcireg.h	538;"	d
PCI_LATTIMER	./kern/pcireg.h	321;"	d
PCI_LATTIMER_MASK	./kern/pcireg.h	320;"	d
PCI_LATTIMER_SHIFT	./kern/pcireg.h	319;"	d
PCI_MAPREG_END	./kern/pcireg.h	347;"	d
PCI_MAPREG_IO_ADDR	./kern/pcireg.h	384;"	d
PCI_MAPREG_IO_ADDR_MASK	./kern/pcireg.h	388;"	d
PCI_MAPREG_IO_SIZE	./kern/pcireg.h	386;"	d
PCI_MAPREG_MEM64_ADDR	./kern/pcireg.h	378;"	d
PCI_MAPREG_MEM64_ADDR_MASK	./kern/pcireg.h	382;"	d
PCI_MAPREG_MEM64_SIZE	./kern/pcireg.h	380;"	d
PCI_MAPREG_MEM_ADDR	./kern/pcireg.h	372;"	d
PCI_MAPREG_MEM_ADDR_MASK	./kern/pcireg.h	376;"	d
PCI_MAPREG_MEM_PREFETCHABLE	./kern/pcireg.h	368;"	d
PCI_MAPREG_MEM_PREFETCHABLE_MASK	./kern/pcireg.h	370;"	d
PCI_MAPREG_MEM_SIZE	./kern/pcireg.h	374;"	d
PCI_MAPREG_MEM_TYPE	./kern/pcireg.h	360;"	d
PCI_MAPREG_MEM_TYPE_32BIT	./kern/pcireg.h	364;"	d
PCI_MAPREG_MEM_TYPE_32BIT_1M	./kern/pcireg.h	365;"	d
PCI_MAPREG_MEM_TYPE_64BIT	./kern/pcireg.h	366;"	d
PCI_MAPREG_MEM_TYPE_MASK	./kern/pcireg.h	362;"	d
PCI_MAPREG_NUM	./kern/pcireg.h	393;"	d
PCI_MAPREG_PCB_END	./kern/pcireg.h	350;"	d
PCI_MAPREG_PPB_END	./kern/pcireg.h	349;"	d
PCI_MAPREG_ROM	./kern/pcireg.h	348;"	d
PCI_MAPREG_ROM_ENABLE	./kern/pcireg.h	358;"	d
PCI_MAPREG_SIZE_TO_MASK	./kern/pcireg.h	390;"	d
PCI_MAPREG_START	./kern/pcireg.h	346;"	d
PCI_MAPREG_TYPE	./kern/pcireg.h	352;"	d
PCI_MAPREG_TYPE_IO	./kern/pcireg.h	357;"	d
PCI_MAPREG_TYPE_MASK	./kern/pcireg.h	354;"	d
PCI_MAPREG_TYPE_MEM	./kern/pcireg.h	356;"	d
PCI_MAX_LAT	./kern/pcireg.h	547;"	d
PCI_MAX_LAT_MASK	./kern/pcireg.h	546;"	d
PCI_MAX_LAT_SHIFT	./kern/pcireg.h	545;"	d
PCI_MIN_GNT	./kern/pcireg.h	552;"	d
PCI_MIN_GNT_MASK	./kern/pcireg.h	551;"	d
PCI_MIN_GNT_SHIFT	./kern/pcireg.h	550;"	d
PCI_PCIX_CMD	./kern/pcireg.h	477;"	d
PCI_PCIX_CMD_BCNT_1024	./kern/pcireg.h	483;"	d
PCI_PCIX_CMD_BCNT_2048	./kern/pcireg.h	484;"	d
PCI_PCIX_CMD_BCNT_4096	./kern/pcireg.h	485;"	d
PCI_PCIX_CMD_BCNT_512	./kern/pcireg.h	482;"	d
PCI_PCIX_CMD_BYTECNT_MASK	./kern/pcireg.h	480;"	d
PCI_PCIX_CMD_BYTECNT_SHIFT	./kern/pcireg.h	481;"	d
PCI_PCIX_CMD_PERR_RECOVER	./kern/pcireg.h	478;"	d
PCI_PCIX_CMD_RELAXED_ORDER	./kern/pcireg.h	479;"	d
PCI_PCIX_CMD_SPLTRANS_1	./kern/pcireg.h	487;"	d
PCI_PCIX_CMD_SPLTRANS_12	./kern/pcireg.h	492;"	d
PCI_PCIX_CMD_SPLTRANS_16	./kern/pcireg.h	493;"	d
PCI_PCIX_CMD_SPLTRANS_2	./kern/pcireg.h	488;"	d
PCI_PCIX_CMD_SPLTRANS_3	./kern/pcireg.h	489;"	d
PCI_PCIX_CMD_SPLTRANS_32	./kern/pcireg.h	494;"	d
PCI_PCIX_CMD_SPLTRANS_4	./kern/pcireg.h	490;"	d
PCI_PCIX_CMD_SPLTRANS_8	./kern/pcireg.h	491;"	d
PCI_PCIX_CMD_SPLTRANS_MASK	./kern/pcireg.h	486;"	d
PCI_PCIX_STATUS	./kern/pcireg.h	499;"	d
PCI_PCIX_STATUS_133	./kern/pcireg.h	504;"	d
PCI_PCIX_STATUS_64BIT	./kern/pcireg.h	503;"	d
PCI_PCIX_STATUS_BUS_MASK	./kern/pcireg.h	502;"	d
PCI_PCIX_STATUS_DEVCPLX	./kern/pcireg.h	507;"	d
PCI_PCIX_STATUS_DEV_MASK	./kern/pcireg.h	501;"	d
PCI_PCIX_STATUS_FN_MASK	./kern/pcireg.h	500;"	d
PCI_PCIX_STATUS_MAXB_1024	./kern/pcireg.h	511;"	d
PCI_PCIX_STATUS_MAXB_2048	./kern/pcireg.h	512;"	d
PCI_PCIX_STATUS_MAXB_4096	./kern/pcireg.h	513;"	d
PCI_PCIX_STATUS_MAXB_512	./kern/pcireg.h	510;"	d
PCI_PCIX_STATUS_MAXB_MASK	./kern/pcireg.h	508;"	d
PCI_PCIX_STATUS_MAXB_SHIFT	./kern/pcireg.h	509;"	d
PCI_PCIX_STATUS_MAXRS_128K	./kern/pcireg.h	531;"	d
PCI_PCIX_STATUS_MAXRS_16K	./kern/pcireg.h	528;"	d
PCI_PCIX_STATUS_MAXRS_1K	./kern/pcireg.h	524;"	d
PCI_PCIX_STATUS_MAXRS_2K	./kern/pcireg.h	525;"	d
PCI_PCIX_STATUS_MAXRS_32K	./kern/pcireg.h	529;"	d
PCI_PCIX_STATUS_MAXRS_4K	./kern/pcireg.h	526;"	d
PCI_PCIX_STATUS_MAXRS_64K	./kern/pcireg.h	530;"	d
PCI_PCIX_STATUS_MAXRS_8K	./kern/pcireg.h	527;"	d
PCI_PCIX_STATUS_MAXRS_MASK	./kern/pcireg.h	523;"	d
PCI_PCIX_STATUS_MAXST_1	./kern/pcireg.h	515;"	d
PCI_PCIX_STATUS_MAXST_12	./kern/pcireg.h	520;"	d
PCI_PCIX_STATUS_MAXST_16	./kern/pcireg.h	521;"	d
PCI_PCIX_STATUS_MAXST_2	./kern/pcireg.h	516;"	d
PCI_PCIX_STATUS_MAXST_3	./kern/pcireg.h	517;"	d
PCI_PCIX_STATUS_MAXST_32	./kern/pcireg.h	522;"	d
PCI_PCIX_STATUS_MAXST_4	./kern/pcireg.h	518;"	d
PCI_PCIX_STATUS_MAXST_8	./kern/pcireg.h	519;"	d
PCI_PCIX_STATUS_MAXST_MASK	./kern/pcireg.h	514;"	d
PCI_PCIX_STATUS_SCERR	./kern/pcireg.h	532;"	d
PCI_PCIX_STATUS_SPLDISC	./kern/pcireg.h	505;"	d
PCI_PCIX_STATUS_SPLUNEX	./kern/pcireg.h	506;"	d
PCI_PMCR	./kern/pcireg.h	453;"	d
PCI_PMCR_D1SUPP	./kern/pcireg.h	454;"	d
PCI_PMCR_D2SUPP	./kern/pcireg.h	455;"	d
PCI_PMCSR	./kern/pcireg.h	457;"	d
PCI_PMCSR_STATE_D0	./kern/pcireg.h	459;"	d
PCI_PMCSR_STATE_D1	./kern/pcireg.h	460;"	d
PCI_PMCSR_STATE_D2	./kern/pcireg.h	461;"	d
PCI_PMCSR_STATE_D3	./kern/pcireg.h	462;"	d
PCI_PMCSR_STATE_MASK	./kern/pcireg.h	458;"	d
PCI_PRODUCT	./kern/pcireg.h	60;"	d
PCI_PRODUCT_MASK	./kern/pcireg.h	59;"	d
PCI_PRODUCT_SHIFT	./kern/pcireg.h	58;"	d
PCI_REVISION	./kern/pcireg.h	133;"	d
PCI_REVISION_MASK	./kern/pcireg.h	132;"	d
PCI_REVISION_SHIFT	./kern/pcireg.h	131;"	d
PCI_STATUS_66MHZ_SUPPORT	./kern/pcireg.h	92;"	d
PCI_STATUS_BACKTOBACK_SUPPORT	./kern/pcireg.h	94;"	d
PCI_STATUS_CAPLIST_SUPPORT	./kern/pcireg.h	91;"	d
PCI_STATUS_DEVSEL_FAST	./kern/pcireg.h	96;"	d
PCI_STATUS_DEVSEL_MASK	./kern/pcireg.h	99;"	d
PCI_STATUS_DEVSEL_MEDIUM	./kern/pcireg.h	97;"	d
PCI_STATUS_DEVSEL_SLOW	./kern/pcireg.h	98;"	d
PCI_STATUS_MASK	./kern/pcireg.h	74;"	d
PCI_STATUS_MASTER_ABORT	./kern/pcireg.h	102;"	d
PCI_STATUS_MASTER_TARGET_ABORT	./kern/pcireg.h	101;"	d
PCI_STATUS_PARITY_DETECT	./kern/pcireg.h	104;"	d
PCI_STATUS_PARITY_ERROR	./kern/pcireg.h	95;"	d
PCI_STATUS_SHIFT	./kern/pcireg.h	73;"	d
PCI_STATUS_SPECIAL_ERROR	./kern/pcireg.h	103;"	d
PCI_STATUS_TARGET_TARGET_ABORT	./kern/pcireg.h	100;"	d
PCI_STATUS_UDF_SUPPORT	./kern/pcireg.h	93;"	d
PCI_SUBCLASS	./kern/pcireg.h	123;"	d
PCI_SUBCLASS_BRIDGE_CARDBUS	./kern/pcireg.h	211;"	d
PCI_SUBCLASS_BRIDGE_EISA	./kern/pcireg.h	206;"	d
PCI_SUBCLASS_BRIDGE_HOST	./kern/pcireg.h	204;"	d
PCI_SUBCLASS_BRIDGE_INFINIBAND	./kern/pcireg.h	214;"	d
PCI_SUBCLASS_BRIDGE_ISA	./kern/pcireg.h	205;"	d
PCI_SUBCLASS_BRIDGE_MC	./kern/pcireg.h	207;"	d
PCI_SUBCLASS_BRIDGE_MISC	./kern/pcireg.h	215;"	d
PCI_SUBCLASS_BRIDGE_NUBUS	./kern/pcireg.h	210;"	d
PCI_SUBCLASS_BRIDGE_PCI	./kern/pcireg.h	208;"	d
PCI_SUBCLASS_BRIDGE_PCMCIA	./kern/pcireg.h	209;"	d
PCI_SUBCLASS_BRIDGE_RACEWAY	./kern/pcireg.h	212;"	d
PCI_SUBCLASS_BRIDGE_STPCI	./kern/pcireg.h	213;"	d
PCI_SUBCLASS_COMMUNICATIONS_GPIB	./kern/pcireg.h	222;"	d
PCI_SUBCLASS_COMMUNICATIONS_MISC	./kern/pcireg.h	224;"	d
PCI_SUBCLASS_COMMUNICATIONS_MODEM	./kern/pcireg.h	221;"	d
PCI_SUBCLASS_COMMUNICATIONS_MPSERIAL	./kern/pcireg.h	220;"	d
PCI_SUBCLASS_COMMUNICATIONS_PARALLEL	./kern/pcireg.h	219;"	d
PCI_SUBCLASS_COMMUNICATIONS_SERIAL	./kern/pcireg.h	218;"	d
PCI_SUBCLASS_COMMUNICATIONS_SMARTCARD	./kern/pcireg.h	223;"	d
PCI_SUBCLASS_CRYPTO_ENTERTAINMENT	./kern/pcireg.h	289;"	d
PCI_SUBCLASS_CRYPTO_MISC	./kern/pcireg.h	290;"	d
PCI_SUBCLASS_CRYPTO_NETCOMP	./kern/pcireg.h	288;"	d
PCI_SUBCLASS_DASP_DPIO	./kern/pcireg.h	293;"	d
PCI_SUBCLASS_DASP_MGMT	./kern/pcireg.h	296;"	d
PCI_SUBCLASS_DASP_MISC	./kern/pcireg.h	297;"	d
PCI_SUBCLASS_DASP_SYNC	./kern/pcireg.h	295;"	d
PCI_SUBCLASS_DASP_TIMEFREQ	./kern/pcireg.h	294;"	d
PCI_SUBCLASS_DISPLAY_3D	./kern/pcireg.h	189;"	d
PCI_SUBCLASS_DISPLAY_MISC	./kern/pcireg.h	190;"	d
PCI_SUBCLASS_DISPLAY_VGA	./kern/pcireg.h	187;"	d
PCI_SUBCLASS_DISPLAY_XGA	./kern/pcireg.h	188;"	d
PCI_SUBCLASS_DOCK_GENERIC	./kern/pcireg.h	243;"	d
PCI_SUBCLASS_DOCK_MISC	./kern/pcireg.h	244;"	d
PCI_SUBCLASS_I2O_STANDARD	./kern/pcireg.h	278;"	d
PCI_SUBCLASS_INPUT_DIGITIZER	./kern/pcireg.h	236;"	d
PCI_SUBCLASS_INPUT_GAMEPORT	./kern/pcireg.h	239;"	d
PCI_SUBCLASS_INPUT_KEYBOARD	./kern/pcireg.h	235;"	d
PCI_SUBCLASS_INPUT_MISC	./kern/pcireg.h	240;"	d
PCI_SUBCLASS_INPUT_MOUSE	./kern/pcireg.h	237;"	d
PCI_SUBCLASS_INPUT_SCANNER	./kern/pcireg.h	238;"	d
PCI_SUBCLASS_MASK	./kern/pcireg.h	122;"	d
PCI_SUBCLASS_MASS_STORAGE_ATA	./kern/pcireg.h	172;"	d
PCI_SUBCLASS_MASS_STORAGE_FLOPPY	./kern/pcireg.h	169;"	d
PCI_SUBCLASS_MASS_STORAGE_IDE	./kern/pcireg.h	168;"	d
PCI_SUBCLASS_MASS_STORAGE_IPI	./kern/pcireg.h	170;"	d
PCI_SUBCLASS_MASS_STORAGE_MISC	./kern/pcireg.h	174;"	d
PCI_SUBCLASS_MASS_STORAGE_RAID	./kern/pcireg.h	171;"	d
PCI_SUBCLASS_MASS_STORAGE_SATA	./kern/pcireg.h	173;"	d
PCI_SUBCLASS_MASS_STORAGE_SCSI	./kern/pcireg.h	167;"	d
PCI_SUBCLASS_MEMORY_FLASH	./kern/pcireg.h	200;"	d
PCI_SUBCLASS_MEMORY_MISC	./kern/pcireg.h	201;"	d
PCI_SUBCLASS_MEMORY_RAM	./kern/pcireg.h	199;"	d
PCI_SUBCLASS_MULTIMEDIA_AUDIO	./kern/pcireg.h	194;"	d
PCI_SUBCLASS_MULTIMEDIA_MISC	./kern/pcireg.h	196;"	d
PCI_SUBCLASS_MULTIMEDIA_TELEPHONY	./kern/pcireg.h	195;"	d
PCI_SUBCLASS_MULTIMEDIA_VIDEO	./kern/pcireg.h	193;"	d
PCI_SUBCLASS_NETWORK_ATM	./kern/pcireg.h	180;"	d
PCI_SUBCLASS_NETWORK_ETHERNET	./kern/pcireg.h	177;"	d
PCI_SUBCLASS_NETWORK_FDDI	./kern/pcireg.h	179;"	d
PCI_SUBCLASS_NETWORK_ISDN	./kern/pcireg.h	181;"	d
PCI_SUBCLASS_NETWORK_MISC	./kern/pcireg.h	184;"	d
PCI_SUBCLASS_NETWORK_PCIMGMULTICOMP	./kern/pcireg.h	183;"	d
PCI_SUBCLASS_NETWORK_TOKENRING	./kern/pcireg.h	178;"	d
PCI_SUBCLASS_NETWORK_WORLDFIP	./kern/pcireg.h	182;"	d
PCI_SUBCLASS_PREHISTORIC_MISC	./kern/pcireg.h	163;"	d
PCI_SUBCLASS_PREHISTORIC_VGA	./kern/pcireg.h	164;"	d
PCI_SUBCLASS_PROCESSOR_386	./kern/pcireg.h	247;"	d
PCI_SUBCLASS_PROCESSOR_486	./kern/pcireg.h	248;"	d
PCI_SUBCLASS_PROCESSOR_ALPHA	./kern/pcireg.h	250;"	d
PCI_SUBCLASS_PROCESSOR_COPROC	./kern/pcireg.h	253;"	d
PCI_SUBCLASS_PROCESSOR_MIPS	./kern/pcireg.h	252;"	d
PCI_SUBCLASS_PROCESSOR_PENTIUM	./kern/pcireg.h	249;"	d
PCI_SUBCLASS_PROCESSOR_POWERPC	./kern/pcireg.h	251;"	d
PCI_SUBCLASS_SATCOM_AUDIO	./kern/pcireg.h	283;"	d
PCI_SUBCLASS_SATCOM_DATA	./kern/pcireg.h	285;"	d
PCI_SUBCLASS_SATCOM_TV	./kern/pcireg.h	282;"	d
PCI_SUBCLASS_SATCOM_VOICE	./kern/pcireg.h	284;"	d
PCI_SUBCLASS_SERIALBUS_ACCESS	./kern/pcireg.h	257;"	d
PCI_SUBCLASS_SERIALBUS_CANBUS	./kern/pcireg.h	265;"	d
PCI_SUBCLASS_SERIALBUS_FIBER	./kern/pcireg.h	260;"	d
PCI_SUBCLASS_SERIALBUS_FIREWIRE	./kern/pcireg.h	256;"	d
PCI_SUBCLASS_SERIALBUS_INFINIBAND	./kern/pcireg.h	262;"	d
PCI_SUBCLASS_SERIALBUS_IPMI	./kern/pcireg.h	263;"	d
PCI_SUBCLASS_SERIALBUS_SERCOS	./kern/pcireg.h	264;"	d
PCI_SUBCLASS_SERIALBUS_SMBUS	./kern/pcireg.h	261;"	d
PCI_SUBCLASS_SERIALBUS_SSA	./kern/pcireg.h	258;"	d
PCI_SUBCLASS_SERIALBUS_USB	./kern/pcireg.h	259;"	d
PCI_SUBCLASS_SHIFT	./kern/pcireg.h	121;"	d
PCI_SUBCLASS_SYSTEM_DMA	./kern/pcireg.h	228;"	d
PCI_SUBCLASS_SYSTEM_MISC	./kern/pcireg.h	232;"	d
PCI_SUBCLASS_SYSTEM_PCIHOTPLUG	./kern/pcireg.h	231;"	d
PCI_SUBCLASS_SYSTEM_PIC	./kern/pcireg.h	227;"	d
PCI_SUBCLASS_SYSTEM_RTC	./kern/pcireg.h	230;"	d
PCI_SUBCLASS_SYSTEM_TIMER	./kern/pcireg.h	229;"	d
PCI_SUBCLASS_WIRELESS_802_11A	./kern/pcireg.h	273;"	d
PCI_SUBCLASS_WIRELESS_802_11B	./kern/pcireg.h	274;"	d
PCI_SUBCLASS_WIRELESS_BLUETOOTH	./kern/pcireg.h	271;"	d
PCI_SUBCLASS_WIRELESS_BROADBAND	./kern/pcireg.h	272;"	d
PCI_SUBCLASS_WIRELESS_CONSUMERIR	./kern/pcireg.h	269;"	d
PCI_SUBCLASS_WIRELESS_IRDA	./kern/pcireg.h	268;"	d
PCI_SUBCLASS_WIRELESS_MISC	./kern/pcireg.h	275;"	d
PCI_SUBCLASS_WIRELESS_RF	./kern/pcireg.h	270;"	d
PCI_SUBSYS_ID_REG	./kern/pcireg.h	407;"	d
PCI_VENDOR	./kern/pcireg.h	55;"	d
PCI_VENDOR_MASK	./kern/pcireg.h	54;"	d
PCI_VENDOR_SHIFT	./kern/pcireg.h	53;"	d
PCI_VPDRES_ISLARGE	./kern/pcireg.h	657;"	d
PCI_VPDRES_LARGE_NAME	./kern/pcireg.h	662;"	d
PCI_VPDRES_SMALL_LENGTH	./kern/pcireg.h	659;"	d
PCI_VPDRES_SMALL_NAME	./kern/pcireg.h	660;"	d
PCI_VPDRES_TYPE_COMPATIBLE_DEVICE_ID	./kern/pcireg.h	664;"	d
PCI_VPDRES_TYPE_END_TAG	./kern/pcireg.h	666;"	d
PCI_VPDRES_TYPE_IDENTIFIER_STRING	./kern/pcireg.h	668;"	d
PCI_VPDRES_TYPE_VENDOR_DEFINED	./kern/pcireg.h	665;"	d
PCI_VPDRES_TYPE_VPD	./kern/pcireg.h	669;"	d
PCI_VPD_ADDRESS	./kern/pcireg.h	443;"	d
PCI_VPD_ADDRESS_MASK	./kern/pcireg.h	441;"	d
PCI_VPD_ADDRESS_SHIFT	./kern/pcireg.h	442;"	d
PCI_VPD_DATAREG	./kern/pcireg.h	445;"	d
PCI_VPD_OPFLAG	./kern/pcireg.h	446;"	d
PDX	./inc/mmu.h	33;"	d
PDXSHIFT	./inc/mmu.h	55;"	d
PERF_START	./net/lwip/jos/arch/perf.h	4;"	d
PERF_STOP	./net/lwip/jos/arch/perf.h	5;"	d
PER_TCP_PCB_BUFFER	./net/lwip/jos/lwipopts.h	34;"	d
PFTEMP	./inc/memlayout.h	137;"	d
PF_INET	./net/lwip/include/lwip/sockets.h	119;"	d
PF_UNSPEC	./net/lwip/include/lwip/sockets.h	120;"	d
PGADDR	./inc/mmu.h	42;"	d
PGNUM	./inc/mmu.h	30;"	d
PGOFF	./inc/mmu.h	39;"	d
PGSHIFT	./inc/mmu.h	49;"	d
PGSIZE	./inc/mmu.h	48;"	d
PHASE_AUTHENTICATE	./net/lwip/netif/ppp/lcp.h	/^  PHASE_AUTHENTICATE,$/;"	e	enum:__anon14
PHASE_CALLBACK	./net/lwip/netif/ppp/lcp.h	/^  PHASE_CALLBACK,$/;"	e	enum:__anon14
PHASE_DEAD	./net/lwip/netif/ppp/lcp.h	/^  PHASE_DEAD = 0,$/;"	e	enum:__anon14
PHASE_ESTABLISH	./net/lwip/netif/ppp/lcp.h	/^  PHASE_ESTABLISH,$/;"	e	enum:__anon14
PHASE_INITIALIZE	./net/lwip/netif/ppp/lcp.h	/^  PHASE_INITIALIZE,$/;"	e	enum:__anon14
PHASE_NETWORK	./net/lwip/netif/ppp/lcp.h	/^  PHASE_NETWORK,$/;"	e	enum:__anon14
PHASE_TERMINATE	./net/lwip/netif/ppp/lcp.h	/^  PHASE_TERMINATE$/;"	e	enum:__anon14
PKT_SIZE	./kern/e1000.h	7;"	d
PPPAUTHTYPE_ANY	./net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_ANY,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_CHAP	./net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_CHAP$/;"	e	enum:pppAuthType
PPPAUTHTYPE_NONE	./net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_NONE,$/;"	e	enum:pppAuthType
PPPAUTHTYPE_PAP	./net/lwip/netif/ppp/ppp.h	/^    PPPAUTHTYPE_PAP,$/;"	e	enum:pppAuthType
PPPCTLG_ERRCODE	./net/lwip/netif/ppp/ppp.h	252;"	d
PPPCTLG_FD	./net/lwip/netif/ppp/ppp.h	253;"	d
PPPCTLG_UPSTATUS	./net/lwip/netif/ppp/ppp.h	250;"	d
PPPCTLS_ERRCODE	./net/lwip/netif/ppp/ppp.h	251;"	d
PPPDEBUG	./net/lwip/netif/ppp/pppdebug.h	72;"	d
PPPDEBUG	./net/lwip/netif/ppp/pppdebug.h	82;"	d
PPPDEBUG_H	./net/lwip/netif/ppp/pppdebug.h	37;"	d
PPPERR_ALLOC	./net/lwip/netif/ppp/ppp.h	237;"	d
PPPERR_AUTHFAIL	./net/lwip/netif/ppp/ppp.h	240;"	d
PPPERR_CONNECT	./net/lwip/netif/ppp/ppp.h	239;"	d
PPPERR_DEVICE	./net/lwip/netif/ppp/ppp.h	236;"	d
PPPERR_NONE	./net/lwip/netif/ppp/ppp.h	233;"	d
PPPERR_OPEN	./net/lwip/netif/ppp/ppp.h	235;"	d
PPPERR_PARAM	./net/lwip/netif/ppp/ppp.h	234;"	d
PPPERR_PROTOCOL	./net/lwip/netif/ppp/ppp.h	241;"	d
PPPERR_USER	./net/lwip/netif/ppp/ppp.h	238;"	d
PPPOE_CODE_PADI	./net/lwip/include/netif/ppp_oe.h	128;"	d
PPPOE_CODE_PADO	./net/lwip/include/netif/ppp_oe.h	129;"	d
PPPOE_CODE_PADR	./net/lwip/include/netif/ppp_oe.h	130;"	d
PPPOE_CODE_PADS	./net/lwip/include/netif/ppp_oe.h	131;"	d
PPPOE_CODE_PADT	./net/lwip/include/netif/ppp_oe.h	132;"	d
PPPOE_HEADERLEN	./net/lwip/include/netif/ppp_oe.h	114;"	d
PPPOE_MAXMTU	./net/lwip/include/netif/ppp_oe.h	139;"	d
PPPOE_STATE_CLOSING	./net/lwip/include/netif/ppp_oe.h	110;"	d
PPPOE_STATE_INITIAL	./net/lwip/include/netif/ppp_oe.h	106;"	d
PPPOE_STATE_PADI_SENT	./net/lwip/include/netif/ppp_oe.h	107;"	d
PPPOE_STATE_PADO_SENT	./net/lwip/include/netif/ppp_oe.h	112;"	d
PPPOE_STATE_PADR_SENT	./net/lwip/include/netif/ppp_oe.h	108;"	d
PPPOE_STATE_SESSION	./net/lwip/include/netif/ppp_oe.h	109;"	d
PPPOE_SUPPORT	./net/lwip/include/lwip/opt.h	1258;"	d
PPPOE_TAG_ACCOOKIE	./net/lwip/include/netif/ppp_oe.h	121;"	d
PPPOE_TAG_ACNAME	./net/lwip/include/netif/ppp_oe.h	119;"	d
PPPOE_TAG_ACSYS_ERR	./net/lwip/include/netif/ppp_oe.h	125;"	d
PPPOE_TAG_EOL	./net/lwip/include/netif/ppp_oe.h	117;"	d
PPPOE_TAG_GENERIC_ERR	./net/lwip/include/netif/ppp_oe.h	126;"	d
PPPOE_TAG_HUNIQUE	./net/lwip/include/netif/ppp_oe.h	120;"	d
PPPOE_TAG_RELAYSID	./net/lwip/include/netif/ppp_oe.h	123;"	d
PPPOE_TAG_SNAME	./net/lwip/include/netif/ppp_oe.h	118;"	d
PPPOE_TAG_SNAME_ERR	./net/lwip/include/netif/ppp_oe.h	124;"	d
PPPOE_TAG_VENDOR	./net/lwip/include/netif/ppp_oe.h	122;"	d
PPPOE_VERTYPE	./net/lwip/include/netif/ppp_oe.h	115;"	d
PPPOS_SUPPORT	./net/lwip/include/lwip/opt.h	1265;"	d
PPP_ALLSTATIONS	./net/lwip/netif/ppp/ppp.h	125;"	d
PPP_AT	./net/lwip/netif/ppp/ppp.h	135;"	d
PPP_ATCP	./net/lwip/netif/ppp/ppp.h	140;"	d
PPP_CBCP	./net/lwip/netif/ppp/ppp.h	146;"	d
PPP_CCP	./net/lwip/netif/ppp/ppp.h	141;"	d
PPP_CHAP	./net/lwip/netif/ppp/ppp.h	145;"	d
PPP_COMP	./net/lwip/netif/ppp/ppp.h	138;"	d
PPP_DEBUG	./net/lwip/include/lwip/opt.h	1659;"	d
PPP_DEFMRU	./net/lwip/include/lwip/opt.h	1393;"	d
PPP_ESCAPE	./net/lwip/netif/ppp/ppp.h	128;"	d
PPP_FCS	./net/lwip/netif/ppp/ppp.h	153;"	d
PPP_FCSLEN	./net/lwip/netif/ppp/ppp.h	119;"	d
PPP_FLAG	./net/lwip/netif/ppp/ppp.h	127;"	d
PPP_GOODFCS	./net/lwip/netif/ppp/ppp.h	152;"	d
PPP_H	./net/lwip/netif/ppp/ppp.h	35;"	d
PPP_HDRLEN	./net/lwip/netif/ppp/ppp.h	118;"	d
PPP_INITFCS	./net/lwip/netif/ppp/ppp.h	151;"	d
PPP_IP	./net/lwip/netif/ppp/ppp.h	134;"	d
PPP_IPCP	./net/lwip/netif/ppp/ppp.h	139;"	d
PPP_LCP	./net/lwip/netif/ppp/ppp.h	142;"	d
PPP_LQR	./net/lwip/netif/ppp/ppp.h	144;"	d
PPP_MAXIDLEFLAG	./net/lwip/include/lwip/opt.h	1373;"	d
PPP_MAXMRU	./net/lwip/include/lwip/opt.h	1391;"	d
PPP_MAXMTU	./net/lwip/include/lwip/opt.h	1387;"	d
PPP_MINMRU	./net/lwip/include/lwip/opt.h	1395;"	d
PPP_MINMTU	./net/lwip/include/lwip/opt.h	1389;"	d
PPP_MRU	./net/lwip/include/lwip/opt.h	1390;"	d
PPP_MTU	./net/lwip/include/lwip/opt.h	1384;"	d
PPP_OE_H	./net/lwip/include/netif/ppp_oe.h	71;"	d
PPP_PAP	./net/lwip/netif/ppp/ppp.h	143;"	d
PPP_SUPPORT	./net/lwip/include/lwip/opt.h	1251;"	d
PPP_THREAD_NAME	./net/lwip/include/lwip/opt.h	964;"	d
PPP_THREAD_PRIO	./net/lwip/include/lwip/opt.h	982;"	d
PPP_THREAD_STACKSIZE	./net/lwip/include/lwip/opt.h	973;"	d
PPP_TRANS	./net/lwip/netif/ppp/ppp.h	129;"	d
PPP_UI	./net/lwip/netif/ppp/ppp.h	126;"	d
PPP_VJC_COMP	./net/lwip/netif/ppp/ppp.h	136;"	d
PPP_VJC_UNCOMP	./net/lwip/netif/ppp/ppp.h	137;"	d
PRINTMSG	./net/lwip/netif/ppp/ppp.h	215;"	d
PRINTMSG	./net/lwip/netif/ppp/ppp.h	217;"	d
PROBE_MAX	./net/lwip/include/ipv4/lwip/autoip.h	62;"	d
PROBE_MIN	./net/lwip/include/ipv4/lwip/autoip.h	61;"	d
PROBE_NUM	./net/lwip/include/ipv4/lwip/autoip.h	63;"	d
PROBE_WAIT	./net/lwip/include/ipv4/lwip/autoip.h	60;"	d
PROTREJ	./net/lwip/netif/ppp/lcp.h	78;"	d
PTABLE_MAGIC	./inc/partition.h	14;"	d
PTABLE_MAGIC_OFFSET	./inc/partition.h	13;"	d
PTABLE_OFFSET	./inc/partition.h	11;"	d
PTE_A	./inc/mmu.h	63;"	d
PTE_ADDR	./inc/mmu.h	76;"	d
PTE_AVAIL	./inc/mmu.h	70;"	d
PTE_D	./inc/mmu.h	64;"	d
PTE_G	./inc/mmu.h	66;"	d
PTE_P	./inc/mmu.h	58;"	d
PTE_PCD	./inc/mmu.h	62;"	d
PTE_PS	./inc/mmu.h	65;"	d
PTE_PWT	./inc/mmu.h	61;"	d
PTE_SHARE	./inc/lib.h	86;"	d
PTE_SYSCALL	./inc/mmu.h	73;"	d
PTE_U	./inc/mmu.h	60;"	d
PTE_W	./inc/mmu.h	59;"	d
PTSHIFT	./inc/mmu.h	52;"	d
PTSIZE	./inc/mmu.h	51;"	d
PTX	./inc/mmu.h	36;"	d
PTXSHIFT	./inc/mmu.h	54;"	d
PTYPE_DOS_EXTENDED	./inc/partition.h	20;"	d
PTYPE_JOSFS	./inc/partition.h	18;"	d
PTYPE_JOS_KERN	./inc/partition.h	17;"	d
PTYPE_LINUX_EXTENDED	./inc/partition.h	22;"	d
PTYPE_W95_EXTENDED	./inc/partition.h	21;"	d
PUTCHAR	./net/lwip/netif/ppp/ppp.h	179;"	d
PUTLONG	./net/lwip/netif/ppp/ppp.h	199;"	d
PUTSHORT	./net/lwip/netif/ppp/ppp.h	188;"	d
PageInfo	./inc/memlayout.h	/^struct PageInfo {$/;"	s
PageInfo::pp_link	./inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo	access:public
PageInfo::pp_ref	./inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	access:public
Partitiondesc	./inc/partition.h	/^struct Partitiondesc {$/;"	s
Partitiondesc::boot	./inc/partition.h	/^	uint8_t boot;$/;"	m	struct:Partitiondesc	access:public
Partitiondesc::chs_begin	./inc/partition.h	/^	uint8_t chs_begin[3];$/;"	m	struct:Partitiondesc	access:public
Partitiondesc::chs_end	./inc/partition.h	/^	uint8_t chs_end[3];$/;"	m	struct:Partitiondesc	access:public
Partitiondesc::lba_length	./inc/partition.h	/^	uint32_t lba_length;$/;"	m	struct:Partitiondesc	access:public
Partitiondesc::lba_start	./inc/partition.h	/^	uint32_t lba_start;$/;"	m	struct:Partitiondesc	access:public
Partitiondesc::type	./inc/partition.h	/^	uint8_t type;$/;"	m	struct:Partitiondesc	access:public
Proghdr	./inc/elf.h	/^struct Proghdr {$/;"	s
Proghdr::p_align	./inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
Proghdr::p_filesz	./inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_flags	./inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
Proghdr::p_memsz	./inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
Proghdr::p_offset	./inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
Proghdr::p_pa	./inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
Proghdr::p_type	./inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
Proghdr::p_va	./inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
Pseudodesc	./inc/mmu.h	/^struct Pseudodesc {$/;"	s
Pseudodesc::pd_base	./inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
Pseudodesc::pd_lim	./inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
PushRegs	./inc/trap.h	/^struct PushRegs {$/;"	s
PushRegs::reg_eax	./inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ebp	./inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ebx	./inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_ecx	./inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_edi	./inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_edx	./inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_esi	./inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs	access:public
PushRegs::reg_oesp	./inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs	access:public
QUEUE_SIZE	./net/ns.h	11;"	d
RANDM_H	./net/lwip/netif/ppp/randm.h	35;"	d
RATE_LIMIT_INTERVAL	./net/lwip/include/ipv4/lwip/autoip.h	68;"	d
RAW_DEBUG	./net/lwip/include/lwip/opt.h	1553;"	d
RAW_TTL	./net/lwip/include/lwip/opt.h	471;"	d
REQVA	./net/ns.h	12;"	d
ROUNDDOWN	./inc/types.h	58;"	d
ROUNDUP	./inc/types.h	64;"	d
ROUTER_ALERT	./net/lwip/include/ipv4/lwip/igmp.h	55;"	d
ROUTER_ALERTLEN	./net/lwip/include/ipv4/lwip/igmp.h	56;"	d
S16_F	./net/lwip/jos/arch/cc.h	26;"	d
S32_F	./net/lwip/jos/arch/cc.h	30;"	d
SECTSIZE	./fs/fs.h	4;"	d
SEG	./inc/mmu.h	142;"	d
SEG	./inc/mmu.h	172;"	d
SEG16	./inc/mmu.h	176;"	d
SEG_FAULT	./inc/mmu.h	170;"	d
SEG_NULL	./inc/mmu.h	139;"	d
SEG_NULL	./inc/mmu.h	168;"	d
SETCALLGATE	./inc/mmu.h	296;"	d
SETGATE	./inc/mmu.h	282;"	d
SIOCATMARK	./net/lwip/include/lwip/sockets.h	263;"	d
SIOCGHIWAT	./net/lwip/include/lwip/sockets.h	260;"	d
SIOCGLOWAT	./net/lwip/include/lwip/sockets.h	262;"	d
SIOCSHIWAT	./net/lwip/include/lwip/sockets.h	259;"	d
SIOCSLOWAT	./net/lwip/include/lwip/sockets.h	261;"	d
SLIPIF_THREAD_NAME	./net/lwip/include/lwip/opt.h	939;"	d
SLIPIF_THREAD_PRIO	./net/lwip/include/lwip/opt.h	957;"	d
SLIPIF_THREAD_STACKSIZE	./net/lwip/include/lwip/opt.h	948;"	d
SLIP_DEBUG	./net/lwip/include/lwip/opt.h	1666;"	d
SMEMCPY	./net/lwip/include/lwip/opt.h	84;"	d
SNMP_ASN1_APPLIC	./net/lwip/include/lwip/snmp_asn1.h	48;"	d
SNMP_ASN1_CONSTR	./net/lwip/include/lwip/snmp_asn1.h	51;"	d
SNMP_ASN1_CONTXT	./net/lwip/include/lwip/snmp_asn1.h	49;"	d
SNMP_ASN1_COUNTER	./net/lwip/include/lwip/snmp_asn1.h	63;"	d
SNMP_ASN1_GAUGE	./net/lwip/include/lwip/snmp_asn1.h	64;"	d
SNMP_ASN1_INTEG	./net/lwip/include/lwip/snmp_asn1.h	55;"	d
SNMP_ASN1_IPADDR	./net/lwip/include/lwip/snmp_asn1.h	62;"	d
SNMP_ASN1_NUL	./net/lwip/include/lwip/snmp_asn1.h	57;"	d
SNMP_ASN1_OBJ_ID	./net/lwip/include/lwip/snmp_asn1.h	58;"	d
SNMP_ASN1_OC_STR	./net/lwip/include/lwip/snmp_asn1.h	56;"	d
SNMP_ASN1_OPAQUE	./net/lwip/include/lwip/snmp_asn1.h	66;"	d
SNMP_ASN1_PDU_GET_NEXT_REQ	./net/lwip/include/lwip/snmp_asn1.h	70;"	d
SNMP_ASN1_PDU_GET_REQ	./net/lwip/include/lwip/snmp_asn1.h	69;"	d
SNMP_ASN1_PDU_GET_RESP	./net/lwip/include/lwip/snmp_asn1.h	71;"	d
SNMP_ASN1_PDU_SET_REQ	./net/lwip/include/lwip/snmp_asn1.h	72;"	d
SNMP_ASN1_PDU_TRAP	./net/lwip/include/lwip/snmp_asn1.h	73;"	d
SNMP_ASN1_PRIMIT	./net/lwip/include/lwip/snmp_asn1.h	52;"	d
SNMP_ASN1_SEQ	./net/lwip/include/lwip/snmp_asn1.h	59;"	d
SNMP_ASN1_TIMETICKS	./net/lwip/include/lwip/snmp_asn1.h	65;"	d
SNMP_ASN1_UNIV	./net/lwip/include/lwip/snmp_asn1.h	47;"	d
SNMP_COMMUNITY_STR_LEN	./net/lwip/include/lwip/snmp_msg.h	214;"	d
SNMP_CONCURRENT_REQUESTS	./net/lwip/include/lwip/opt.h	531;"	d
SNMP_ES_BADVALUE	./net/lwip/include/lwip/snmp_msg.h	64;"	d
SNMP_ES_GENERROR	./net/lwip/include/lwip/snmp_msg.h	66;"	d
SNMP_ES_NOERROR	./net/lwip/include/lwip/snmp_msg.h	61;"	d
SNMP_ES_NOSUCHNAME	./net/lwip/include/lwip/snmp_msg.h	63;"	d
SNMP_ES_READONLY	./net/lwip/include/lwip/snmp_msg.h	65;"	d
SNMP_ES_TOOBIG	./net/lwip/include/lwip/snmp_msg.h	62;"	d
SNMP_GENTRAP_AUTHFAIL	./net/lwip/include/lwip/snmp_msg.h	70;"	d
SNMP_GENTRAP_COLDSTART	./net/lwip/include/lwip/snmp_msg.h	68;"	d
SNMP_GENTRAP_ENTERPRISESPC	./net/lwip/include/lwip/snmp_msg.h	71;"	d
SNMP_GENTRAP_WARMSTART	./net/lwip/include/lwip/snmp_msg.h	69;"	d
SNMP_IN_PORT	./net/lwip/include/lwip/snmp_msg.h	53;"	d
SNMP_MIB_DEBUG	./net/lwip/include/lwip/opt.h	1694;"	d
SNMP_MSG_DEBUG	./net/lwip/include/lwip/opt.h	1687;"	d
SNMP_MSG_EMPTY	./net/lwip/include/lwip/snmp_msg.h	195;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF	./net/lwip/include/lwip/snmp_msg.h	208;"	d
SNMP_MSG_EXTERNAL_GET_OBJDEF_S	./net/lwip/include/lwip/snmp_msg.h	211;"	d
SNMP_MSG_EXTERNAL_GET_VALUE	./net/lwip/include/lwip/snmp_msg.h	209;"	d
SNMP_MSG_EXTERNAL_SET_TEST	./net/lwip/include/lwip/snmp_msg.h	210;"	d
SNMP_MSG_EXTERNAL_SET_VALUE	./net/lwip/include/lwip/snmp_msg.h	212;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF	./net/lwip/include/lwip/snmp_msg.h	200;"	d
SNMP_MSG_INTERNAL_GET_OBJDEF_S	./net/lwip/include/lwip/snmp_msg.h	203;"	d
SNMP_MSG_INTERNAL_GET_VALUE	./net/lwip/include/lwip/snmp_msg.h	201;"	d
SNMP_MSG_INTERNAL_SET_TEST	./net/lwip/include/lwip/snmp_msg.h	202;"	d
SNMP_MSG_INTERNAL_SET_VALUE	./net/lwip/include/lwip/snmp_msg.h	204;"	d
SNMP_MSG_SEARCH_OBJ	./net/lwip/include/lwip/snmp_msg.h	197;"	d
SNMP_PRIVATE_MIB	./net/lwip/include/lwip/opt.h	546;"	d
SNMP_SAFE_REQUESTS	./net/lwip/include/lwip/opt.h	555;"	d
SNMP_SYSUPTIME_INTERVAL	./net/lwip/include/lwip/snmp.h	85;"	d
SNMP_TRAP_DESTINATIONS	./net/lwip/include/lwip/opt.h	539;"	d
SNMP_TRAP_PORT	./net/lwip/include/lwip/snmp_msg.h	58;"	d
SOCKETS_DEBUG	./net/lwip/include/lwip/opt.h	1511;"	d
SOCK_DGRAM	./net/lwip/include/lwip/sockets.h	69;"	d
SOCK_RAW	./net/lwip/include/lwip/sockets.h	70;"	d
SOCK_STREAM	./net/lwip/include/lwip/sockets.h	68;"	d
SOF_ACCEPTCONN	./net/lwip/include/ipv4/lwip/ip.h	102;"	d
SOF_BROADCAST	./net/lwip/include/ipv4/lwip/ip.h	106;"	d
SOF_DEBUG	./net/lwip/include/ipv4/lwip/ip.h	101;"	d
SOF_DONTROUTE	./net/lwip/include/ipv4/lwip/ip.h	105;"	d
SOF_KEEPALIVE	./net/lwip/include/ipv4/lwip/ip.h	104;"	d
SOF_LINGER	./net/lwip/include/ipv4/lwip/ip.h	108;"	d
SOF_OOBINLINE	./net/lwip/include/ipv4/lwip/ip.h	109;"	d
SOF_REUSEADDR	./net/lwip/include/ipv4/lwip/ip.h	103;"	d
SOF_REUSEPORT	./net/lwip/include/ipv4/lwip/ip.h	110;"	d
SOF_USELOOPBACK	./net/lwip/include/ipv4/lwip/ip.h	107;"	d
SOL_SOCKET	./net/lwip/include/lwip/sockets.h	114;"	d
SO_ACCEPTCONN	./net/lwip/include/lwip/sockets.h	76;"	d
SO_BROADCAST	./net/lwip/include/lwip/sockets.h	80;"	d
SO_CONTIMEO	./net/lwip/include/lwip/sockets.h	99;"	d
SO_DEBUG	./net/lwip/include/lwip/sockets.h	75;"	d
SO_DONTLINGER	./net/lwip/include/lwip/sockets.h	86;"	d
SO_DONTROUTE	./net/lwip/include/lwip/sockets.h	79;"	d
SO_ERROR	./net/lwip/include/lwip/sockets.h	97;"	d
SO_KEEPALIVE	./net/lwip/include/lwip/sockets.h	78;"	d
SO_LINGER	./net/lwip/include/lwip/sockets.h	82;"	d
SO_NO_CHECK	./net/lwip/include/lwip/sockets.h	100;"	d
SO_OOBINLINE	./net/lwip/include/lwip/sockets.h	83;"	d
SO_RCVBUF	./net/lwip/include/lwip/sockets.h	92;"	d
SO_RCVLOWAT	./net/lwip/include/lwip/sockets.h	94;"	d
SO_RCVTIMEO	./net/lwip/include/lwip/sockets.h	96;"	d
SO_REUSE	./net/lwip/include/lwip/opt.h	1122;"	d
SO_REUSEADDR	./net/lwip/include/lwip/sockets.h	77;"	d
SO_REUSEPORT	./net/lwip/include/lwip/sockets.h	84;"	d
SO_SNDBUF	./net/lwip/include/lwip/sockets.h	91;"	d
SO_SNDLOWAT	./net/lwip/include/lwip/sockets.h	93;"	d
SO_SNDTIMEO	./net/lwip/include/lwip/sockets.h	95;"	d
SO_TYPE	./net/lwip/include/lwip/sockets.h	98;"	d
SO_USELOOPBACK	./net/lwip/include/lwip/sockets.h	81;"	d
SPECIALS_MASK	./net/lwip/netif/ppp/vj.h	93;"	d
SPECIAL_D	./net/lwip/netif/ppp/vj.h	92;"	d
SPECIAL_I	./net/lwip/netif/ppp/vj.h	91;"	d
STATS_DEC	./net/lwip/include/lwip/stats.h	145;"	d
STATS_DEC	./net/lwip/include/lwip/stats.h	149;"	d
STATS_INC	./net/lwip/include/lwip/stats.h	144;"	d
STATS_INC	./net/lwip/include/lwip/stats.h	148;"	d
STAT_COUNTER	./net/lwip/include/lwip/stats.h	51;"	d
STAT_COUNTER	./net/lwip/include/lwip/stats.h	54;"	d
STAT_COUNTER_F	./net/lwip/include/lwip/stats.h	52;"	d
STAT_COUNTER_F	./net/lwip/include/lwip/stats.h	55;"	d
STA_A	./inc/mmu.h	189;"	d
STA_C	./inc/mmu.h	186;"	d
STA_E	./inc/mmu.h	185;"	d
STA_R	./inc/mmu.h	188;"	d
STA_W	./inc/mmu.h	187;"	d
STA_X	./inc/mmu.h	184;"	d
STS_CG16	./inc/mmu.h	195;"	d
STS_CG32	./inc/mmu.h	201;"	d
STS_IG16	./inc/mmu.h	197;"	d
STS_IG32	./inc/mmu.h	202;"	d
STS_LDT	./inc/mmu.h	193;"	d
STS_T16A	./inc/mmu.h	192;"	d
STS_T16B	./inc/mmu.h	194;"	d
STS_T32A	./inc/mmu.h	199;"	d
STS_T32B	./inc/mmu.h	200;"	d
STS_TG	./inc/mmu.h	196;"	d
STS_TG16	./inc/mmu.h	198;"	d
STS_TG32	./inc/mmu.h	203;"	d
SYN_RCVD	./net/lwip/include/lwip/tcp.h	/^  SYN_RCVD    = 3,$/;"	e	enum:tcp_state
SYN_SENT	./net/lwip/include/lwip/tcp.h	/^  SYN_SENT    = 2,$/;"	e	enum:tcp_state
SYS_ARCH_DEC	./net/lwip/include/lwip/sys.h	215;"	d
SYS_ARCH_DECL_PROTECT	./net/lwip/include/lwip/sys.h	167;"	d
SYS_ARCH_DECL_PROTECT	./net/lwip/include/lwip/sys.h	192;"	d
SYS_ARCH_DECL_PROTECT	./net/lwip/jos/arch/sys_arch.h	17;"	d
SYS_ARCH_GET	./net/lwip/include/lwip/sys.h	224;"	d
SYS_ARCH_INC	./net/lwip/include/lwip/sys.h	206;"	d
SYS_ARCH_NOWAIT	./net/lwip/jos/arch/sys_arch.h	21;"	d
SYS_ARCH_PROTECT	./net/lwip/include/lwip/sys.h	177;"	d
SYS_ARCH_PROTECT	./net/lwip/include/lwip/sys.h	193;"	d
SYS_ARCH_PROTECT	./net/lwip/jos/arch/sys_arch.h	18;"	d
SYS_ARCH_SET	./net/lwip/include/lwip/sys.h	233;"	d
SYS_ARCH_TIMEOUT	./net/lwip/include/lwip/sys.h	71;"	d
SYS_ARCH_UNPROTECT	./net/lwip/include/lwip/sys.h	186;"	d
SYS_ARCH_UNPROTECT	./net/lwip/include/lwip/sys.h	194;"	d
SYS_ARCH_UNPROTECT	./net/lwip/jos/arch/sys_arch.h	19;"	d
SYS_DEBUG	./net/lwip/include/lwip/opt.h	1574;"	d
SYS_LIGHTWEIGHT_PROT	./net/lwip/include/lwip/opt.h	60;"	d
SYS_MBOX_EMPTY	./net/lwip/include/lwip/sys.h	76;"	d
SYS_MBOX_NULL	./net/lwip/jos/arch/sys_arch.h	10;"	d
SYS_SEM_NULL	./net/lwip/jos/arch/sys_arch.h	11;"	d
SYS_STATS	./net/lwip/include/lwip/opt.h	1223;"	d
SYS_STATS	./net/lwip/include/lwip/opt.h	1237;"	d
SYS_STATS_DEC	./net/lwip/include/lwip/stats.h	254;"	d
SYS_STATS_DEC	./net/lwip/include/lwip/stats.h	258;"	d
SYS_STATS_DISPLAY	./net/lwip/include/lwip/stats.h	255;"	d
SYS_STATS_DISPLAY	./net/lwip/include/lwip/stats.h	259;"	d
SYS_STATS_INC	./net/lwip/include/lwip/stats.h	253;"	d
SYS_STATS_INC	./net/lwip/include/lwip/stats.h	257;"	d
SYS_cgetc	./inc/syscall.h	/^	SYS_cgetc,$/;"	e	enum:__anon9
SYS_cputs	./inc/syscall.h	/^	SYS_cputs = 0,$/;"	e	enum:__anon9
SYS_e1000_get_mac	./inc/syscall.h	/^	SYS_e1000_get_mac,$/;"	e	enum:__anon9
SYS_e1000_receive	./inc/syscall.h	/^	SYS_e1000_receive,$/;"	e	enum:__anon9
SYS_e1000_transmit	./inc/syscall.h	/^	SYS_e1000_transmit,$/;"	e	enum:__anon9
SYS_env_destroy	./inc/syscall.h	/^	SYS_env_destroy,$/;"	e	enum:__anon9
SYS_env_set_pgfault_upcall	./inc/syscall.h	/^	SYS_env_set_pgfault_upcall,$/;"	e	enum:__anon9
SYS_env_set_status	./inc/syscall.h	/^	SYS_env_set_status,$/;"	e	enum:__anon9
SYS_env_set_trapframe	./inc/syscall.h	/^	SYS_env_set_trapframe,$/;"	e	enum:__anon9
SYS_exofork	./inc/syscall.h	/^	SYS_exofork,$/;"	e	enum:__anon9
SYS_getenvid	./inc/syscall.h	/^	SYS_getenvid,$/;"	e	enum:__anon9
SYS_ipc_recv	./inc/syscall.h	/^	SYS_ipc_recv,$/;"	e	enum:__anon9
SYS_ipc_try_send	./inc/syscall.h	/^	SYS_ipc_try_send,$/;"	e	enum:__anon9
SYS_page_alloc	./inc/syscall.h	/^	SYS_page_alloc,$/;"	e	enum:__anon9
SYS_page_map	./inc/syscall.h	/^	SYS_page_map,$/;"	e	enum:__anon9
SYS_page_unmap	./inc/syscall.h	/^	SYS_page_unmap,$/;"	e	enum:__anon9
SYS_time_msec	./inc/syscall.h	/^	SYS_time_msec,$/;"	e	enum:__anon9
SYS_yield	./inc/syscall.h	/^	SYS_yield,$/;"	e	enum:__anon9
Secthdr	./inc/elf.h	/^struct Secthdr {$/;"	s
Secthdr::sh_addr	./inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_addralign	./inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_entsize	./inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_flags	./inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_info	./inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_link	./inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_name	./inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_offset	./inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_size	./inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
Secthdr::sh_type	./inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
Segdesc	./inc/mmu.h	/^struct Segdesc {$/;"	s
Segdesc::sd_avl	./inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_15_0	./inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_23_16	./inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_base_31_24	./inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
Segdesc::sd_db	./inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
Segdesc::sd_dpl	./inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
Segdesc::sd_g	./inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_15_0	./inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_lim_19_16	./inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
Segdesc::sd_p	./inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
Segdesc::sd_rsv1	./inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
Segdesc::sd_s	./inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
Segdesc::sd_type	./inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
Stab	./inc/stab.h	/^struct Stab {$/;"	s
Stab::n_desc	./inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
Stab::n_other	./inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
Stab::n_strx	./inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
Stab::n_type	./inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
Stab::n_value	./inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
Stat	./inc/fd.h	/^struct Stat {$/;"	s
Stat::st_dev	./inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev	access:public
Stat::st_isdir	./inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat	access:public
Stat::st_name	./inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat	access:public
Stat::st_size	./inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat	access:public
Super	./inc/fs.h	/^struct Super {$/;"	s
Super::s_magic	./inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super	access:public
Super::s_nblocks	./inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super	access:public
Super::s_root	./inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File	access:public
TCPH_FLAGS	./net/lwip/include/lwip/tcp.h	230;"	d
TCPH_FLAGS_SET	./net/lwip/include/lwip/tcp.h	234;"	d
TCPH_HDRLEN	./net/lwip/include/lwip/tcp.h	229;"	d
TCPH_HDRLEN_SET	./net/lwip/include/lwip/tcp.h	233;"	d
TCPH_OFFSET	./net/lwip/include/lwip/tcp.h	228;"	d
TCPH_OFFSET_SET	./net/lwip/include/lwip/tcp.h	232;"	d
TCPH_SET_FLAG	./net/lwip/include/lwip/tcp.h	235;"	d
TCPH_UNSET_FLAG	./net/lwip/include/lwip/tcp.h	236;"	d
TCPIP_APIMSG	./net/lwip/include/lwip/tcpip.h	54;"	d
TCPIP_APIMSG	./net/lwip/include/lwip/tcpip.h	61;"	d
TCPIP_APIMSG_ACK	./net/lwip/include/lwip/tcpip.h	55;"	d
TCPIP_APIMSG_ACK	./net/lwip/include/lwip/tcpip.h	62;"	d
TCPIP_DEBUG	./net/lwip/include/lwip/opt.h	1652;"	d
TCPIP_MBOX_SIZE	./net/lwip/include/lwip/opt.h	932;"	d
TCPIP_MSG_API	./net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_API,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_CALLBACK	./net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_CALLBACK,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_INPKT	./net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_INPKT,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_NETIFAPI	./net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_NETIFAPI,$/;"	e	enum:tcpip_msg_type
TCPIP_MSG_TIMEOUT	./net/lwip/include/lwip/tcpip.h	/^  TCPIP_MSG_TIMEOUT$/;"	e	enum:tcpip_msg_type
TCPIP_NETIFAPI	./net/lwip/include/lwip/tcpip.h	56;"	d
TCPIP_NETIFAPI	./net/lwip/include/lwip/tcpip.h	63;"	d
TCPIP_NETIFAPI_ACK	./net/lwip/include/lwip/tcpip.h	57;"	d
TCPIP_NETIFAPI_ACK	./net/lwip/include/lwip/tcpip.h	64;"	d
TCPIP_THREAD_NAME	./net/lwip/include/lwip/opt.h	905;"	d
TCPIP_THREAD_PRIO	./net/lwip/include/lwip/opt.h	923;"	d
TCPIP_THREAD_STACKSIZE	./net/lwip/include/lwip/opt.h	914;"	d
TCP_ACK	./net/lwip/include/lwip/tcp.h	160;"	d
TCP_BUILD_MSS_OPTION	./net/lwip/include/lwip/tcp.h	142;"	d
TCP_CALCULATE_EFF_SEND_MSS	./net/lwip/include/lwip/opt.h	709;"	d
TCP_CWND_DEBUG	./net/lwip/include/lwip/opt.h	1610;"	d
TCP_CWR	./net/lwip/include/lwip/tcp.h	163;"	d
TCP_DEBUG	./net/lwip/include/lwip/opt.h	1581;"	d
TCP_DEFAULT_LISTEN_BACKLOG	./net/lwip/include/lwip/opt.h	750;"	d
TCP_ECE	./net/lwip/include/lwip/tcp.h	162;"	d
TCP_EVENT_ACCEPT	./net/lwip/include/lwip/tcp.h	456;"	d
TCP_EVENT_ACCEPT	./net/lwip/include/lwip/tcp.h	469;"	d
TCP_EVENT_CONNECTED	./net/lwip/include/lwip/tcp.h	462;"	d
TCP_EVENT_CONNECTED	./net/lwip/include/lwip/tcp.h	480;"	d
TCP_EVENT_ERR	./net/lwip/include/lwip/tcp.h	466;"	d
TCP_EVENT_ERR	./net/lwip/include/lwip/tcp.h	486;"	d
TCP_EVENT_POLL	./net/lwip/include/lwip/tcp.h	464;"	d
TCP_EVENT_POLL	./net/lwip/include/lwip/tcp.h	483;"	d
TCP_EVENT_RECV	./net/lwip/include/lwip/tcp.h	460;"	d
TCP_EVENT_RECV	./net/lwip/include/lwip/tcp.h	475;"	d
TCP_EVENT_SENT	./net/lwip/include/lwip/tcp.h	458;"	d
TCP_EVENT_SENT	./net/lwip/include/lwip/tcp.h	472;"	d
TCP_FAST_INTERVAL	./net/lwip/include/lwip/tcp.h	175;"	d
TCP_FIN	./net/lwip/include/lwip/tcp.h	156;"	d
TCP_FIN_WAIT_TIMEOUT	./net/lwip/include/lwip/tcp.h	182;"	d
TCP_FLAGS	./net/lwip/include/lwip/tcp.h	165;"	d
TCP_FR_DEBUG	./net/lwip/include/lwip/opt.h	1595;"	d
TCP_HLEN	./net/lwip/include/lwip/tcp.h	168;"	d
TCP_INPUT_DEBUG	./net/lwip/include/lwip/opt.h	1588;"	d
TCP_KEEPALIVE	./net/lwip/include/lwip/sockets.h	149;"	d
TCP_KEEPCNT	./net/lwip/include/lwip/sockets.h	152;"	d
TCP_KEEPCNT_DEFAULT	./net/lwip/include/lwip/tcp.h	201;"	d
TCP_KEEPIDLE	./net/lwip/include/lwip/sockets.h	150;"	d
TCP_KEEPIDLE_DEFAULT	./net/lwip/include/lwip/tcp.h	193;"	d
TCP_KEEPINTVL	./net/lwip/include/lwip/sockets.h	151;"	d
TCP_KEEPINTVL_DEFAULT	./net/lwip/include/lwip/tcp.h	197;"	d
TCP_LISTEN_BACKLOG	./net/lwip/include/lwip/opt.h	741;"	d
TCP_MAXIDLE	./net/lwip/include/lwip/tcp.h	204;"	d
TCP_MAXRTX	./net/lwip/include/lwip/opt.h	671;"	d
TCP_MSL	./net/lwip/include/lwip/tcp.h	188;"	d
TCP_MSS	./net/lwip/include/lwip/opt.h	697;"	d
TCP_MSS	./net/lwip/jos/lwipopts.h	40;"	d
TCP_NODELAY	./net/lwip/include/lwip/sockets.h	148;"	d
TCP_OOSEQ_TIMEOUT	./net/lwip/include/lwip/tcp.h	185;"	d
TCP_OUTPUT_DEBUG	./net/lwip/include/lwip/opt.h	1624;"	d
TCP_PCB_COMMON	./net/lwip/include/lwip/tcp.h	/^  TCP_PCB_COMMON(struct tcp_pcb);$/;"	p	struct:tcp_pcb	access:public	signature:(struct tcp_pcb)
TCP_PCB_COMMON	./net/lwip/include/lwip/tcp.h	/^  TCP_PCB_COMMON(struct tcp_pcb_listen);$/;"	p	struct:tcp_pcb_listen	access:public	signature:(struct tcp_pcb_listen)
TCP_PCB_COMMON	./net/lwip/include/lwip/tcp.h	264;"	d
TCP_PRIO_MAX	./net/lwip/include/lwip/tcp.h	113;"	d
TCP_PRIO_MIN	./net/lwip/include/lwip/tcp.h	111;"	d
TCP_PRIO_NORMAL	./net/lwip/include/lwip/tcp.h	112;"	d
TCP_PSH	./net/lwip/include/lwip/tcp.h	159;"	d
TCP_PUSH_BIT	./net/lwip/netif/ppp/vj.h	95;"	d
TCP_QLEN_DEBUG	./net/lwip/include/lwip/opt.h	1638;"	d
TCP_QUEUE_OOSEQ	./net/lwip/include/lwip/opt.h	686;"	d
TCP_REG	./net/lwip/include/lwip/tcp.h	617;"	d
TCP_RMV	./net/lwip/include/lwip/tcp.h	622;"	d
TCP_RST	./net/lwip/include/lwip/tcp.h	158;"	d
TCP_RST_DEBUG	./net/lwip/include/lwip/opt.h	1631;"	d
TCP_RTO_DEBUG	./net/lwip/include/lwip/opt.h	1603;"	d
TCP_SEQ_BETWEEN	./net/lwip/include/lwip/tcp.h	155;"	d
TCP_SEQ_GEQ	./net/lwip/include/lwip/tcp.h	150;"	d
TCP_SEQ_GT	./net/lwip/include/lwip/tcp.h	149;"	d
TCP_SEQ_LEQ	./net/lwip/include/lwip/tcp.h	148;"	d
TCP_SEQ_LT	./net/lwip/include/lwip/tcp.h	147;"	d
TCP_SLOW_INTERVAL	./net/lwip/include/lwip/tcp.h	179;"	d
TCP_SNDLOWAT	./net/lwip/include/lwip/opt.h	734;"	d
TCP_SNDQUEUELEN_OVERFLOW	./net/lwip/include/lwip/tcp.h	333;"	d
TCP_SND_BUF	./net/lwip/include/lwip/opt.h	717;"	d
TCP_SND_BUF	./net/lwip/jos/lwipopts.h	42;"	d
TCP_SND_QUEUELEN	./net/lwip/include/lwip/opt.h	725;"	d
TCP_SND_QUEUELEN	./net/lwip/jos/lwipopts.h	45;"	d
TCP_STATS	./net/lwip/include/lwip/opt.h	1202;"	d
TCP_STATS	./net/lwip/include/lwip/opt.h	1234;"	d
TCP_STATS_DISPLAY	./net/lwip/include/lwip/stats.h	154;"	d
TCP_STATS_DISPLAY	./net/lwip/include/lwip/stats.h	157;"	d
TCP_STATS_INC	./net/lwip/include/lwip/stats.h	153;"	d
TCP_STATS_INC	./net/lwip/include/lwip/stats.h	156;"	d
TCP_SYN	./net/lwip/include/lwip/tcp.h	157;"	d
TCP_SYNMAXRTX	./net/lwip/include/lwip/opt.h	678;"	d
TCP_SYN_RCVD_TIMEOUT	./net/lwip/include/lwip/tcp.h	183;"	d
TCP_TCPLEN	./net/lwip/include/lwip/tcp.h	238;"	d
TCP_TMR_INTERVAL	./net/lwip/include/lwip/tcp.h	171;"	d
TCP_TTL	./net/lwip/include/lwip/opt.h	657;"	d
TCP_URG	./net/lwip/include/lwip/tcp.h	161;"	d
TCP_WND	./net/lwip/include/lwip/opt.h	664;"	d
TCP_WND	./net/lwip/jos/lwipopts.h	41;"	d
TCP_WND_DEBUG	./net/lwip/include/lwip/opt.h	1617;"	d
TCP_WRITE_FLAG_COPY	./net/lwip/include/lwip/tcp.h	103;"	d
TCP_WRITE_FLAG_MORE	./net/lwip/include/lwip/tcp.h	104;"	d
TERMACK	./net/lwip/netif/ppp/fsm.h	74;"	d
TERMREQ	./net/lwip/netif/ppp/fsm.h	73;"	d
TF_ACK_DELAY	./net/lwip/include/lwip/tcp.h	283;"	d
TF_ACK_NOW	./net/lwip/include/lwip/tcp.h	284;"	d
TF_CLOSED	./net/lwip/include/lwip/tcp.h	258;"	d
TF_FIN	./net/lwip/include/lwip/tcp.h	286;"	d
TF_GOT_FIN	./net/lwip/include/lwip/tcp.h	259;"	d
TF_INFR	./net/lwip/include/lwip/tcp.h	285;"	d
TF_NAGLEMEMERR	./net/lwip/include/lwip/tcp.h	288;"	d
TF_NODELAY	./net/lwip/include/lwip/tcp.h	287;"	d
TF_RESET	./net/lwip/include/lwip/tcp.h	257;"	d
THREAD_NUM_ONHALT	./net/lwip/jos/arch/threadq.h	7;"	d
TIMEOUT	./net/lwip/netif/ppp/ppp.h	96;"	d
TIMER_INTERVAL	./net/ns.h	8;"	d
TIME_WAIT	./net/lwip/include/lwip/tcp.h	/^  TIME_WAIT   = 10$/;"	e	enum:tcp_state
TRACELCP	./net/lwip/netif/ppp/pppdebug.h	62;"	d
TRY_AGAIN	./net/lwip/include/lwip/netdb.h	59;"	d
TYPE_COMPRESSED_TCP	./net/lwip/netif/ppp/vj.h	79;"	d
TYPE_ERROR	./net/lwip/netif/ppp/vj.h	80;"	d
TYPE_IP	./net/lwip/netif/ppp/vj.h	77;"	d
TYPE_UNCOMPRESSED_TCP	./net/lwip/netif/ppp/vj.h	78;"	d
T_ALIGN	./inc/trap.h	23;"	d
T_BOUND	./inc/trap.h	11;"	d
T_BRKPT	./inc/trap.h	9;"	d
T_DBLFLT	./inc/trap.h	14;"	d
T_DEBUG	./inc/trap.h	7;"	d
T_DEFAULT	./inc/trap.h	30;"	d
T_DEVICE	./inc/trap.h	13;"	d
T_DIVIDE	./inc/trap.h	6;"	d
T_FPERR	./inc/trap.h	22;"	d
T_GPFLT	./inc/trap.h	19;"	d
T_ILLOP	./inc/trap.h	12;"	d
T_MCHK	./inc/trap.h	24;"	d
T_NMI	./inc/trap.h	8;"	d
T_OFLOW	./inc/trap.h	10;"	d
T_PGFLT	./inc/trap.h	20;"	d
T_SEGNP	./inc/trap.h	17;"	d
T_SIMDERR	./inc/trap.h	25;"	d
T_STACK	./inc/trap.h	18;"	d
T_SYSCALL	./inc/trap.h	29;"	d
T_TSS	./inc/trap.h	16;"	d
Taskstate	./inc/mmu.h	/^struct Taskstate {$/;"	s
Taskstate::ts_cr3	./inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
Taskstate::ts_cs	./inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ds	./inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eax	./inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebp	./inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ebx	./inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ecx	./inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edi	./inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_edx	./inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eflags	./inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_eip	./inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
Taskstate::ts_es	./inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esi	./inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp	./inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp0	./inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp1	./inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_esp2	./inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_fs	./inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_gs	./inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_iomb	./inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ldt	./inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_link	./inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding1	./inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding10	./inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding2	./inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding3	./inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding4	./inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding5	./inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding6	./inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding7	./inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding8	./inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_padding9	./inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss	./inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss0	./inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss1	./inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_ss2	./inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
Taskstate::ts_t	./inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
Trapframe	./inc/trap.h	/^struct Trapframe {$/;"	s
Trapframe::tf_cs	./inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_ds	./inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_eflags	./inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_eip	./inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_err	./inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_es	./inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_esp	./inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding1	./inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding2	./inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding3	./inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_padding4	./inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_regs	./inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs	access:public
Trapframe::tf_ss	./inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe	access:public
Trapframe::tf_trapno	./inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe	access:public
U16_F	./net/lwip/jos/arch/cc.h	27;"	d
U32_F	./net/lwip/jos/arch/cc.h	31;"	d
UDPLITE_RECV_CSCOV	./net/lwip/include/lwip/sockets.h	160;"	d
UDPLITE_SEND_CSCOV	./net/lwip/include/lwip/sockets.h	159;"	d
UDP_DEBUG	./net/lwip/include/lwip/opt.h	1645;"	d
UDP_FLAGS_CONNECTED	./net/lwip/include/lwip/udp.h	68;"	d
UDP_FLAGS_NOCHKSUM	./net/lwip/include/lwip/udp.h	66;"	d
UDP_FLAGS_UDPLITE	./net/lwip/include/lwip/udp.h	67;"	d
UDP_HLEN	./net/lwip/include/lwip/udp.h	48;"	d
UDP_STATS	./net/lwip/include/lwip/opt.h	1194;"	d
UDP_STATS	./net/lwip/include/lwip/opt.h	1233;"	d
UDP_STATS_DISPLAY	./net/lwip/include/lwip/stats.h	162;"	d
UDP_STATS_DISPLAY	./net/lwip/include/lwip/stats.h	165;"	d
UDP_STATS_INC	./net/lwip/include/lwip/stats.h	161;"	d
UDP_STATS_INC	./net/lwip/include/lwip/stats.h	164;"	d
UDP_TTL	./net/lwip/include/lwip/opt.h	638;"	d
UENVS	./inc/memlayout.h	116;"	d
ULIM	./inc/memlayout.h	104;"	d
UNLOCK_TCPIP_CORE	./net/lwip/include/lwip/tcpip.h	53;"	d
UNLOCK_TCPIP_CORE	./net/lwip/include/lwip/tcpip.h	60;"	d
UNTIMEOUT	./net/lwip/netif/ppp/ppp.h	97;"	d
UPAGES	./inc/memlayout.h	114;"	d
UPAPCS_AUTHREQ	./net/lwip/netif/ppp/pap.h	79;"	d
UPAPCS_BADAUTH	./net/lwip/netif/ppp/pap.h	81;"	d
UPAPCS_CLOSED	./net/lwip/netif/ppp/pap.h	77;"	d
UPAPCS_INITIAL	./net/lwip/netif/ppp/pap.h	76;"	d
UPAPCS_OPEN	./net/lwip/netif/ppp/pap.h	80;"	d
UPAPCS_PENDING	./net/lwip/netif/ppp/pap.h	78;"	d
UPAPDEBUG	./net/lwip/netif/ppp/pppdebug.h	68;"	d
UPAPDEBUG	./net/lwip/netif/ppp/pppdebug.h	78;"	d
UPAPSS_BADAUTH	./net/lwip/netif/ppp/pap.h	91;"	d
UPAPSS_CLOSED	./net/lwip/netif/ppp/pap.h	87;"	d
UPAPSS_INITIAL	./net/lwip/netif/ppp/pap.h	86;"	d
UPAPSS_LISTEN	./net/lwip/netif/ppp/pap.h	89;"	d
UPAPSS_OPEN	./net/lwip/netif/ppp/pap.h	90;"	d
UPAPSS_PENDING	./net/lwip/netif/ppp/pap.h	88;"	d
UPAP_AUTHACK	./net/lwip/netif/ppp/pap.h	70;"	d
UPAP_AUTHNAK	./net/lwip/netif/ppp/pap.h	71;"	d
UPAP_AUTHREQ	./net/lwip/netif/ppp/pap.h	69;"	d
UPAP_DEFREQTIME	./net/lwip/include/lwip/opt.h	1350;"	d
UPAP_DEFTIMEOUT	./net/lwip/include/lwip/opt.h	1346;"	d
UPAP_HEADERLEN	./net/lwip/netif/ppp/pap.h	63;"	d
USED	./inc/lib.h	26;"	d
USTABDATA	./inc/memlayout.h	139;"	d
USTACKTOP	./inc/memlayout.h	128;"	d
UTEMP	./inc/memlayout.h	134;"	d
UTEXT	./inc/memlayout.h	131;"	d
UTOP	./inc/memlayout.h	123;"	d
UTrapframe	./inc/trap.h	/^struct UTrapframe {$/;"	s
UTrapframe::utf_eflags	./inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_eip	./inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_err	./inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_esp	./inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_fault_va	./inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe	access:public
UTrapframe::utf_regs	./inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs	access:public
UVPT	./inc/memlayout.h	112;"	d
UXSTACKTOP	./inc/memlayout.h	125;"	d
VJBSDHDR_H	./net/lwip/netif/ppp/vjbsdhdr.h	2;"	d
VJF_TOSS	./net/lwip/netif/ppp/vj.h	147;"	d
VJ_H	./net/lwip/netif/ppp/vj.h	26;"	d
VJ_SUPPORT	./net/lwip/include/lwip/opt.h	1316;"	d
X16_F	./net/lwip/jos/arch/cc.h	28;"	d
X32_F	./net/lwip/jos/arch/cc.h	32;"	d
ZERO	./kern/e1000.h	11;"	d
_CONSOLE_H_	./kern/console.h	4;"	d
_DEV_PCI_PCIREG_H_	./kern/pcireg.h	35;"	d
_IO	./net/lwip/include/lwip/sockets.h	243;"	d
_IOR	./net/lwip/include/lwip/sockets.h	245;"	d
_IOW	./net/lwip/include/lwip/sockets.h	247;"	d
__LWIP_API_H__	./net/lwip/include/lwip/api.h	33;"	d
__LWIP_API_MSG_H__	./net/lwip/include/lwip/api_msg.h	33;"	d
__LWIP_ARCH_H__	./net/lwip/include/lwip/arch.h	33;"	d
__LWIP_AUTOIP_H__	./net/lwip/include/ipv4/lwip/autoip.h	45;"	d
__LWIP_DEBUG_H__	./net/lwip/include/lwip/debug.h	33;"	d
__LWIP_DEF_H__	./net/lwip/include/lwip/def.h	33;"	d
__LWIP_DHCP_H__	./net/lwip/include/lwip/dhcp.h	5;"	d
__LWIP_DNS_H__	./net/lwip/include/lwip/dns.h	35;"	d
__LWIP_ERR_H__	./net/lwip/include/lwip/err.h	33;"	d
__LWIP_ICMP_H__	./net/lwip/include/ipv4/lwip/icmp.h	33;"	d
__LWIP_ICMP_H__	./net/lwip/include/ipv6/lwip/icmp.h	33;"	d
__LWIP_IGMP_H__	./net/lwip/include/ipv4/lwip/igmp.h	36;"	d
__LWIP_INET_CHKSUM_H__	./net/lwip/include/ipv4/lwip/inet_chksum.h	33;"	d
__LWIP_INET_H__	./net/lwip/include/ipv4/lwip/inet.h	33;"	d
__LWIP_INET_H__	./net/lwip/include/ipv6/lwip/inet.h	33;"	d
__LWIP_INIT_H__	./net/lwip/include/lwip/init.h	33;"	d
__LWIP_IP_ADDR_H__	./net/lwip/include/ipv4/lwip/ip_addr.h	33;"	d
__LWIP_IP_ADDR_H__	./net/lwip/include/ipv6/lwip/ip_addr.h	33;"	d
__LWIP_IP_FRAG_H__	./net/lwip/include/ipv4/lwip/ip_frag.h	34;"	d
__LWIP_IP_H__	./net/lwip/include/ipv4/lwip/ip.h	33;"	d
__LWIP_IP_H__	./net/lwip/include/ipv6/lwip/ip.h	33;"	d
__LWIP_MEMP_H__	./net/lwip/include/lwip/memp.h	34;"	d
__LWIP_MEM_H__	./net/lwip/include/lwip/mem.h	33;"	d
__LWIP_NETBUF_H__	./net/lwip/include/lwip/netbuf.h	33;"	d
__LWIP_NETIFAPI_H__	./net/lwip/include/lwip/netifapi.h	29;"	d
__LWIP_NETIF_H__	./net/lwip/include/lwip/netif.h	33;"	d
__LWIP_OPT_H__	./net/lwip/include/lwip/opt.h	39;"	d
__LWIP_PBUF_H__	./net/lwip/include/lwip/pbuf.h	34;"	d
__LWIP_RAW_H__	./net/lwip/include/lwip/raw.h	33;"	d
__LWIP_SNMP_ASN1_H__	./net/lwip/include/lwip/snmp_asn1.h	36;"	d
__LWIP_SNMP_H__	./net/lwip/include/lwip/snmp.h	34;"	d
__LWIP_SNMP_MSG_H__	./net/lwip/include/lwip/snmp_msg.h	36;"	d
__LWIP_SNMP_STRUCTS_H__	./net/lwip/include/lwip/snmp_structs.h	38;"	d
__LWIP_SOCKETS_H__	./net/lwip/include/lwip/sockets.h	35;"	d
__LWIP_STATS_H__	./net/lwip/include/lwip/stats.h	33;"	d
__LWIP_SYS_H__	./net/lwip/include/lwip/sys.h	33;"	d
__LWIP_TCPIP_H__	./net/lwip/include/lwip/tcpip.h	33;"	d
__LWIP_TCP_H__	./net/lwip/include/lwip/tcp.h	33;"	d
__LWIP_UDP_H__	./net/lwip/include/lwip/udp.h	33;"	d
__NETIF_ETHARP_H__	./net/lwip/include/netif/etharp.h	36;"	d
__NETIF_LOOPIF_H__	./net/lwip/include/netif/loopif.h	33;"	d
__NETIF_SLIPIF_H__	./net/lwip/include/netif/slipif.h	35;"	d
__SIO_H__	./net/lwip/include/lwip/sio.h	36;"	d
__anon13::buf	./net/lwip/netif/ppp/md5.h	/^  u32_t buf[4];             \/* scratch buffer *\/$/;"	m	struct:__anon13	access:public
__anon13::digest	./net/lwip/netif/ppp/md5.h	/^  unsigned char digest[16]; \/* actual digest after MD5Final call *\/$/;"	m	struct:__anon13	access:public
__anon13::i	./net/lwip/netif/ppp/md5.h	/^  u32_t i[2];               \/* number of _bits_ handled mod 2^64 *\/$/;"	m	struct:__anon13	access:public
__anon13::in	./net/lwip/netif/ppp/md5.h	/^  unsigned char in[64];     \/* input buffer *\/$/;"	m	struct:__anon13	access:public
__spin_initlock	./kern/spinlock.h	/^void __spin_initlock(struct spinlock *lk, char *name);$/;"	p	signature:(struct spinlock *lk, char *name)
_kaddr	./kern/pmap.h	/^_kaddr(const char *file, int line, physaddr_t pa)$/;"	f	signature:(const char *file, int line, physaddr_t pa)
_pad	./inc/fs.h	/^	char _pad[PGSIZE];$/;"	m	union:Fsipc	access:public
_pad	./inc/ns.h	/^	char _pad[PGSIZE];$/;"	m	union:Nsipc	access:public
_paddr	./kern/pmap.h	/^_paddr(const char *file, int line, void *kva)$/;"	f	signature:(const char *file, int line, void *kva)
_panic	./inc/assert.h	/^void _panic(const char*, int, const char*, ...) __attribute__((noreturn));$/;"	p	signature:(const char*, int, const char*, ...)
_warn	./inc/assert.h	/^void _warn(const char*, int, const char*, ...);$/;"	p	signature:(const char*, int, const char*, ...)
aaddrlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t aaddrlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
aaddrlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t aaddrlenlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
accept	./inc/lib.h	/^int     accept(int s, struct sockaddr *addr, socklen_t *addrlen);$/;"	p	signature:(int s, struct sockaddr *addr, socklen_t *addrlen)
accept	./inc/ns.h	/^	} accept;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_accept	access:public
accept	./net/lwip/include/lwip/sockets.h	326;"	d
accept	./net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb	access:public
accept	./net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb_listen	access:public
acceptRet	./inc/ns.h	/^	} acceptRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_accept	access:public
accept_local	./net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_local  : 1; \/* accept peer's value for ouraddr *\/$/;"	m	struct:ipcp_options	access:public
accept_remote	./net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_remote : 1; \/* accept peer's value for hisaddr *\/$/;"	m	struct:ipcp_options	access:public
acceptmbox	./net/lwip/include/lwip/api.h	/^  sys_mbox_t acceptmbox;$/;"	m	struct:netconn	access:public
accepts_pending	./net/lwip/include/lwip/tcp.h	/^  u8_t accepts_pending;$/;"	m	struct:tcp_pcb_listen	access:public
access	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t access;$/;"	m	struct:obj_def	access:public
ackci	./net/lwip/netif/ppp/fsm.h	/^  int  (*ackci)(fsm*, u_char*, int);                \/* ACK our Configuration Information *\/$/;"	m	struct:fsm_callbacks	access:public
acked	./net/lwip/include/lwip/tcp.h	/^  u16_t acked;$/;"	m	struct:tcp_pcb	access:public
ad	./net/lwip/include/lwip/api_msg.h	/^    } ad;$/;"	m	union:api_msg_msg::__anon17	typeref:struct:api_msg_msg::__anon17::__anon20	access:public
add	./net/lwip/include/lwip/netifapi.h	/^    } add;$/;"	m	union:netifapi_msg_msg::__anon31	typeref:struct:netifapi_msg_msg::__anon31::__anon32	access:public
addci	./net/lwip/netif/ppp/fsm.h	/^  void (*addci)(fsm*, u_char*, int*);               \/* Add our Configuration Information *\/$/;"	m	struct:fsm_callbacks	access:public
addr	./net/lwip/include/lwip/api_msg.h	/^  struct ip_addr *addr;$/;"	m	struct:dns_api_msg	typeref:struct:dns_api_msg::ip_addr	access:public
addr	./net/lwip/include/lwip/netbuf.h	/^  struct ip_addr *addr;$/;"	m	struct:netbuf	typeref:struct:netbuf::ip_addr	access:public
addr_hint	./net/lwip/include/lwip/netif.h	/^  u8_t *addr_hint;$/;"	m	struct:netif	access:public
addr_inf	./net/lwip/include/lwip/snmp_structs.h	/^  void* addr_inf;$/;"	m	struct:mib_external_node	access:public
addrinfo	./net/lwip/include/lwip/netdb.h	/^struct addrinfo {$/;"	s
addrinfo::ai_addr	./net/lwip/include/lwip/netdb.h	/^    struct sockaddr  *ai_addr;       \/* Socket address of socket. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr	access:public
addrinfo::ai_addrlen	./net/lwip/include/lwip/netdb.h	/^    socklen_t         ai_addrlen;    \/* Length of socket address. *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_canonname	./net/lwip/include/lwip/netdb.h	/^    char             *ai_canonname;  \/* Canonical name of service location. *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_family	./net/lwip/include/lwip/netdb.h	/^    int               ai_family;     \/* Address family of socket. *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_flags	./net/lwip/include/lwip/netdb.h	/^    int               ai_flags;      \/* Input flags. *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_next	./net/lwip/include/lwip/netdb.h	/^    struct addrinfo  *ai_next;       \/* Pointer to next in list. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo	access:public
addrinfo::ai_protocol	./net/lwip/include/lwip/netdb.h	/^    int               ai_protocol;   \/* Protocol of socket. *\/$/;"	m	struct:addrinfo	access:public
addrinfo::ai_socktype	./net/lwip/include/lwip/netdb.h	/^    int               ai_socktype;   \/* Socket type. *\/$/;"	m	struct:addrinfo	access:public
ai_addr	./net/lwip/include/lwip/netdb.h	/^    struct sockaddr  *ai_addr;       \/* Socket address of socket. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::sockaddr	access:public
ai_addrlen	./net/lwip/include/lwip/netdb.h	/^    socklen_t         ai_addrlen;    \/* Length of socket address. *\/$/;"	m	struct:addrinfo	access:public
ai_canonname	./net/lwip/include/lwip/netdb.h	/^    char             *ai_canonname;  \/* Canonical name of service location. *\/$/;"	m	struct:addrinfo	access:public
ai_family	./net/lwip/include/lwip/netdb.h	/^    int               ai_family;     \/* Address family of socket. *\/$/;"	m	struct:addrinfo	access:public
ai_flags	./net/lwip/include/lwip/netdb.h	/^    int               ai_flags;      \/* Input flags. *\/$/;"	m	struct:addrinfo	access:public
ai_next	./net/lwip/include/lwip/netdb.h	/^    struct addrinfo  *ai_next;       \/* Pointer to next in list. *\/$/;"	m	struct:addrinfo	typeref:struct:addrinfo::addrinfo	access:public
ai_protocol	./net/lwip/include/lwip/netdb.h	/^    int               ai_protocol;   \/* Protocol of socket. *\/$/;"	m	struct:addrinfo	access:public
ai_socktype	./net/lwip/include/lwip/netdb.h	/^    int               ai_socktype;   \/* Socket type. *\/$/;"	m	struct:addrinfo	access:public
alloc_block	./fs/fs.h	/^int	alloc_block(void);$/;"	p	signature:(void)
api_msg	./net/lwip/include/lwip/api_msg.h	/^struct api_msg {$/;"	s
api_msg::function	./net/lwip/include/lwip/api_msg.h	/^  void (* function)(struct api_msg_msg *msg);$/;"	m	struct:api_msg	access:public
api_msg::msg	./net/lwip/include/lwip/api_msg.h	/^  struct api_msg_msg msg;$/;"	m	struct:api_msg	typeref:struct:api_msg::api_msg_msg	access:public
api_msg_msg	./net/lwip/include/lwip/api_msg.h	/^struct api_msg_msg {$/;"	s
api_msg_msg::__anon17::__anon18::proto	./net/lwip/include/lwip/api_msg.h	/^      u8_t proto;$/;"	m	struct:api_msg_msg::__anon17::__anon18	access:public
api_msg_msg::__anon17::__anon19::ipaddr	./net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon17::__anon19	typeref:struct:api_msg_msg::__anon17::__anon19::ip_addr	access:public
api_msg_msg::__anon17::__anon19::port	./net/lwip/include/lwip/api_msg.h	/^      u16_t port;$/;"	m	struct:api_msg_msg::__anon17::__anon19	access:public
api_msg_msg::__anon17::__anon20::ipaddr	./net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon17::__anon20	typeref:struct:api_msg_msg::__anon17::__anon20::ip_addr	access:public
api_msg_msg::__anon17::__anon20::local	./net/lwip/include/lwip/api_msg.h	/^      u8_t local;$/;"	m	struct:api_msg_msg::__anon17::__anon20	access:public
api_msg_msg::__anon17::__anon20::port	./net/lwip/include/lwip/api_msg.h	/^      u16_t *port;$/;"	m	struct:api_msg_msg::__anon17::__anon20	access:public
api_msg_msg::__anon17::__anon21::apiflags	./net/lwip/include/lwip/api_msg.h	/^      u8_t apiflags;$/;"	m	struct:api_msg_msg::__anon17::__anon21	access:public
api_msg_msg::__anon17::__anon21::dataptr	./net/lwip/include/lwip/api_msg.h	/^      const void *dataptr;$/;"	m	struct:api_msg_msg::__anon17::__anon21	access:public
api_msg_msg::__anon17::__anon21::len	./net/lwip/include/lwip/api_msg.h	/^      int len;$/;"	m	struct:api_msg_msg::__anon17::__anon21	access:public
api_msg_msg::__anon17::__anon22::len	./net/lwip/include/lwip/api_msg.h	/^      u16_t len;$/;"	m	struct:api_msg_msg::__anon17::__anon22	access:public
api_msg_msg::__anon17::__anon23::interface	./net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *interface;$/;"	m	struct:api_msg_msg::__anon17::__anon23	typeref:struct:api_msg_msg::__anon17::__anon23::ip_addr	access:public
api_msg_msg::__anon17::__anon23::join_or_leave	./net/lwip/include/lwip/api_msg.h	/^      enum netconn_igmp join_or_leave;$/;"	m	struct:api_msg_msg::__anon17::__anon23	typeref:enum:api_msg_msg::__anon17::__anon23::netconn_igmp	access:public
api_msg_msg::__anon17::__anon23::multiaddr	./net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *multiaddr;$/;"	m	struct:api_msg_msg::__anon17::__anon23	typeref:struct:api_msg_msg::__anon17::__anon23::ip_addr	access:public
api_msg_msg::__anon17::__anon24::backlog	./net/lwip/include/lwip/api_msg.h	/^      u8_t backlog;$/;"	m	struct:api_msg_msg::__anon17::__anon24	access:public
api_msg_msg::__anon17::ad	./net/lwip/include/lwip/api_msg.h	/^    } ad;$/;"	m	union:api_msg_msg::__anon17	typeref:struct:api_msg_msg::__anon17::__anon20	access:public
api_msg_msg::__anon17::b	./net/lwip/include/lwip/api_msg.h	/^    struct netbuf *b;$/;"	m	union:api_msg_msg::__anon17	typeref:struct:api_msg_msg::__anon17::netbuf	access:public
api_msg_msg::__anon17::bc	./net/lwip/include/lwip/api_msg.h	/^    } bc;$/;"	m	union:api_msg_msg::__anon17	typeref:struct:api_msg_msg::__anon17::__anon19	access:public
api_msg_msg::__anon17::jl	./net/lwip/include/lwip/api_msg.h	/^    } jl;$/;"	m	union:api_msg_msg::__anon17	typeref:struct:api_msg_msg::__anon17::__anon23	access:public
api_msg_msg::__anon17::lb	./net/lwip/include/lwip/api_msg.h	/^    } lb;$/;"	m	union:api_msg_msg::__anon17	typeref:struct:api_msg_msg::__anon17::__anon24	access:public
api_msg_msg::__anon17::n	./net/lwip/include/lwip/api_msg.h	/^    } n;$/;"	m	union:api_msg_msg::__anon17	typeref:struct:api_msg_msg::__anon17::__anon18	access:public
api_msg_msg::__anon17::r	./net/lwip/include/lwip/api_msg.h	/^    } r;$/;"	m	union:api_msg_msg::__anon17	typeref:struct:api_msg_msg::__anon17::__anon22	access:public
api_msg_msg::__anon17::w	./net/lwip/include/lwip/api_msg.h	/^    } w;$/;"	m	union:api_msg_msg::__anon17	typeref:struct:api_msg_msg::__anon17::__anon21	access:public
api_msg_msg::conn	./net/lwip/include/lwip/api_msg.h	/^  struct netconn *conn;$/;"	m	struct:api_msg_msg	typeref:struct:api_msg_msg::netconn	access:public
api_msg_msg::msg	./net/lwip/include/lwip/api_msg.h	/^  } msg;$/;"	m	struct:api_msg_msg	typeref:union:api_msg_msg::__anon17	access:public
apiflags	./net/lwip/include/lwip/api_msg.h	/^      u8_t apiflags;$/;"	m	struct:api_msg_msg::__anon17::__anon21	access:public
apimsg	./net/lwip/include/lwip/tcpip.h	/^    struct api_msg *apimsg;$/;"	m	union:tcpip_msg::__anon27	typeref:struct:tcpip_msg::__anon27::api_msg	access:public
arg	./net/lwip/include/lwip/sys.h	/^  void *arg;$/;"	m	struct:sys_timeo	access:public
arg	./net/lwip/include/lwip/tcpip.h	/^      void *arg;$/;"	m	struct:tcpip_msg::__anon27::__anon30	access:public
argc	./inc/args.h	/^	int *argc;$/;"	m	struct:Argstate	access:public
argnext	./inc/args.h	/^int argnext(struct Argstate *);$/;"	p	signature:(struct Argstate *)
argnextvalue	./inc/args.h	/^char *argnextvalue(struct Argstate *);$/;"	p	signature:(struct Argstate *)
argstart	./inc/args.h	/^void argstart(int *argc, char **argv, struct Argstate *args);$/;"	p	signature:(int *argc, char **argv, struct Argstate *args)
argv	./inc/args.h	/^	const char **argv;$/;"	m	struct:Argstate	access:public
argvalue	./inc/args.h	/^	const char *argvalue;$/;"	m	struct:Argstate	access:public
argvalue	./inc/args.h	/^char *argvalue(struct Argstate *);$/;"	p	signature:(struct Argstate *)
asn_type	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t asn_type;$/;"	m	struct:obj_def	access:public
assert	./inc/assert.h	14;"	d
asyncmap	./net/lwip/netif/ppp/lcp.h	/^    u32_t asyncmap;              \/* Value of async map *\/$/;"	m	struct:lcp_options	access:public
auth_check_options	./net/lwip/netif/ppp/auth.h	/^void auth_check_options (void);$/;"	p	signature:(void)
auth_ip_addr	./net/lwip/netif/ppp/auth.h	/^int  auth_ip_addr (int, u32_t);$/;"	p	signature:(int, u32_t)
auth_peer_fail	./net/lwip/netif/ppp/auth.h	/^void auth_peer_fail (int, u16_t);$/;"	p	signature:(int, u16_t)
auth_peer_success	./net/lwip/netif/ppp/auth.h	/^void auth_peer_success (int, u16_t, char *, int);$/;"	p	signature:(int, u16_t, char *, int)
auth_required	./net/lwip/netif/ppp/ppp.h	/^  u_int  auth_required     : 1;       \/* Peer is required to authenticate *\/$/;"	m	struct:ppp_settings	access:public
auth_reset	./net/lwip/netif/ppp/auth.h	/^void auth_reset (int);$/;"	p	signature:(int)
auth_withpeer_fail	./net/lwip/netif/ppp/auth.h	/^void auth_withpeer_fail (int, u16_t);$/;"	p	signature:(int, u16_t)
auth_withpeer_success	./net/lwip/netif/ppp/auth.h	/^void auth_withpeer_success (int, u16_t);$/;"	p	signature:(int, u16_t)
autoip	./net/lwip/include/ipv4/lwip/autoip.h	/^struct autoip$/;"	s
autoip	./net/lwip/include/lwip/netif.h	/^  struct autoip *autoip;$/;"	m	struct:netif	typeref:struct:netif::autoip	access:public
autoip::lastconflict	./net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t lastconflict;        \/* ticks until a conflict can be solved by defending *\/$/;"	m	struct:autoip	access:public
autoip::llipaddr	./net/lwip/include/ipv4/lwip/autoip.h	/^  struct ip_addr llipaddr;  \/* the currently selected, probed, announced or used LL IP-Address *\/$/;"	m	struct:autoip	typeref:struct:autoip::ip_addr	access:public
autoip::sent_num	./net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t sent_num;            \/* sent number of probes or announces, dependent on state *\/$/;"	m	struct:autoip	access:public
autoip::state	./net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t state;               \/* current AutoIP state machine state *\/$/;"	m	struct:autoip	access:public
autoip::tried_llipaddr	./net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t tried_llipaddr;      \/* total number of probed\/used Link Local IP-Addresses *\/$/;"	m	struct:autoip	access:public
autoip::ttw	./net/lwip/include/ipv4/lwip/autoip.h	/^  u16_t ttw;                \/* ticks to wait, tick is AUTOIP_TMR_INTERVAL long *\/$/;"	m	struct:autoip	access:public
autoip_arp_reply	./net/lwip/include/ipv4/lwip/autoip.h	/^void autoip_arp_reply(struct netif *netif, struct etharp_hdr *hdr);$/;"	p	signature:(struct netif *netif, struct etharp_hdr *hdr)
autoip_coop_state	./net/lwip/include/lwip/dhcp.h	/^  u8_t autoip_coop_state;$/;"	m	struct:dhcp	access:public
autoip_init	./net/lwip/include/ipv4/lwip/autoip.h	/^void autoip_init(void);$/;"	p	signature:(void)
autoip_start	./net/lwip/include/ipv4/lwip/autoip.h	/^err_t autoip_start(struct netif *netif);$/;"	p	signature:(struct netif *netif)
autoip_stop	./net/lwip/include/ipv4/lwip/autoip.h	/^err_t autoip_stop(struct netif *netif);$/;"	p	signature:(struct netif *netif)
autoip_tmr	./net/lwip/include/ipv4/lwip/autoip.h	/^void autoip_tmr(void);$/;"	p	signature:(void)
avChurnRand	./net/lwip/netif/ppp/randm.h	/^void avChurnRand(char *randData, u32_t randLen);$/;"	p	signature:(char *randData, u32_t randLen)
avGenRand	./net/lwip/netif/ppp/randm.h	/^void avGenRand(char *buf, u32_t bufLen);$/;"	p	signature:(char *buf, u32_t bufLen)
avRandom	./net/lwip/netif/ppp/randm.h	/^u32_t avRandom(void);$/;"	p	signature:(void)
avRandomInit	./net/lwip/netif/ppp/randm.h	/^void avRandomInit(void);$/;"	p	signature:(void)
avRandomize	./net/lwip/netif/ppp/randm.h	/^void avRandomize(void);$/;"	p	signature:(void)
avRandomize	./net/lwip/netif/ppp/randm.h	60;"	d
avail	./net/lwip/include/lwip/stats.h	/^  mem_size_t avail;$/;"	m	struct:stats_mem	access:public
b	./net/lwip/include/lwip/api_msg.h	/^    struct netbuf *b;$/;"	m	union:api_msg_msg::__anon17	typeref:struct:api_msg_msg::__anon17::netbuf	access:public
backlog	./net/lwip/include/lwip/api_msg.h	/^      u8_t backlog;$/;"	m	struct:api_msg_msg::__anon17::__anon24	access:public
backlog	./net/lwip/include/lwip/tcp.h	/^  u8_t backlog;$/;"	m	struct:tcp_pcb_listen	access:public
backtrace	./kern/trap.h	/^void backtrace(struct Trapframe *);$/;"	p	signature:(struct Trapframe *)
bad_ip_adrs	./net/lwip/netif/ppp/auth.h	/^int  bad_ip_adrs (u32_t);$/;"	p	signature:(u32_t)
bc	./net/lwip/include/lwip/api_msg.h	/^    } bc;$/;"	m	union:api_msg_msg::__anon17	typeref:struct:api_msg_msg::__anon17::__anon19	access:public
bc_init	./fs/fs.h	/^void	bc_init(void);$/;"	p	signature:(void)
bind	./inc/lib.h	/^int     bind(int s, struct sockaddr *name, socklen_t namelen);$/;"	p	signature:(int s, struct sockaddr *name, socklen_t namelen)
bind	./inc/ns.h	/^	} bind;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_bind	access:public
bind	./net/lwip/include/lwip/sockets.h	327;"	d
bitmap	./fs/fs.h	/^uint32_t *bitmap;		\/\/ bitmap blocks mapped in memory$/;"	v
block_is_free	./fs/fs.h	/^bool	block_is_free(uint32_t blockno);$/;"	p	signature:(uint32_t blockno)
bool	./inc/types.h	/^typedef _Bool bool;$/;"	t
boot	./inc/partition.h	/^	uint8_t boot;$/;"	m	struct:Partitiondesc	access:public
breakpoint	./inc/x86.h	/^breakpoint(void)$/;"	f	signature:(void)
breakpoint	./inc/x86.h	/^static __inline void breakpoint(void) __attribute__((always_inline));$/;"	p	signature:(void)
breakpoint_handler	./kern/trap.h	/^void breakpoint_handler(struct Trapframe*);$/;"	p	signature:(struct Trapframe*)
buf	./kern/e1000.h	/^	char buf[PKT_SIZE];$/;"	m	struct:packet	access:public
buf	./net/lwip/netif/ppp/md5.h	/^  u32_t buf[4];             \/* scratch buffer *\/$/;"	m	struct:__anon13	access:public
buffer_addr	./kern/e1000.h	/^	uint64_t buffer_addr;       \/* Address of the descriptor's data buffer *\/$/;"	m	struct:e1000_tx_desc	access:public
buffer_addr	./kern/e1000.h	/^	uint64_t buffer_addr; \/* Address of the descriptor's data buffer *\/$/;"	m	struct:e1000_rx_desc	access:public
bus	./kern/pci.h	/^    struct pci_bus *bus;	\/\/ Primary bus for bridges$/;"	m	struct:pci_func	typeref:struct:pci_func::pci_bus	access:public
busno	./kern/pci.h	/^    uint32_t busno;$/;"	m	struct:pci_bus	access:public
cachehit	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER cachehit;$/;"	m	struct:stats_proto	access:public
callback	./net/lwip/include/lwip/api.h	/^  netconn_callback callback;$/;"	m	struct:netconn	access:public
callbacks	./net/lwip/netif/ppp/fsm.h	/^  struct fsm_callbacks* callbacks; \/* Callback routines *\/$/;"	m	struct:fsm	typeref:struct:fsm::fsm_callbacks	access:public
cb	./net/lwip/include/lwip/tcpip.h	/^    } cb;$/;"	m	union:tcpip_msg::__anon27	typeref:struct:tcpip_msg::__anon27::__anon29	access:public
cflag	./net/lwip/netif/ppp/ipcp.h	/^  u_char  cflag;             \/* VJ slot compression flag. *\/$/;"	m	struct:ipcp_options	access:public
chal_id	./net/lwip/netif/ppp/chap.h	/^  u_char chal_id;                         \/* ID of last challenge *\/$/;"	m	struct:chap_state	access:public
chal_interval	./net/lwip/netif/ppp/chap.h	/^  int chal_interval;                      \/* Time until we challenge peer again *\/$/;"	m	struct:chap_state	access:public
chal_len	./net/lwip/netif/ppp/chap.h	/^  u_char chal_len;                        \/* challenge length *\/$/;"	m	struct:chap_state	access:public
chal_name	./net/lwip/netif/ppp/chap.h	/^  char *chal_name;                        \/* Our name to use with challenge *\/$/;"	m	struct:chap_state	access:public
chal_transmits	./net/lwip/netif/ppp/chap.h	/^  int chal_transmits;                     \/* Number of transmissions of challenge *\/$/;"	m	struct:chap_state	access:public
chal_type	./net/lwip/netif/ppp/chap.h	/^  u_char chal_type;                       \/* hash algorithm for challenges *\/$/;"	m	struct:chap_state	access:public
challenge	./net/lwip/netif/ppp/chap.h	/^  u_char challenge[MAX_CHALLENGE_LENGTH]; \/* last challenge string sent *\/$/;"	m	struct:chap_state	access:public
chap_mdtype	./net/lwip/netif/ppp/lcp.h	/^    u_char chap_mdtype;          \/* which MD type (hashing algorithm) *\/$/;"	m	struct:lcp_options	access:public
chap_state	./net/lwip/netif/ppp/chap.h	/^typedef struct chap_state {$/;"	s
chap_state	./net/lwip/netif/ppp/chap.h	/^} chap_state;$/;"	t	typeref:struct:chap_state
chap_state::chal_id	./net/lwip/netif/ppp/chap.h	/^  u_char chal_id;                         \/* ID of last challenge *\/$/;"	m	struct:chap_state	access:public
chap_state::chal_interval	./net/lwip/netif/ppp/chap.h	/^  int chal_interval;                      \/* Time until we challenge peer again *\/$/;"	m	struct:chap_state	access:public
chap_state::chal_len	./net/lwip/netif/ppp/chap.h	/^  u_char chal_len;                        \/* challenge length *\/$/;"	m	struct:chap_state	access:public
chap_state::chal_name	./net/lwip/netif/ppp/chap.h	/^  char *chal_name;                        \/* Our name to use with challenge *\/$/;"	m	struct:chap_state	access:public
chap_state::chal_transmits	./net/lwip/netif/ppp/chap.h	/^  int chal_transmits;                     \/* Number of transmissions of challenge *\/$/;"	m	struct:chap_state	access:public
chap_state::chal_type	./net/lwip/netif/ppp/chap.h	/^  u_char chal_type;                       \/* hash algorithm for challenges *\/$/;"	m	struct:chap_state	access:public
chap_state::challenge	./net/lwip/netif/ppp/chap.h	/^  u_char challenge[MAX_CHALLENGE_LENGTH]; \/* last challenge string sent *\/$/;"	m	struct:chap_state	access:public
chap_state::clientstate	./net/lwip/netif/ppp/chap.h	/^  int clientstate;                        \/* Client state *\/$/;"	m	struct:chap_state	access:public
chap_state::id	./net/lwip/netif/ppp/chap.h	/^  u_char id;                              \/* Current id *\/$/;"	m	struct:chap_state	access:public
chap_state::max_transmits	./net/lwip/netif/ppp/chap.h	/^  int max_transmits;                      \/* Maximum # of challenge transmissions *\/$/;"	m	struct:chap_state	access:public
chap_state::resp_id	./net/lwip/netif/ppp/chap.h	/^  u_char resp_id;                         \/* ID for response messages *\/$/;"	m	struct:chap_state	access:public
chap_state::resp_length	./net/lwip/netif/ppp/chap.h	/^  u_char resp_length;                     \/* length of response *\/$/;"	m	struct:chap_state	access:public
chap_state::resp_name	./net/lwip/netif/ppp/chap.h	/^  char *resp_name;                        \/* Our name to send with response *\/$/;"	m	struct:chap_state	access:public
chap_state::resp_transmits	./net/lwip/netif/ppp/chap.h	/^  int resp_transmits;                     \/* Number of transmissions of response *\/$/;"	m	struct:chap_state	access:public
chap_state::resp_type	./net/lwip/netif/ppp/chap.h	/^  u_char resp_type;                       \/* hash algorithm for responses *\/$/;"	m	struct:chap_state	access:public
chap_state::response	./net/lwip/netif/ppp/chap.h	/^  u_char response[MAX_RESPONSE_LENGTH];   \/* Response to send *\/$/;"	m	struct:chap_state	access:public
chap_state::serverstate	./net/lwip/netif/ppp/chap.h	/^  int serverstate;                        \/* Server state *\/$/;"	m	struct:chap_state	access:public
chap_state::timeouttime	./net/lwip/netif/ppp/chap.h	/^  int timeouttime;                        \/* Timeout time in seconds *\/$/;"	m	struct:chap_state	access:public
chap_state::unit	./net/lwip/netif/ppp/chap.h	/^  int unit;                               \/* Interface unit number *\/$/;"	m	struct:chap_state	access:public
check_passwd	./net/lwip/netif/ppp/auth.h	/^int  check_passwd (int, char *, int, char *, int, char **, int *);$/;"	p	signature:(int, char *, int, char *, int, char **, int *)
chkerr	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_igmp	access:public
chkerr	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_proto	access:public
chksum	./net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_dur_hdr	access:public
chksum	./net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_echo_hdr	access:public
chksum	./net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_te_hdr	access:public
chksum_len_rx	./net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb	access:public
chksum_len_tx	./net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb	access:public
chs_begin	./inc/partition.h	/^	uint8_t chs_begin[3];$/;"	m	struct:Partitiondesc	access:public
chs_end	./inc/partition.h	/^	uint8_t chs_end[3];$/;"	m	struct:Partitiondesc	access:public
cifaddr	./net/lwip/netif/ppp/ppp.h	/^int  cifaddr (int, u32_t, u32_t);$/;"	p	signature:(int, u32_t, u32_t)
cifdefaultroute	./net/lwip/netif/ppp/ppp.h	/^int  cifdefaultroute (int, u32_t, u32_t);$/;"	p	signature:(int, u32_t, u32_t)
cilen	./net/lwip/netif/ppp/fsm.h	/^  int  (*cilen)(fsm*);                              \/* Length of our Configuration Information *\/$/;"	m	struct:fsm_callbacks	access:public
clientstate	./net/lwip/netif/ppp/chap.h	/^  int clientstate;                        \/* Client state *\/$/;"	m	struct:chap_state	access:public
close	./inc/lib.h	/^int	close(int fd);$/;"	p	signature:(int fd)
close	./inc/ns.h	/^	} close;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_close	access:public
close	./net/lwip/include/lwip/sockets.h	347;"	d
close	./net/lwip/netif/ppp/ppp.h	/^    void (*close) (int unit, char *reason);$/;"	m	struct:protent	access:public
close_all	./inc/lib.h	/^void	close_all(void);$/;"	p	signature:(void)
closesocket	./net/lwip/include/lwip/sockets.h	329;"	d
cmd	./kern/e1000.h	/^	uint8_t cmd;        \/* Descriptor control *\/$/;"	m	struct:e1000_tx_desc	access:public
com_strlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t com_strlen;$/;"	m	struct:snmp_msg_pstat	access:public
comlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
comlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
comlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
comlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
common	./net/lwip/include/lwip/netifapi.h	/^    } common;$/;"	m	union:netifapi_msg_msg::__anon31	typeref:struct:netifapi_msg_msg::__anon31::__anon33	access:public
community	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t community[SNMP_COMMUNITY_STR_LEN + 1];$/;"	m	struct:snmp_msg_pstat	access:public
compressSlot	./net/lwip/netif/ppp/vj.h	/^  u_char compressSlot;             \/* Flag indicating OK to compress slot ID. *\/$/;"	m	struct:vjcompress	access:public
conn	./net/lwip/include/lwip/api_msg.h	/^  struct netconn *conn;$/;"	m	struct:api_msg_msg	typeref:struct:api_msg_msg::netconn	access:public
connect	./inc/lib.h	/^int     connect(int s, const struct sockaddr *name, socklen_t namelen);$/;"	p	signature:(int s, const struct sockaddr *name, socklen_t namelen)
connect	./inc/ns.h	/^	} connect;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_connect	access:public
connect	./net/lwip/include/lwip/sockets.h	330;"	d
connected	./net/lwip/include/lwip/tcp.h	/^  err_t (* connected)(void *arg, struct tcp_pcb *pcb, err_t err);$/;"	m	struct:tcp_pcb	access:public
cons_getc	./kern/console.h	/^int cons_getc(void);$/;"	p	signature:(void)
cons_init	./kern/console.h	/^void cons_init(void);$/;"	p	signature:(void)
continue_exec	./kern/monitor.h	/^int continue_exec(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
count	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t count;$/;"	m	struct:snmp_varbind_root	access:public
count	./net/lwip/include/lwip/snmp_structs.h	/^  u16_t count;$/;"	m	struct:mib_list_rootnode	access:public
cprintf	./inc/stdio.h	/^int	cprintf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
cpu	./kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo	access:public
cpu_env	./kern/cpu.h	/^	struct Env *cpu_env;            \/\/ The currently-running environment.$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Env	access:public
cpu_id	./kern/cpu.h	/^	uint8_t cpu_id;                 \/\/ Local APIC ID; index into cpus[] below$/;"	m	struct:CpuInfo	access:public
cpu_status	./kern/cpu.h	/^	volatile unsigned cpu_status;   \/\/ The status of the CPU$/;"	m	struct:CpuInfo	access:public
cpu_ts	./kern/cpu.h	/^	struct Taskstate cpu_ts;        \/\/ Used by x86 to find stack for interrupt$/;"	m	struct:CpuInfo	typeref:struct:CpuInfo::Taskstate	access:public
cpuid	./inc/x86.h	/^cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)$/;"	f	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpuid	./inc/x86.h	/^static __inline void cpuid(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp);$/;"	p	signature:(uint32_t info, uint32_t *eaxp, uint32_t *ebxp, uint32_t *ecxp, uint32_t *edxp)
cpunum	./kern/cpu.h	/^int cpunum(void);$/;"	p	signature:(void)
cputchar	./inc/lib.h	/^void	cputchar(int c);$/;"	p	signature:(int c)
cputchar	./inc/stdio.h	/^void	cputchar(int c);$/;"	p	signature:(int c)
cs_filler	./net/lwip/netif/ppp/vj.h	/^  u_char cs_filler;$/;"	m	struct:cstate	access:public
cs_hdr	./net/lwip/netif/ppp/vj.h	115;"	d
cs_hlen	./net/lwip/netif/ppp/vj.h	/^  u_short cs_hlen;        \/* size of hdr (receive only) *\/$/;"	m	struct:cstate	access:public
cs_id	./net/lwip/netif/ppp/vj.h	/^  u_char cs_id;           \/* connection # associated with this state *\/$/;"	m	struct:cstate	access:public
cs_ip	./net/lwip/netif/ppp/vj.h	114;"	d
cs_next	./net/lwip/netif/ppp/vj.h	/^  struct cstate *cs_next; \/* next most recently used state (xmit only) *\/$/;"	m	struct:cstate	typeref:struct:cstate::cstate	access:public
cso	./kern/e1000.h	/^	uint8_t cso;        \/* Checksum offset *\/$/;"	m	struct:e1000_tx_desc	access:public
css	./kern/e1000.h	/^	uint8_t css;        \/* Checksum start *\/$/;"	m	struct:e1000_tx_desc	access:public
cstate	./net/lwip/netif/ppp/vj.h	/^struct cstate {$/;"	s
cstate::__anon12::csu_hdr	./net/lwip/netif/ppp/vj.h	/^    char csu_hdr[MAX_HDR];$/;"	m	union:cstate::__anon12	access:public
cstate::__anon12::csu_ip	./net/lwip/netif/ppp/vj.h	/^    struct ip csu_ip;     \/* ip\/tcp hdr from most recent packet *\/$/;"	m	union:cstate::__anon12	typeref:struct:cstate::__anon12::ip	access:public
cstate::cs_filler	./net/lwip/netif/ppp/vj.h	/^  u_char cs_filler;$/;"	m	struct:cstate	access:public
cstate::cs_hlen	./net/lwip/netif/ppp/vj.h	/^  u_short cs_hlen;        \/* size of hdr (receive only) *\/$/;"	m	struct:cstate	access:public
cstate::cs_id	./net/lwip/netif/ppp/vj.h	/^  u_char cs_id;           \/* connection # associated with this state *\/$/;"	m	struct:cstate	access:public
cstate::cs_next	./net/lwip/netif/ppp/vj.h	/^  struct cstate *cs_next; \/* next most recently used state (xmit only) *\/$/;"	m	struct:cstate	typeref:struct:cstate::cstate	access:public
cstate::vjcs_u	./net/lwip/netif/ppp/vj.h	/^  } vjcs_u;$/;"	m	struct:cstate	typeref:union:cstate::__anon12	access:public
csu_hdr	./net/lwip/netif/ppp/vj.h	/^    char csu_hdr[MAX_HDR];$/;"	m	union:cstate::__anon12	access:public
csu_ip	./net/lwip/netif/ppp/vj.h	/^    struct ip csu_ip;     \/* ip\/tcp hdr from most recent packet *\/$/;"	m	union:cstate::__anon12	typeref:struct:cstate::__anon12::ip	access:public
csum	./kern/e1000.h	/^	uint16_t csum;       \/* Packet checksum *\/$/;"	m	struct:e1000_rx_desc	access:public
ctx	./net/lwip/include/lwip/tcpip.h	/^      void *ctx;$/;"	m	struct:tcpip_msg::__anon27::__anon29	access:public
curarg	./inc/args.h	/^	const char *curarg;$/;"	m	struct:Argstate	access:public
curenv	./kern/env.h	10;"	d
cwnd	./net/lwip/include/lwip/tcp.h	/^  u16_t cwnd;  $/;"	m	struct:tcp_pcb	access:public
datagram_len	./net/lwip/include/ipv4/lwip/ip_frag.h	/^  u16_t datagram_len;$/;"	m	struct:ip_reassdata	access:public
dataptr	./net/lwip/include/lwip/api_msg.h	/^      const void *dataptr;$/;"	m	struct:api_msg_msg::__anon17::__anon21	access:public
dataptr	./net/lwip/include/lwip/tcp.h	/^  void *dataptr;           \/* pointer to the TCP data in the pbuf *\/$/;"	m	struct:tcp_seg	access:public
debuginfo_eip	./kern/kdebug.h	/^int debuginfo_eip(uintptr_t eip, struct Eipdebuginfo *info);$/;"	p	signature:(uintptr_t eip, struct Eipdebuginfo *info)
default_route	./net/lwip/netif/ppp/ipcp.h	/^  u_int   default_route : 1; \/* Assign default route through interface? *\/$/;"	m	struct:ipcp_options	access:public
dest	./net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::	access:public
dev	./kern/pci.h	/^    uint32_t dev;$/;"	m	struct:pci_func	access:public
dev_class	./kern/pci.h	/^    uint32_t dev_class;$/;"	m	struct:pci_func	access:public
dev_close	./inc/fd.h	/^	int (*dev_close)(struct Fd *fd);$/;"	m	struct:Dev	access:public
dev_id	./inc/fd.h	/^	int dev_id;$/;"	m	struct:Dev	access:public
dev_id	./kern/pci.h	/^    uint32_t dev_id;$/;"	m	struct:pci_func	access:public
dev_lookup	./inc/fd.h	/^int	dev_lookup(int devid, struct Dev **dev_store);$/;"	p	signature:(int devid, struct Dev **dev_store)
dev_name	./inc/fd.h	/^	const char *dev_name;$/;"	m	struct:Dev	access:public
dev_read	./inc/fd.h	/^	ssize_t (*dev_read)(struct Fd *fd, void *buf, size_t len);$/;"	m	struct:Dev	access:public
dev_stat	./inc/fd.h	/^	int (*dev_stat)(struct Fd *fd, struct Stat *stat);$/;"	m	struct:Dev	access:public
dev_trunc	./inc/fd.h	/^	int (*dev_trunc)(struct Fd *fd, off_t length);$/;"	m	struct:Dev	access:public
dev_write	./inc/fd.h	/^	ssize_t (*dev_write)(struct Fd *fd, const void *buf, size_t len);$/;"	m	struct:Dev	access:public
dhcp	./net/lwip/include/lwip/dhcp.h	/^struct dhcp$/;"	s
dhcp	./net/lwip/include/lwip/netif.h	/^  struct dhcp *dhcp;$/;"	m	struct:netif	typeref:struct:netif::dhcp	access:public
dhcp::autoip_coop_state	./net/lwip/include/lwip/dhcp.h	/^  u8_t autoip_coop_state;$/;"	m	struct:dhcp	access:public
dhcp::dns_count	./net/lwip/include/lwip/dhcp.h	/^  u32_t dns_count; \/* actual number of DNS servers obtained *\/$/;"	m	struct:dhcp	access:public
dhcp::msg_in	./net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_in;$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg	access:public
dhcp::msg_out	./net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_out; \/* outgoing msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg	access:public
dhcp::offered_bc_addr	./net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_bc_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr	access:public
dhcp::offered_dns_addr	./net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_dns_addr[DHCP_MAX_DNS]; \/* DNS server addresses *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr	access:public
dhcp::offered_gw_addr	./net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_gw_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr	access:public
dhcp::offered_ip_addr	./net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_ip_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr	access:public
dhcp::offered_sn_mask	./net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_sn_mask;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr	access:public
dhcp::offered_t0_lease	./net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t0_lease; \/* lease period (in seconds) *\/$/;"	m	struct:dhcp	access:public
dhcp::offered_t1_renew	./net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t1_renew; \/* recommended renew time (usually 50% of lease period) *\/$/;"	m	struct:dhcp	access:public
dhcp::offered_t2_rebind	./net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t2_rebind; \/* recommended rebind time (usually 66% of lease period)  *\/$/;"	m	struct:dhcp	access:public
dhcp::options_in	./net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *options_in; $/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg	access:public
dhcp::options_in_len	./net/lwip/include/lwip/dhcp.h	/^  u16_t options_in_len;$/;"	m	struct:dhcp	access:public
dhcp::options_out_len	./net/lwip/include/lwip/dhcp.h	/^  u16_t options_out_len; \/* outgoing msg options length *\/$/;"	m	struct:dhcp	access:public
dhcp::p	./net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p;$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf	access:public
dhcp::p_out	./net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p_out; \/* pbuf of outcoming msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf	access:public
dhcp::pcb	./net/lwip/include/lwip/dhcp.h	/^  struct udp_pcb *pcb;$/;"	m	struct:dhcp	typeref:struct:dhcp::udp_pcb	access:public
dhcp::request_timeout	./net/lwip/include/lwip/dhcp.h	/^  u16_t request_timeout; \/* #ticks with period DHCP_FINE_TIMER_SECS for request timeout *\/$/;"	m	struct:dhcp	access:public
dhcp::server_ip_addr	./net/lwip/include/lwip/dhcp.h	/^  struct ip_addr server_ip_addr; \/* dhcp server address that offered this lease *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr	access:public
dhcp::state	./net/lwip/include/lwip/dhcp.h	/^  u8_t state;$/;"	m	struct:dhcp	access:public
dhcp::t1_timeout	./net/lwip/include/lwip/dhcp.h	/^  u16_t t1_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for renewal time *\/$/;"	m	struct:dhcp	access:public
dhcp::t2_timeout	./net/lwip/include/lwip/dhcp.h	/^  u16_t t2_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for rebind time *\/$/;"	m	struct:dhcp	access:public
dhcp::tries	./net/lwip/include/lwip/dhcp.h	/^  u8_t tries;$/;"	m	struct:dhcp	access:public
dhcp::xid	./net/lwip/include/lwip/dhcp.h	/^  u32_t xid;$/;"	m	struct:dhcp	access:public
dhcp_arp_reply	./net/lwip/include/lwip/dhcp.h	/^void dhcp_arp_reply(struct netif *netif, struct ip_addr *addr);$/;"	p	signature:(struct netif *netif, struct ip_addr *addr)
dhcp_coarse_tmr	./net/lwip/include/lwip/dhcp.h	/^void dhcp_coarse_tmr(void);$/;"	p	signature:(void)
dhcp_fine_tmr	./net/lwip/include/lwip/dhcp.h	/^void dhcp_fine_tmr(void);$/;"	p	signature:(void)
dhcp_inform	./net/lwip/include/lwip/dhcp.h	/^void dhcp_inform(struct netif *netif);$/;"	p	signature:(struct netif *netif)
dhcp_msg	./net/lwip/include/lwip/dhcp.h	/^struct dhcp_msg$/;"	s
dhcp_msg::PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(struct ip_addr ciaddr);$/;"	p	struct:dhcp_msg	access:public	signature:(struct ip_addr ciaddr)
dhcp_msg::PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(struct ip_addr giaddr);$/;"	p	struct:dhcp_msg	access:public	signature:(struct ip_addr giaddr)
dhcp_msg::PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(struct ip_addr siaddr);$/;"	p	struct:dhcp_msg	access:public	signature:(struct ip_addr siaddr)
dhcp_msg::PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(struct ip_addr yiaddr);$/;"	p	struct:dhcp_msg	access:public	signature:(struct ip_addr yiaddr)
dhcp_msg::PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u16_t flags);$/;"	p	struct:dhcp_msg	access:public	signature:(u16_t flags)
dhcp_msg::PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u16_t secs);$/;"	p	struct:dhcp_msg	access:public	signature:(u16_t secs)
dhcp_msg::PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u32_t cookie);$/;"	p	struct:dhcp_msg	access:public	signature:(u32_t cookie)
dhcp_msg::PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u32_t xid);$/;"	p	struct:dhcp_msg	access:public	signature:(u32_t xid)
dhcp_msg::PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u8_t chaddr[DHCP_CHADDR_LEN]);$/;"	p	struct:dhcp_msg	access:public	signature:(u8_t chaddr[DHCP_CHADDR_LEN])
dhcp_msg::PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u8_t file[DHCP_FILE_LEN]);$/;"	p	struct:dhcp_msg	access:public	signature:(u8_t file[DHCP_FILE_LEN])
dhcp_msg::PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u8_t hlen);$/;"	p	struct:dhcp_msg	access:public	signature:(u8_t hlen)
dhcp_msg::PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u8_t hops);$/;"	p	struct:dhcp_msg	access:public	signature:(u8_t hops)
dhcp_msg::PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u8_t htype);$/;"	p	struct:dhcp_msg	access:public	signature:(u8_t htype)
dhcp_msg::PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u8_t op);$/;"	p	struct:dhcp_msg	access:public	signature:(u8_t op)
dhcp_msg::PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u8_t options[DHCP_OPTIONS_LEN]);$/;"	p	struct:dhcp_msg	access:public	signature:(u8_t options[DHCP_OPTIONS_LEN])
dhcp_msg::PACK_STRUCT_FIELD	./net/lwip/include/lwip/dhcp.h	/^  PACK_STRUCT_FIELD(u8_t sname[DHCP_SNAME_LEN]);$/;"	p	struct:dhcp_msg	access:public	signature:(u8_t sname[DHCP_SNAME_LEN])
dhcp_release	./net/lwip/include/lwip/dhcp.h	/^err_t dhcp_release(struct netif *netif);$/;"	p	signature:(struct netif *netif)
dhcp_renew	./net/lwip/include/lwip/dhcp.h	/^err_t dhcp_renew(struct netif *netif);$/;"	p	signature:(struct netif *netif)
dhcp_start	./net/lwip/include/lwip/dhcp.h	/^err_t dhcp_start(struct netif *netif);$/;"	p	signature:(struct netif *netif)
dhcp_stop	./net/lwip/include/lwip/dhcp.h	/^void dhcp_stop(struct netif *netif);$/;"	p	signature:(struct netif *netif)
digest	./net/lwip/netif/ppp/md5.h	/^  unsigned char digest[16]; \/* actual digest after MD5Final call *\/$/;"	m	struct:__anon13	access:public
dip	./net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr dip;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::ip_addr	access:public
disable_defaultip	./net/lwip/netif/ppp/ppp.h	/^  u_int  disable_defaultip : 1;       \/* Don't use hostname for default IP addrs *\/$/;"	m	struct:ppp_settings	access:public
diskaddr	./fs/fs.h	/^void*	diskaddr(uint32_t blockno);$/;"	p	signature:(uint32_t blockno)
dns1	./net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::	access:public
dns2	./net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::	access:public
dns_api_msg	./net/lwip/include/lwip/api_msg.h	/^struct dns_api_msg {$/;"	s
dns_api_msg::addr	./net/lwip/include/lwip/api_msg.h	/^  struct ip_addr *addr;$/;"	m	struct:dns_api_msg	typeref:struct:dns_api_msg::ip_addr	access:public
dns_api_msg::err	./net/lwip/include/lwip/api_msg.h	/^  err_t *err;$/;"	m	struct:dns_api_msg	access:public
dns_api_msg::name	./net/lwip/include/lwip/api_msg.h	/^  const char *name;$/;"	m	struct:dns_api_msg	access:public
dns_api_msg::sem	./net/lwip/include/lwip/api_msg.h	/^  sys_sem_t sem;$/;"	m	struct:dns_api_msg	access:public
dns_count	./net/lwip/include/lwip/dhcp.h	/^  u32_t dns_count; \/* actual number of DNS servers obtained *\/$/;"	m	struct:dhcp	access:public
dns_found_callback	./net/lwip/include/lwip/dns.h	/^typedef void (*dns_found_callback)(const char *name, struct ip_addr *ipaddr, void *callback_arg);$/;"	t
dns_gethostbyname	./net/lwip/include/lwip/dns.h	/^err_t          dns_gethostbyname(const char *hostname, struct ip_addr *addr,$/;"	p	signature:(const char *hostname, struct ip_addr *addr, dns_found_callback found, void *callback_arg)
dns_getserver	./net/lwip/include/lwip/dns.h	/^struct ip_addr dns_getserver(u8_t numdns);$/;"	p	signature:(u8_t numdns)
dns_init	./net/lwip/include/lwip/dns.h	/^void           dns_init(void);$/;"	p	signature:(void)
dns_setserver	./net/lwip/include/lwip/dns.h	/^void           dns_setserver(u8_t numdns, struct ip_addr *dnsserver);$/;"	p	signature:(u8_t numdns, struct ip_addr *dnsserver)
dns_tmr	./net/lwip/include/lwip/dns.h	/^void           dns_tmr(void);$/;"	p	signature:(void)
dnsaddr	./net/lwip/netif/ppp/ipcp.h	/^  u32_t   dnsaddr[2];        \/* Primary and secondary MS DNS entries *\/$/;"	m	struct:ipcp_options	access:public
do_bind	./net/lwip/include/lwip/api_msg.h	/^void do_bind            ( struct api_msg_msg *msg);$/;"	p	signature:( struct api_msg_msg *msg)
do_close	./net/lwip/include/lwip/api_msg.h	/^void do_close           ( struct api_msg_msg *msg);$/;"	p	signature:( struct api_msg_msg *msg)
do_connect	./net/lwip/include/lwip/api_msg.h	/^void do_connect         ( struct api_msg_msg *msg);$/;"	p	signature:( struct api_msg_msg *msg)
do_delconn	./net/lwip/include/lwip/api_msg.h	/^void do_delconn         ( struct api_msg_msg *msg);$/;"	p	signature:( struct api_msg_msg *msg)
do_disconnect	./net/lwip/include/lwip/api_msg.h	/^void do_disconnect      ( struct api_msg_msg *msg);$/;"	p	signature:( struct api_msg_msg *msg)
do_getaddr	./net/lwip/include/lwip/api_msg.h	/^void do_getaddr         ( struct api_msg_msg *msg);$/;"	p	signature:( struct api_msg_msg *msg)
do_gethostbyname	./net/lwip/include/lwip/api_msg.h	/^void do_gethostbyname(void *arg);$/;"	p	signature:(void *arg)
do_join_leave_group	./net/lwip/include/lwip/api_msg.h	/^void do_join_leave_group( struct api_msg_msg *msg);$/;"	p	signature:( struct api_msg_msg *msg)
do_listen	./net/lwip/include/lwip/api_msg.h	/^void do_listen          ( struct api_msg_msg *msg);$/;"	p	signature:( struct api_msg_msg *msg)
do_newconn	./net/lwip/include/lwip/api_msg.h	/^void do_newconn         ( struct api_msg_msg *msg);$/;"	p	signature:( struct api_msg_msg *msg)
do_recv	./net/lwip/include/lwip/api_msg.h	/^void do_recv            ( struct api_msg_msg *msg);$/;"	p	signature:( struct api_msg_msg *msg)
do_send	./net/lwip/include/lwip/api_msg.h	/^void do_send            ( struct api_msg_msg *msg);$/;"	p	signature:( struct api_msg_msg *msg)
do_write	./net/lwip/include/lwip/api_msg.h	/^void do_write           ( struct api_msg_msg *msg);$/;"	p	signature:( struct api_msg_msg *msg)
down	./net/lwip/netif/ppp/fsm.h	/^  void (*down)(fsm*);                               \/* Called when fsm leaves LS_OPENED state *\/$/;"	m	struct:fsm_callbacks	access:public
drop	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER drop;             \/* Dropped packets. *\/$/;"	m	struct:stats_proto	access:public
dummy	./net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	m	struct:sys_timeo	access:public
dup	./inc/lib.h	/^int	dup(int oldfd, int newfd);$/;"	p	signature:(int oldfd, int newfd)
dupacks	./net/lwip/include/lwip/tcp.h	/^  u8_t dupacks;$/;"	m	struct:tcp_pcb	access:public
e1000_get_mac	./kern/e1000.h	/^void e1000_get_mac(uint8_t* mac_addr);$/;"	p	signature:(uint8_t* mac_addr)
e1000_init	./kern/e1000.h	/^int e1000_init(struct pci_func* pcif);$/;"	p	signature:(struct pci_func* pcif)
e1000_receive	./kern/e1000.h	/^int e1000_receive(char *pck, size_t* length);$/;"	p	signature:(char *pck, size_t* length)
e1000_rx_desc	./kern/e1000.h	/^struct e1000_rx_desc {$/;"	s
e1000_rx_desc::buffer_addr	./kern/e1000.h	/^	uint64_t buffer_addr; \/* Address of the descriptor's data buffer *\/$/;"	m	struct:e1000_rx_desc	access:public
e1000_rx_desc::csum	./kern/e1000.h	/^	uint16_t csum;       \/* Packet checksum *\/$/;"	m	struct:e1000_rx_desc	access:public
e1000_rx_desc::errors	./kern/e1000.h	/^	uint8_t errors;      \/* Descriptor Errors *\/$/;"	m	struct:e1000_rx_desc	access:public
e1000_rx_desc::length	./kern/e1000.h	/^	uint16_t length;     \/* Length of data DMAed into data buffer *\/$/;"	m	struct:e1000_rx_desc	access:public
e1000_rx_desc::special	./kern/e1000.h	/^	uint16_t special;$/;"	m	struct:e1000_rx_desc	access:public
e1000_rx_desc::status	./kern/e1000.h	/^	uint8_t status;      \/* Descriptor status *\/$/;"	m	struct:e1000_rx_desc	access:public
e1000_transmit	./kern/e1000.h	/^int e1000_transmit(char *pck, size_t length);$/;"	p	signature:(char *pck, size_t length)
e1000_trap_handler	./kern/e1000.h	/^void e1000_trap_handler();$/;"	p	signature:()
e1000_tx_desc	./kern/e1000.h	/^struct e1000_tx_desc {$/;"	s
e1000_tx_desc::buffer_addr	./kern/e1000.h	/^	uint64_t buffer_addr;       \/* Address of the descriptor's data buffer *\/$/;"	m	struct:e1000_tx_desc	access:public
e1000_tx_desc::cmd	./kern/e1000.h	/^	uint8_t cmd;        \/* Descriptor control *\/$/;"	m	struct:e1000_tx_desc	access:public
e1000_tx_desc::cso	./kern/e1000.h	/^	uint8_t cso;        \/* Checksum offset *\/$/;"	m	struct:e1000_tx_desc	access:public
e1000_tx_desc::css	./kern/e1000.h	/^	uint8_t css;        \/* Checksum start *\/$/;"	m	struct:e1000_tx_desc	access:public
e1000_tx_desc::length	./kern/e1000.h	/^	uint16_t length;    \/* Data buffer length *\/$/;"	m	struct:e1000_tx_desc	access:public
e1000_tx_desc::special	./kern/e1000.h	/^	uint16_t special;$/;"	m	struct:e1000_tx_desc	access:public
e1000_tx_desc::status	./kern/e1000.h	/^	uint8_t status;     \/* Descriptor status *\/$/;"	m	struct:e1000_tx_desc	access:public
e2s	./net/lwip/jos/arch/perror.h	/^const char *e2s(int e);$/;"	p	signature:(int e)
e_ehsize	./inc/elf.h	/^	uint16_t e_ehsize;$/;"	m	struct:Elf	access:public
e_elf	./inc/elf.h	/^	uint8_t e_elf[12];$/;"	m	struct:Elf	access:public
e_entry	./inc/elf.h	/^	uint32_t e_entry;$/;"	m	struct:Elf	access:public
e_flags	./inc/elf.h	/^	uint32_t e_flags;$/;"	m	struct:Elf	access:public
e_machine	./inc/elf.h	/^	uint16_t e_machine;$/;"	m	struct:Elf	access:public
e_magic	./inc/elf.h	/^	uint32_t e_magic;	\/\/ must equal ELF_MAGIC$/;"	m	struct:Elf	access:public
e_phentsize	./inc/elf.h	/^	uint16_t e_phentsize;$/;"	m	struct:Elf	access:public
e_phnum	./inc/elf.h	/^	uint16_t e_phnum;$/;"	m	struct:Elf	access:public
e_phoff	./inc/elf.h	/^	uint32_t e_phoff;$/;"	m	struct:Elf	access:public
e_shentsize	./inc/elf.h	/^	uint16_t e_shentsize;$/;"	m	struct:Elf	access:public
e_shnum	./inc/elf.h	/^	uint16_t e_shnum;$/;"	m	struct:Elf	access:public
e_shoff	./inc/elf.h	/^	uint32_t e_shoff;$/;"	m	struct:Elf	access:public
e_shstrndx	./inc/elf.h	/^	uint16_t e_shstrndx;$/;"	m	struct:Elf	access:public
e_type	./inc/elf.h	/^	uint16_t e_type;$/;"	m	struct:Elf	access:public
e_version	./inc/elf.h	/^	uint32_t e_version;$/;"	m	struct:Elf	access:public
eidlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t eidlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
eidlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t eidlenlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
eip_file	./kern/kdebug.h	/^	const char *eip_file;		\/\/ Source code filename for EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_addr	./kern/kdebug.h	/^	uintptr_t eip_fn_addr;		\/\/ Address of start of function$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_name	./kern/kdebug.h	/^	const char *eip_fn_name;	\/\/ Name of function containing EIP$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_namelen	./kern/kdebug.h	/^	int eip_fn_namelen;		\/\/ Length of function name$/;"	m	struct:Eipdebuginfo	access:public
eip_fn_narg	./kern/kdebug.h	/^	int eip_fn_narg;		\/\/ Number of function arguments$/;"	m	struct:Eipdebuginfo	access:public
eip_line	./kern/kdebug.h	/^	int eip_line;			\/\/ Source code linenumber for EIP$/;"	m	struct:Eipdebuginfo	access:public
enabled_flag	./net/lwip/netif/ppp/ppp.h	/^    int  enabled_flag;      \/* 0 iff protocol is disabled *\/$/;"	m	struct:protent	access:public
endpoint	./net/lwip/netif/ppp/lcp.h	/^    struct epdisc endpoint;      \/* endpoint discriminator *\/$/;"	m	struct:lcp_options	typeref:struct:lcp_options::epdisc	access:public
enterprise	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id *enterprise;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_obj_id	access:public
env_alloc	./kern/env.h	/^int	env_alloc(struct Env **e, envid_t parent_id);$/;"	p	signature:(struct Env **e, envid_t parent_id)
env_cpunum	./inc/env.h	/^	int env_cpunum;			\/\/ The CPU that the env is running on$/;"	m	struct:Env	access:public
env_create	./kern/env.h	/^void	env_create(uint8_t *binary, enum EnvType type);$/;"	p	signature:(uint8_t *binary, enum EnvType type)
env_destroy	./kern/env.h	/^void	env_destroy(struct Env *e);	\/\/ Does not return if e == curenv$/;"	p	signature:(struct Env *e)
env_e1000_waiting_rx	./inc/env.h	/^	bool env_e1000_waiting_rx;$/;"	m	struct:Env	access:public
env_free	./kern/env.h	/^void	env_free(struct Env *e);$/;"	p	signature:(struct Env *e)
env_id	./inc/env.h	/^	envid_t env_id;			\/\/ Unique environment identifier$/;"	m	struct:Env	access:public
env_init	./kern/env.h	/^void	env_init(void);$/;"	p	signature:(void)
env_init_percpu	./kern/env.h	/^void	env_init_percpu(void);$/;"	p	signature:(void)
env_ipc_dstva	./inc/env.h	/^	void *env_ipc_dstva;		\/\/ VA at which to map received page$/;"	m	struct:Env	access:public
env_ipc_from	./inc/env.h	/^	envid_t env_ipc_from;		\/\/ envid of the sender$/;"	m	struct:Env	access:public
env_ipc_perm	./inc/env.h	/^	int env_ipc_perm;		\/\/ Perm of page mapping received$/;"	m	struct:Env	access:public
env_ipc_recving	./inc/env.h	/^	bool env_ipc_recving;		\/\/ Env is blocked receiving$/;"	m	struct:Env	access:public
env_ipc_value	./inc/env.h	/^	uint32_t env_ipc_value;		\/\/ Data value sent to us$/;"	m	struct:Env	access:public
env_link	./inc/env.h	/^	struct Env *env_link;		\/\/ Next free Env$/;"	m	struct:Env	typeref:struct:Env::Env	access:public
env_parent_id	./inc/env.h	/^	envid_t env_parent_id;		\/\/ env_id of this env's parent$/;"	m	struct:Env	access:public
env_pgdir	./inc/env.h	/^	pde_t *env_pgdir;		\/\/ Kernel virtual address of page dir$/;"	m	struct:Env	access:public
env_pgfault_upcall	./inc/env.h	/^	void *env_pgfault_upcall;	\/\/ Page fault upcall entry point$/;"	m	struct:Env	access:public
env_pop_tf	./kern/env.h	/^void	env_pop_tf(struct Trapframe *tf) __attribute__((noreturn));$/;"	p	signature:(struct Trapframe *tf)
env_run	./kern/env.h	/^void	env_run(struct Env *e) __attribute__((noreturn));$/;"	p	signature:(struct Env *e)
env_runs	./inc/env.h	/^	uint32_t env_runs;		\/\/ Number of times environment has run$/;"	m	struct:Env	access:public
env_status	./inc/env.h	/^	unsigned env_status;		\/\/ Status of the environment$/;"	m	struct:Env	access:public
env_tf	./inc/env.h	/^	struct Trapframe env_tf;	\/\/ Saved registers$/;"	m	struct:Env	typeref:struct:Env::Trapframe	access:public
env_type	./inc/env.h	/^	enum EnvType env_type;		\/\/ Indicates special system environments$/;"	m	struct:Env	typeref:enum:Env::EnvType	access:public
envid2env	./kern/env.h	/^int	envid2env(envid_t envid, struct Env **env_store, bool checkperm);$/;"	p	signature:(envid_t envid, struct Env **env_store, bool checkperm)
envid_t	./inc/env.h	/^typedef int32_t envid_t;$/;"	t
err	./net/lwip/include/lwip/api.h	/^  err_t err;$/;"	m	struct:netconn	access:public
err	./net/lwip/include/lwip/api_msg.h	/^  err_t *err;$/;"	m	struct:dns_api_msg	access:public
err	./net/lwip/include/lwip/netifapi.h	/^  err_t err;$/;"	m	struct:netifapi_msg_msg	access:public
err	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;              \/* Misc error. *\/$/;"	m	struct:stats_proto	access:public
err	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_mem	access:public
err	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_syselem	access:public
err_t	./net/lwip/include/lwip/err.h	/^ typedef s8_t err_t;$/;"	t
err_t	./net/lwip/include/lwip/err.h	/^typedef LWIP_ERR_T err_t;$/;"	t
errf	./net/lwip/include/lwip/tcp.h	/^  void (* errf)(void *arg, err_t err);$/;"	m	struct:tcp_pcb	access:public
erridxlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t erridxlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
erridxlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t erridxlenlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
error_index	./net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_index;$/;"	m	struct:snmp_msg_pstat	access:public
error_status	./net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_status;$/;"	m	struct:snmp_msg_pstat	access:public
errors	./kern/e1000.h	/^	uint8_t errors;      \/* Descriptor Errors *\/$/;"	m	struct:e1000_rx_desc	access:public
errstatlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t errstatlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
errstatlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t errstatlenlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
errtfunc	./net/lwip/include/lwip/netifapi.h	/^      err_t (* errtfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon31::__anon33	access:public
eth_addr	./net/lwip/include/netif/etharp.h	/^struct eth_addr {$/;"	s
eth_addr::PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(u8_t addr[ETHARP_HWADDR_LEN]);$/;"	p	struct:eth_addr	access:public	signature:(u8_t addr[ETHARP_HWADDR_LEN])
eth_addr_cmp	./net/lwip/include/netif/etharp.h	165;"	d
eth_hdr	./net/lwip/include/netif/etharp.h	/^struct eth_hdr {$/;"	s
eth_hdr::PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(struct eth_addr dest);$/;"	p	struct:eth_hdr	access:public	signature:(struct eth_addr dest)
eth_hdr::PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(struct eth_addr src);$/;"	p	struct:eth_hdr	access:public	signature:(struct eth_addr src)
eth_hdr::PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(u16_t type);$/;"	p	struct:eth_hdr	access:public	signature:(u16_t type)
eth_hdr::PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(u8_t padding[ETH_PAD_SIZE]);$/;"	p	struct:eth_hdr	access:public	signature:(u8_t padding[ETH_PAD_SIZE])
etharp	./net/lwip/include/lwip/stats.h	/^  struct stats_proto etharp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto	access:public
etharp_arp_input	./net/lwip/include/netif/etharp.h	/^void etharp_arp_input(struct netif *netif, struct eth_addr *ethaddr,$/;"	p	signature:(struct netif *netif, struct eth_addr *ethaddr, struct pbuf *p)
etharp_find_addr	./net/lwip/include/netif/etharp.h	/^s8_t etharp_find_addr(struct netif *netif, struct ip_addr *ipaddr,$/;"	p	signature:(struct netif *netif, struct ip_addr *ipaddr, struct eth_addr **eth_ret, struct ip_addr **ip_ret)
etharp_hdr	./net/lwip/include/netif/etharp.h	/^struct etharp_hdr {$/;"	s
etharp_hdr::PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(struct eth_addr dhwaddr);$/;"	p	struct:etharp_hdr	access:public	signature:(struct eth_addr dhwaddr)
etharp_hdr::PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(struct eth_addr shwaddr);$/;"	p	struct:etharp_hdr	access:public	signature:(struct eth_addr shwaddr)
etharp_hdr::PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(struct eth_hdr ethhdr);$/;"	p	struct:etharp_hdr	access:public	signature:(struct eth_hdr ethhdr)
etharp_hdr::PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(struct ip_addr2 dipaddr);$/;"	p	struct:etharp_hdr	access:public	signature:(struct ip_addr2 dipaddr)
etharp_hdr::PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(struct ip_addr2 sipaddr);$/;"	p	struct:etharp_hdr	access:public	signature:(struct ip_addr2 sipaddr)
etharp_hdr::PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(u16_t _hwlen_protolen);$/;"	p	struct:etharp_hdr	access:public	signature:(u16_t _hwlen_protolen)
etharp_hdr::PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(u16_t hwtype);$/;"	p	struct:etharp_hdr	access:public	signature:(u16_t hwtype)
etharp_hdr::PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(u16_t opcode);$/;"	p	struct:etharp_hdr	access:public	signature:(u16_t opcode)
etharp_hdr::PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(u16_t proto);$/;"	p	struct:etharp_hdr	access:public	signature:(u16_t proto)
etharp_init	./net/lwip/include/netif/etharp.h	144;"	d
etharp_ip_input	./net/lwip/include/netif/etharp.h	/^void etharp_ip_input(struct netif *netif, struct pbuf *p);$/;"	p	signature:(struct netif *netif, struct pbuf *p)
etharp_output	./net/lwip/include/netif/etharp.h	/^err_t etharp_output(struct netif *netif, struct pbuf *q, struct ip_addr *ipaddr);$/;"	p	signature:(struct netif *netif, struct pbuf *q, struct ip_addr *ipaddr)
etharp_q_entry	./net/lwip/include/netif/etharp.h	/^struct etharp_q_entry {$/;"	s
etharp_q_entry::next	./net/lwip/include/netif/etharp.h	/^  struct etharp_q_entry *next;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::etharp_q_entry	access:public
etharp_q_entry::p	./net/lwip/include/netif/etharp.h	/^  struct pbuf *p;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::pbuf	access:public
etharp_query	./net/lwip/include/netif/etharp.h	/^err_t etharp_query(struct netif *netif, struct ip_addr *ipaddr, struct pbuf *q);$/;"	p	signature:(struct netif *netif, struct ip_addr *ipaddr, struct pbuf *q)
etharp_raw	./net/lwip/include/netif/etharp.h	/^err_t etharp_raw(struct netif *netif, const struct eth_addr *ethsrc_addr,$/;"	p	signature:(struct netif *netif, const struct eth_addr *ethsrc_addr, const struct eth_addr *ethdst_addr, const struct eth_addr *hwsrc_addr, const struct ip_addr *ipsrc_addr, const struct eth_addr *hwdst_addr, const struct ip_addr *ipdst_addr, const u16_t opcode)
etharp_request	./net/lwip/include/netif/etharp.h	/^err_t etharp_request(struct netif *netif, struct ip_addr *ipaddr);$/;"	p	signature:(struct netif *netif, struct ip_addr *ipaddr)
etharp_tmr	./net/lwip/include/netif/etharp.h	/^void etharp_tmr(void);$/;"	p	signature:(void)
ethernet_input	./net/lwip/include/netif/etharp.h	/^err_t ethernet_input(struct pbuf *p, struct netif *netif);$/;"	p	signature:(struct pbuf *p, struct netif *netif)
ethip_hdr	./net/lwip/include/netif/etharp.h	/^struct ethip_hdr {$/;"	s
ethip_hdr::PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(struct eth_hdr eth);$/;"	p	struct:ethip_hdr	access:public	signature:(struct eth_hdr eth)
ethip_hdr::PACK_STRUCT_FIELD	./net/lwip/include/netif/etharp.h	/^  PACK_STRUCT_FIELD(struct ip_hdr ip);$/;"	p	struct:ethip_hdr	access:public	signature:(struct ip_hdr ip)
exit	./inc/lib.h	/^void	exit(void);$/;"	p	signature:(void)
explicit_remote	./net/lwip/netif/ppp/ppp.h	/^  u_int  explicit_remote   : 1;       \/* remote_name specified with remotename opt *\/$/;"	m	struct:ppp_settings	access:public
ext_accm	./net/lwip/netif/ppp/ppp.h	/^typedef u_char  ext_accm[32];$/;"	t
ext_mib_node	./net/lwip/include/lwip/snmp_msg.h	/^  struct mib_external_node *ext_mib_node;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::mib_external_node	access:public
ext_name_ptr	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_name_ptr ext_name_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_name_ptr	access:public
ext_object_def	./net/lwip/include/lwip/snmp_msg.h	/^  struct obj_def ext_object_def;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::obj_def	access:public
ext_oid	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id ext_oid;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_obj_id	access:public
extcode	./net/lwip/netif/ppp/fsm.h	/^  int  (*extcode)(fsm*, int, u_char, u_char*, int); \/* Called when unknown code received *\/$/;"	m	struct:fsm_callbacks	access:public
f	./net/lwip/include/lwip/tcpip.h	/^      void (*f)(void *ctx);$/;"	m	struct:tcpip_msg::__anon27::__anon29	access:public
f_direct	./inc/fs.h	/^	uint32_t f_direct[NDIRECT];	\/\/ direct blocks$/;"	m	struct:File	access:public
f_indirect	./inc/fs.h	/^	uint32_t f_indirect;		\/\/ indirect block$/;"	m	struct:File	access:public
f_name	./inc/fs.h	/^	char f_name[MAXNAMELEN];	\/\/ filename$/;"	m	struct:File	access:public
f_pad	./inc/fs.h	/^	uint8_t f_pad[256 - MAXNAMELEN - 8 - 4*NDIRECT - 4];$/;"	m	struct:File	access:public
f_size	./inc/fs.h	/^	off_t f_size;			\/\/ file size in bytes$/;"	m	struct:File	access:public
f_type	./inc/fs.h	/^	uint32_t f_type;		\/\/ file type$/;"	m	struct:File	access:public
false	./inc/types.h	/^enum { false, true };$/;"	e	enum:__anon5
fd2data	./inc/fd.h	/^char*	fd2data(struct Fd *fd);$/;"	p	signature:(struct Fd *fd)
fd2num	./inc/fd.h	/^int	fd2num(struct Fd *fd);$/;"	p	signature:(struct Fd *fd)
fd_alloc	./inc/fd.h	/^int	fd_alloc(struct Fd **fd_store);$/;"	p	signature:(struct Fd **fd_store)
fd_bits	./net/lwip/include/lwip/sockets.h	/^          unsigned char fd_bits [(FD_SETSIZE+7)\/8];$/;"	m	struct:fd_set	access:public
fd_close	./inc/fd.h	/^int	fd_close(struct Fd *fd, bool must_exist);$/;"	p	signature:(struct Fd *fd, bool must_exist)
fd_dev_id	./inc/fd.h	/^	int fd_dev_id;$/;"	m	struct:Fd	access:public
fd_file	./inc/fd.h	/^		struct FdFile fd_file;$/;"	m	union:Fd::__anon6	typeref:struct:Fd::__anon6::FdFile	access:public
fd_lookup	./inc/fd.h	/^int	fd_lookup(int fdnum, struct Fd **fd_store);$/;"	p	signature:(int fdnum, struct Fd **fd_store)
fd_offset	./inc/fd.h	/^	off_t fd_offset;$/;"	m	struct:Fd	access:public
fd_omode	./inc/fd.h	/^	int fd_omode;$/;"	m	struct:Fd	access:public
fd_set	./net/lwip/include/lwip/sockets.h	/^        } fd_set;$/;"	t	typeref:struct:fd_set
fd_set	./net/lwip/include/lwip/sockets.h	/^  typedef struct fd_set {$/;"	s
fd_set::fd_bits	./net/lwip/include/lwip/sockets.h	/^          unsigned char fd_bits [(FD_SETSIZE+7)\/8];$/;"	m	struct:fd_set	access:public
fd_sock	./inc/fd.h	/^		struct FdSock fd_sock;$/;"	m	union:Fd::__anon6	typeref:struct:Fd::__anon6::FdSock	access:public
file_create	./fs/fs.h	/^int	file_create(const char *path, struct File **f);$/;"	p	signature:(const char *path, struct File **f)
file_flush	./fs/fs.h	/^void	file_flush(struct File *f);$/;"	p	signature:(struct File *f)
file_get_block	./fs/fs.h	/^int	file_get_block(struct File *f, uint32_t file_blockno, char **pblk);$/;"	p	signature:(struct File *f, uint32_t file_blockno, char **pblk)
file_open	./fs/fs.h	/^int	file_open(const char *path, struct File **f);$/;"	p	signature:(const char *path, struct File **f)
file_read	./fs/fs.h	/^ssize_t	file_read(struct File *f, void *buf, size_t count, off_t offset);$/;"	p	signature:(struct File *f, void *buf, size_t count, off_t offset)
file_remove	./fs/fs.h	/^int	file_remove(const char *path);$/;"	p	signature:(const char *path)
file_set_size	./fs/fs.h	/^int	file_set_size(struct File *f, off_t newsize);$/;"	p	signature:(struct File *f, off_t newsize)
file_write	./fs/fs.h	/^int	file_write(struct File *f, const void *buf, size_t count, off_t offset);$/;"	p	signature:(struct File *f, const void *buf, size_t count, off_t offset)
finished	./net/lwip/netif/ppp/fsm.h	/^  void (*finished)(fsm*);                           \/* Called when we don't want the lower layer *\/$/;"	m	struct:fsm_callbacks	access:public
flags	./net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t flags;$/;"	m	struct:ip_reassdata	access:public
flags	./net/lwip/include/lwip/netif.h	/^  u8_t flags;$/;"	m	struct:netif	access:public
flags	./net/lwip/include/lwip/pbuf.h	/^  u8_t flags;$/;"	m	struct:pbuf	access:public
flags	./net/lwip/include/lwip/tcp.h	/^  u8_t flags;$/;"	m	struct:tcp_pcb	access:public
flags	./net/lwip/include/lwip/udp.h	/^  u8_t flags;$/;"	m	struct:udp_pcb	access:public
flags	./net/lwip/netif/ppp/fsm.h	/^  int flags;                       \/* Contains option bits *\/$/;"	m	struct:fsm	access:public
flags	./net/lwip/netif/ppp/vj.h	/^  u_short flags;$/;"	m	struct:vjcompress	access:public
flow1	./net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr	access:public
flow2	./net/lwip/include/ipv6/lwip/ip.h	/^  u16_t flow2;$/;"	m	struct:ip_hdr	access:public
flush	./inc/fs.h	/^	} flush;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_flush	access:public
flush_block	./fs/fs.h	/^void	flush_block(void *addr);$/;"	p	signature:(void *addr)
fork	./inc/lib.h	/^envid_t	fork(void);$/;"	p	signature:(void)
fprintf	./inc/stdio.h	/^int	fprintf(int fd, const char *fmt, ...);$/;"	p	signature:(int fd, const char *fmt, ...)
free	./inc/malloc.h	/^void free(void *addr);$/;"	p	signature:(void *addr)
freeaddrinfo	./net/lwip/include/lwip/netdb.h	104;"	d
fs_init	./fs/fs.h	/^void	fs_init(void);$/;"	p	signature:(void)
fs_sync	./fs/fs.h	/^void	fs_sync(void);$/;"	p	signature:(void)
fs_test	./fs/fs.h	/^void	fs_test(void);$/;"	p	signature:(void)
fsm	./net/lwip/netif/ppp/fsm.h	/^typedef struct fsm {$/;"	s
fsm	./net/lwip/netif/ppp/fsm.h	/^} fsm;$/;"	t	typeref:struct:fsm
fsm::callbacks	./net/lwip/netif/ppp/fsm.h	/^  struct fsm_callbacks* callbacks; \/* Callback routines *\/$/;"	m	struct:fsm	typeref:struct:fsm::fsm_callbacks	access:public
fsm::flags	./net/lwip/netif/ppp/fsm.h	/^  int flags;                       \/* Contains option bits *\/$/;"	m	struct:fsm	access:public
fsm::id	./net/lwip/netif/ppp/fsm.h	/^  u_char id;                       \/* Current id *\/$/;"	m	struct:fsm	access:public
fsm::maxconfreqtransmits	./net/lwip/netif/ppp/fsm.h	/^  int maxconfreqtransmits;         \/* Maximum Configure-Request transmissions *\/$/;"	m	struct:fsm	access:public
fsm::maxnakloops	./net/lwip/netif/ppp/fsm.h	/^  int maxnakloops;                 \/* Maximum number of nak loops tolerated *\/$/;"	m	struct:fsm	access:public
fsm::maxtermtransmits	./net/lwip/netif/ppp/fsm.h	/^  int maxtermtransmits;            \/* Maximum Terminate-Request transmissions *\/$/;"	m	struct:fsm	access:public
fsm::nakloops	./net/lwip/netif/ppp/fsm.h	/^  int nakloops;                    \/* Number of nak loops since last ack *\/$/;"	m	struct:fsm	access:public
fsm::protocol	./net/lwip/netif/ppp/fsm.h	/^  u_short protocol;                \/* Data Link Layer Protocol field value *\/$/;"	m	struct:fsm	access:public
fsm::reqid	./net/lwip/netif/ppp/fsm.h	/^  u_char reqid;                    \/* Current request id *\/$/;"	m	struct:fsm	access:public
fsm::retransmits	./net/lwip/netif/ppp/fsm.h	/^  int retransmits;                 \/* Number of retransmissions left *\/$/;"	m	struct:fsm	access:public
fsm::seen_ack	./net/lwip/netif/ppp/fsm.h	/^  u_char seen_ack;                 \/* Have received valid Ack\/Nak\/Rej to Req *\/$/;"	m	struct:fsm	access:public
fsm::state	./net/lwip/netif/ppp/fsm.h	/^  int state;                       \/* State *\/$/;"	m	struct:fsm	access:public
fsm::term_reason	./net/lwip/netif/ppp/fsm.h	/^  char* term_reason;               \/* Reason for closing protocol *\/$/;"	m	struct:fsm	access:public
fsm::term_reason_len	./net/lwip/netif/ppp/fsm.h	/^  int term_reason_len;             \/* Length of term_reason *\/$/;"	m	struct:fsm	access:public
fsm::timeouttime	./net/lwip/netif/ppp/fsm.h	/^  int timeouttime;                 \/* Timeout time in milliseconds *\/$/;"	m	struct:fsm	access:public
fsm::unit	./net/lwip/netif/ppp/fsm.h	/^  int unit;                        \/* Interface unit number *\/$/;"	m	struct:fsm	access:public
fsm_callbacks	./net/lwip/netif/ppp/fsm.h	/^typedef struct fsm_callbacks {$/;"	s
fsm_callbacks	./net/lwip/netif/ppp/fsm.h	/^} fsm_callbacks;$/;"	t	typeref:struct:fsm_callbacks
fsm_callbacks::ackci	./net/lwip/netif/ppp/fsm.h	/^  int  (*ackci)(fsm*, u_char*, int);                \/* ACK our Configuration Information *\/$/;"	m	struct:fsm_callbacks	access:public
fsm_callbacks::addci	./net/lwip/netif/ppp/fsm.h	/^  void (*addci)(fsm*, u_char*, int*);               \/* Add our Configuration Information *\/$/;"	m	struct:fsm_callbacks	access:public
fsm_callbacks::cilen	./net/lwip/netif/ppp/fsm.h	/^  int  (*cilen)(fsm*);                              \/* Length of our Configuration Information *\/$/;"	m	struct:fsm_callbacks	access:public
fsm_callbacks::down	./net/lwip/netif/ppp/fsm.h	/^  void (*down)(fsm*);                               \/* Called when fsm leaves LS_OPENED state *\/$/;"	m	struct:fsm_callbacks	access:public
fsm_callbacks::extcode	./net/lwip/netif/ppp/fsm.h	/^  int  (*extcode)(fsm*, int, u_char, u_char*, int); \/* Called when unknown code received *\/$/;"	m	struct:fsm_callbacks	access:public
fsm_callbacks::finished	./net/lwip/netif/ppp/fsm.h	/^  void (*finished)(fsm*);                           \/* Called when we don't want the lower layer *\/$/;"	m	struct:fsm_callbacks	access:public
fsm_callbacks::nakci	./net/lwip/netif/ppp/fsm.h	/^  int  (*nakci)(fsm*, u_char*, int);                \/* NAK our Configuration Information *\/$/;"	m	struct:fsm_callbacks	access:public
fsm_callbacks::proto_name	./net/lwip/netif/ppp/fsm.h	/^  char *proto_name;                                 \/* String name for protocol (for messages) *\/$/;"	m	struct:fsm_callbacks	access:public
fsm_callbacks::protreject	./net/lwip/netif/ppp/fsm.h	/^  void (*protreject)(int);                          \/* Called when Protocol-Reject received *\/$/;"	m	struct:fsm_callbacks	access:public
fsm_callbacks::rejci	./net/lwip/netif/ppp/fsm.h	/^  int  (*rejci)(fsm*, u_char*, int);                \/* Reject our Configuration Information *\/$/;"	m	struct:fsm_callbacks	access:public
fsm_callbacks::reqci	./net/lwip/netif/ppp/fsm.h	/^  int  (*reqci)(fsm*, u_char*, int*, int);          \/* Request peer's Configuration Information *\/$/;"	m	struct:fsm_callbacks	access:public
fsm_callbacks::resetci	./net/lwip/netif/ppp/fsm.h	/^  void (*resetci)(fsm*);                            \/* Reset our Configuration Information *\/$/;"	m	struct:fsm_callbacks	access:public
fsm_callbacks::retransmit	./net/lwip/netif/ppp/fsm.h	/^  void (*retransmit)(fsm*);                         \/* Retransmission is necessary *\/$/;"	m	struct:fsm_callbacks	access:public
fsm_callbacks::starting	./net/lwip/netif/ppp/fsm.h	/^  void (*starting)(fsm*);                           \/* Called when we want the lower layer *\/$/;"	m	struct:fsm_callbacks	access:public
fsm_callbacks::up	./net/lwip/netif/ppp/fsm.h	/^  void (*up)(fsm*);                                 \/* Called when fsm reaches LS_OPENED state *\/$/;"	m	struct:fsm_callbacks	access:public
fsm_close	./net/lwip/netif/ppp/fsm.h	/^void fsm_close (fsm*, char*);$/;"	p	signature:(fsm*, char*)
fsm_init	./net/lwip/netif/ppp/fsm.h	/^void fsm_init (fsm*);$/;"	p	signature:(fsm*)
fsm_input	./net/lwip/netif/ppp/fsm.h	/^void fsm_input (fsm*, u_char*, int);$/;"	p	signature:(fsm*, u_char*, int)
fsm_lowerdown	./net/lwip/netif/ppp/fsm.h	/^void fsm_lowerdown (fsm*);$/;"	p	signature:(fsm*)
fsm_lowerup	./net/lwip/netif/ppp/fsm.h	/^void fsm_lowerup (fsm*);$/;"	p	signature:(fsm*)
fsm_open	./net/lwip/netif/ppp/fsm.h	/^void fsm_open (fsm*);$/;"	p	signature:(fsm*)
fsm_protreject	./net/lwip/netif/ppp/fsm.h	/^void fsm_protreject (fsm*);$/;"	p	signature:(fsm*)
fsm_sdata	./net/lwip/netif/ppp/fsm.h	/^void fsm_sdata (fsm*, u_char, u_char, u_char*, int);$/;"	p	signature:(fsm*, u_char, u_char, u_char*, int)
fstat	./inc/lib.h	/^int	fstat(int fd, struct Stat *statbuf);$/;"	p	signature:(int fd, struct Stat *statbuf)
ftruncate	./inc/lib.h	/^int	ftruncate(int fd, off_t size);$/;"	p	signature:(int fd, off_t size)
func	./kern/pci.h	/^    uint32_t func;$/;"	m	struct:pci_func	access:public
function	./net/lwip/include/lwip/api_msg.h	/^  void (* function)(struct api_msg_msg *msg);$/;"	m	struct:api_msg	access:public
function	./net/lwip/include/lwip/netifapi.h	/^  void (* function)(struct netifapi_msg_msg *msg);$/;"	m	struct:netifapi_msg	access:public
fw	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER fw;               \/* Forwarded packets. *\/$/;"	m	struct:stats_proto	access:public
gd_args	./inc/mmu.h	/^	unsigned gd_args : 5;        \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:Gatedesc	access:public
gd_dpl	./inc/mmu.h	/^	unsigned gd_dpl : 2;         \/\/ descriptor(meaning new) privilege level$/;"	m	struct:Gatedesc	access:public
gd_off_15_0	./inc/mmu.h	/^	unsigned gd_off_15_0 : 16;   \/\/ low 16 bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_off_31_16	./inc/mmu.h	/^	unsigned gd_off_31_16 : 16;  \/\/ high bits of offset in segment$/;"	m	struct:Gatedesc	access:public
gd_p	./inc/mmu.h	/^	unsigned gd_p : 1;           \/\/ Present$/;"	m	struct:Gatedesc	access:public
gd_rsv1	./inc/mmu.h	/^	unsigned gd_rsv1 : 3;        \/\/ reserved(should be zero I guess)$/;"	m	struct:Gatedesc	access:public
gd_s	./inc/mmu.h	/^	unsigned gd_s : 1;           \/\/ must be 0 (system)$/;"	m	struct:Gatedesc	access:public
gd_sel	./inc/mmu.h	/^	unsigned gd_sel : 16;        \/\/ segment selector$/;"	m	struct:Gatedesc	access:public
gd_type	./inc/mmu.h	/^	unsigned gd_type : 4;        \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:Gatedesc	access:public
gen_trap	./net/lwip/include/lwip/snmp_msg.h	/^  u32_t gen_trap;$/;"	m	struct:snmp_msg_trap	access:public
get_idle_time	./net/lwip/netif/ppp/ppp.h	/^int  get_idle_time (int, struct ppp_idle *);$/;"	p	signature:(int, struct ppp_idle *)
get_object_def	./net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_array_node	access:public
get_object_def	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node	access:public
get_object_def	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_list_rootnode	access:public
get_object_def	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_node	access:public
get_object_def	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_ram_array_node	access:public
get_object_def_a	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_a)(u8_t rid, u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node	access:public
get_object_def_pc	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_pc)(u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node	access:public
get_object_def_q	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_q)(void* addr_inf, u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node	access:public
get_objid	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_objid)(void* addr_inf, u8_t level, u16_t idx, s32_t *sub_id);$/;"	m	struct:mib_external_node	access:public
get_secret	./net/lwip/netif/ppp/auth.h	/^int  get_secret (int, char *, char *, char *, int *, int);$/;"	p	signature:(int, char *, char *, char *, int *, int)
get_value	./net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node	access:public
get_value	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node	access:public
get_value	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode	access:public
get_value	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node	access:public
get_value	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node	access:public
get_value_a	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node	access:public
get_value_pc	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node	access:public
get_value_q	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node	access:public
getaddrinfo	./net/lwip/include/lwip/netdb.h	105;"	d
getchar	./inc/lib.h	/^int	getchar(void);$/;"	p	signature:(void)
getchar	./inc/stdio.h	/^int	getchar(void);$/;"	p	signature:(void)
gethostbyname	./net/lwip/include/lwip/netdb.h	101;"	d
gethostbyname_r	./net/lwip/include/lwip/netdb.h	102;"	d
getpeername	./net/lwip/include/lwip/sockets.h	332;"	d
getsockname	./net/lwip/include/lwip/sockets.h	331;"	d
getsockopt	./net/lwip/include/lwip/sockets.h	334;"	d
group_address	./net/lwip/include/ipv4/lwip/igmp.h	/^  struct ip_addr     group_address;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::ip_addr	access:public
group_query_rxed	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER group_query_rxed; \/* *\/$/;"	m	struct:stats_igmp	access:public
group_state	./net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               group_state;$/;"	m	struct:igmp_group	access:public
gtrplen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t gtrplen;$/;"	m	struct:snmp_trap_header_lengths	access:public
gtrplenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t gtrplenlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
gw	./net/lwip/include/lwip/netif.h	/^  struct ip_addr gw;$/;"	m	struct:netif	typeref:struct:netif::ip_addr	access:public
gw	./net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *gw;$/;"	m	struct:netifapi_msg_msg::__anon31::__anon32	typeref:struct:netifapi_msg_msg::__anon31::__anon32::ip_addr	access:public
h	./net/lwip/include/lwip/sys.h	/^  sys_timeout_handler h;$/;"	m	struct:sys_timeo	access:public
h	./net/lwip/include/lwip/tcpip.h	/^      sys_timeout_handler h;$/;"	m	struct:tcpip_msg::__anon27::__anon30	access:public
h_addr	./net/lwip/include/lwip/netdb.h	71;"	d
h_addr_list	./net/lwip/include/lwip/netdb.h	/^    char **h_addr_list; \/* A pointer to an array of pointers to network addresses (in$/;"	m	struct:hostent	access:public
h_addrtype	./net/lwip/include/lwip/netdb.h	/^    int    h_addrtype;  \/* Address type. *\/$/;"	m	struct:hostent	access:public
h_aliases	./net/lwip/include/lwip/netdb.h	/^    char **h_aliases;   \/* A pointer to an array of pointers to alternative host names,$/;"	m	struct:hostent	access:public
h_length	./net/lwip/include/lwip/netdb.h	/^    int    h_length;    \/* The length, in bytes, of the address. *\/$/;"	m	struct:hostent	access:public
h_name	./net/lwip/include/lwip/netdb.h	/^    char  *h_name;      \/* Official name of the host. *\/$/;"	m	struct:hostent	access:public
head	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *head;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind	access:public
head	./net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *head;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node	access:public
his_ipaddr	./net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::	access:public
hisaddr	./net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options	access:public
hoplim	./net/lwip/include/ipv6/lwip/ip.h	/^  u8_t hoplim;              \/* hop limit (TTL) *\/$/;"	m	struct:ip_hdr	access:public
hostent	./net/lwip/include/lwip/netdb.h	/^struct hostent {$/;"	s
hostent::h_addr_list	./net/lwip/include/lwip/netdb.h	/^    char **h_addr_list; \/* A pointer to an array of pointers to network addresses (in$/;"	m	struct:hostent	access:public
hostent::h_addrtype	./net/lwip/include/lwip/netdb.h	/^    int    h_addrtype;  \/* Address type. *\/$/;"	m	struct:hostent	access:public
hostent::h_aliases	./net/lwip/include/lwip/netdb.h	/^    char **h_aliases;   \/* A pointer to an array of pointers to alternative host names,$/;"	m	struct:hostent	access:public
hostent::h_length	./net/lwip/include/lwip/netdb.h	/^    int    h_length;    \/* The length, in bytes, of the address. *\/$/;"	m	struct:hostent	access:public
hostent::h_name	./net/lwip/include/lwip/netdb.h	/^    char  *h_name;      \/* Official name of the host. *\/$/;"	m	struct:hostent	access:public
hostname	./net/lwip/include/lwip/netif.h	/^  char*  hostname;$/;"	m	struct:netif	access:public
htonl	./net/lwip/include/ipv4/lwip/inet.h	/^u32_t htonl(u32_t x);$/;"	p	signature:(u32_t x)
htonl	./net/lwip/include/ipv4/lwip/inet.h	56;"	d
htonl	./net/lwip/include/ipv4/lwip/inet.h	72;"	d
htonl	./net/lwip/include/ipv4/lwip/inet.h	79;"	d
htonl	./net/lwip/include/ipv4/lwip/inet.h	85;"	d
htonl	./net/lwip/include/ipv6/lwip/inet.h	/^u32_t htonl(u32_t n);$/;"	p	signature:(u32_t n)
htons	./net/lwip/include/ipv4/lwip/inet.h	/^u16_t htons(u16_t x);$/;"	p	signature:(u16_t x)
htons	./net/lwip/include/ipv4/lwip/inet.h	53;"	d
htons	./net/lwip/include/ipv4/lwip/inet.h	70;"	d
htons	./net/lwip/include/ipv4/lwip/inet.h	77;"	d
htons	./net/lwip/include/ipv4/lwip/inet.h	83;"	d
htons	./net/lwip/include/ipv6/lwip/inet.h	/^u16_t htons(u16_t n);$/;"	p	signature:(u16_t n)
hwaddr	./net/lwip/include/lwip/netif.h	/^  u8_t hwaddr[NETIF_MAX_HWADDR_LEN];$/;"	m	struct:netif	access:public
hwaddr_len	./net/lwip/include/lwip/netif.h	/^  u8_t hwaddr_len;$/;"	m	struct:netif	access:public
i	./net/lwip/netif/ppp/md5.h	/^  u32_t i[2];               \/* number of _bits_ handled mod 2^64 *\/$/;"	m	struct:__anon13	access:public
icmp	./net/lwip/include/lwip/stats.h	/^  struct stats_proto icmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto	access:public
icmp_dest_unreach	./net/lwip/include/ipv4/lwip/icmp.h	/^void icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t);$/;"	p	signature:(struct pbuf *p, enum icmp_dur_type t)
icmp_dest_unreach	./net/lwip/include/ipv6/lwip/icmp.h	/^void icmp_dest_unreach(struct pbuf *p, enum icmp_dur_type t);$/;"	p	signature:(struct pbuf *p, enum icmp_dur_type t)
icmp_dur_hdr	./net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_hdr	./net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_dur_hdr {$/;"	s
icmp_dur_hdr::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/icmp.h	/^  PACK_STRUCT_FIELD(u16_t _type_code);$/;"	p	struct:icmp_dur_hdr	access:public	signature:(u16_t _type_code)
icmp_dur_hdr::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/icmp.h	/^  PACK_STRUCT_FIELD(u16_t chksum);$/;"	p	struct:icmp_dur_hdr	access:public	signature:(u16_t chksum)
icmp_dur_hdr::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/icmp.h	/^  PACK_STRUCT_FIELD(u32_t unused);$/;"	p	struct:icmp_dur_hdr	access:public	signature:(u32_t unused)
icmp_dur_hdr::chksum	./net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_dur_hdr	access:public
icmp_dur_hdr::icode	./net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_dur_hdr	access:public
icmp_dur_hdr::type	./net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_dur_hdr	access:public
icmp_dur_hdr::unused	./net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_dur_hdr	access:public
icmp_dur_type	./net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_dur_type	./net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_dur_type {$/;"	g
icmp_echo_hdr	./net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_echo_hdr	./net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_echo_hdr {$/;"	s
icmp_echo_hdr::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/icmp.h	/^  PACK_STRUCT_FIELD(u16_t _type_code);$/;"	p	struct:icmp_echo_hdr	access:public	signature:(u16_t _type_code)
icmp_echo_hdr::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/icmp.h	/^  PACK_STRUCT_FIELD(u16_t chksum);$/;"	p	struct:icmp_echo_hdr	access:public	signature:(u16_t chksum)
icmp_echo_hdr::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/icmp.h	/^  PACK_STRUCT_FIELD(u16_t id);$/;"	p	struct:icmp_echo_hdr	access:public	signature:(u16_t id)
icmp_echo_hdr::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/icmp.h	/^  PACK_STRUCT_FIELD(u16_t seqno);$/;"	p	struct:icmp_echo_hdr	access:public	signature:(u16_t seqno)
icmp_echo_hdr::chksum	./net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_echo_hdr	access:public
icmp_echo_hdr::icode	./net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_echo_hdr	access:public
icmp_echo_hdr::id	./net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t id;$/;"	m	struct:icmp_echo_hdr	access:public
icmp_echo_hdr::seqno	./net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t seqno;$/;"	m	struct:icmp_echo_hdr	access:public
icmp_echo_hdr::type	./net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_echo_hdr	access:public
icmp_input	./net/lwip/include/ipv4/lwip/icmp.h	/^void icmp_input(struct pbuf *p, struct netif *inp);$/;"	p	signature:(struct pbuf *p, struct netif *inp)
icmp_input	./net/lwip/include/ipv6/lwip/icmp.h	/^void icmp_input(struct pbuf *p, struct netif *inp);$/;"	p	signature:(struct pbuf *p, struct netif *inp)
icmp_te_hdr	./net/lwip/include/ipv4/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_hdr	./net/lwip/include/ipv6/lwip/icmp.h	/^struct icmp_te_hdr {$/;"	s
icmp_te_hdr::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/icmp.h	/^  PACK_STRUCT_FIELD(u16_t _type_code);$/;"	p	struct:icmp_te_hdr	access:public	signature:(u16_t _type_code)
icmp_te_hdr::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/icmp.h	/^  PACK_STRUCT_FIELD(u16_t chksum);$/;"	p	struct:icmp_te_hdr	access:public	signature:(u16_t chksum)
icmp_te_hdr::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/icmp.h	/^  PACK_STRUCT_FIELD(u32_t unused);$/;"	p	struct:icmp_te_hdr	access:public	signature:(u32_t unused)
icmp_te_hdr::chksum	./net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t chksum;$/;"	m	struct:icmp_te_hdr	access:public
icmp_te_hdr::icode	./net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_te_hdr	access:public
icmp_te_hdr::type	./net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_te_hdr	access:public
icmp_te_hdr::unused	./net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_te_hdr	access:public
icmp_te_type	./net/lwip/include/ipv4/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_te_type	./net/lwip/include/ipv6/lwip/icmp.h	/^enum icmp_te_type {$/;"	g
icmp_time_exceeded	./net/lwip/include/ipv4/lwip/icmp.h	/^void icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t);$/;"	p	signature:(struct pbuf *p, enum icmp_te_type t)
icmp_time_exceeded	./net/lwip/include/ipv6/lwip/icmp.h	/^void icmp_time_exceeded(struct pbuf *p, enum icmp_te_type t);$/;"	p	signature:(struct pbuf *p, enum icmp_te_type t)
icode	./net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_dur_hdr	access:public
icode	./net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_echo_hdr	access:public
icode	./net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t icode;$/;"	m	struct:icmp_te_hdr	access:public
id	./inc/fd.h	/^	int id;$/;"	m	struct:FdFile	access:public
id	./net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t id;$/;"	m	struct:icmp_echo_hdr	access:public
id	./net/lwip/include/lwip/snmp.h	/^  s32_t id[LWIP_SNMP_OBJ_ID_LEN];$/;"	m	struct:snmp_obj_id	access:public
id	./net/lwip/netif/ppp/chap.h	/^  u_char id;                              \/* Current id *\/$/;"	m	struct:chap_state	access:public
id	./net/lwip/netif/ppp/fsm.h	/^  u_char id;                       \/* Current id *\/$/;"	m	struct:fsm	access:public
id_inst_len	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t  id_inst_len;$/;"	m	struct:obj_def	access:public
id_inst_ptr	./net/lwip/include/lwip/snmp_structs.h	/^  s32_t *id_inst_ptr;$/;"	m	struct:obj_def	access:public
ide_probe_disk1	./fs/fs.h	/^bool	ide_probe_disk1(void);$/;"	p	signature:(void)
ide_read	./fs/fs.h	/^int	ide_read(uint32_t secno, void *dst, size_t nsecs);$/;"	p	signature:(uint32_t secno, void *dst, size_t nsecs)
ide_set_disk	./fs/fs.h	/^void	ide_set_disk(int diskno);$/;"	p	signature:(int diskno)
ide_set_partition	./fs/fs.h	/^void	ide_set_partition(uint32_t first_sect, uint32_t nsect);$/;"	p	signature:(uint32_t first_sect, uint32_t nsect)
ide_write	./fs/fs.h	/^int	ide_write(uint32_t secno, const void *src, size_t nsecs);$/;"	p	signature:(uint32_t secno, const void *src, size_t nsecs)
ident	./net/lwip/include/lwip/snmp_msg.h	/^  s32_t *ident;$/;"	m	struct:snmp_varbind	access:public
ident	./net/lwip/include/lwip/snmp_structs.h	/^  s32_t *ident;$/;"	m	struct:snmp_name_ptr	access:public
ident_cmp	./net/lwip/include/lwip/snmp_structs.h	/^  s32_t (*ident_cmp)(void* addr_inf, u8_t level, u16_t idx, s32_t sub_id);$/;"	m	struct:mib_external_node	access:public
ident_len	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t ident_len;$/;"	m	struct:snmp_varbind	access:public
ident_len	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t ident_len;$/;"	m	struct:snmp_name_ptr	access:public
idle_time_limit	./net/lwip/netif/ppp/ppp.h	/^  u_short idle_time_limit;            \/* Shut down link if idle for this long *\/$/;"	m	struct:ppp_settings	access:public
ifindiscards	./net/lwip/include/lwip/netif.h	/^  u32_t ifindiscards;$/;"	m	struct:netif	access:public
ifinnucastpkts	./net/lwip/include/lwip/netif.h	/^  u32_t ifinnucastpkts;$/;"	m	struct:netif	access:public
ifinoctets	./net/lwip/include/lwip/netif.h	/^  u32_t ifinoctets;$/;"	m	struct:netif	access:public
ifinucastpkts	./net/lwip/include/lwip/netif.h	/^  u32_t ifinucastpkts;$/;"	m	struct:netif	access:public
ifoutdiscards	./net/lwip/include/lwip/netif.h	/^  u32_t ifoutdiscards;$/;"	m	struct:netif	access:public
ifoutnucastpkts	./net/lwip/include/lwip/netif.h	/^  u32_t ifoutnucastpkts;$/;"	m	struct:netif	access:public
ifoutoctets	./net/lwip/include/lwip/netif.h	/^  u32_t ifoutoctets;$/;"	m	struct:netif	access:public
ifoutucastpkts	./net/lwip/include/lwip/netif.h	/^  u32_t ifoutucastpkts;$/;"	m	struct:netif	access:public
igmp	./net/lwip/include/lwip/stats.h	/^  struct stats_igmp igmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_igmp	access:public
igmp_delaying_member	./net/lwip/include/ipv4/lwip/igmp.h	/^void   igmp_delaying_member( struct igmp_group *group, u8_t maxresp);$/;"	p	signature:( struct igmp_group *group, u8_t maxresp)
igmp_group	./net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_group {$/;"	s
igmp_group::group_address	./net/lwip/include/ipv4/lwip/igmp.h	/^  struct ip_addr     group_address;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::ip_addr	access:public
igmp_group::group_state	./net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               group_state;$/;"	m	struct:igmp_group	access:public
igmp_group::interface	./net/lwip/include/ipv4/lwip/igmp.h	/^  struct netif      *interface;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::netif	access:public
igmp_group::last_reporter_flag	./net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               last_reporter_flag; \/* signifies we were the last person to report *\/$/;"	m	struct:igmp_group	access:public
igmp_group::next	./net/lwip/include/ipv4/lwip/igmp.h	/^  struct igmp_group *next;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::igmp_group	access:public
igmp_group::timer	./net/lwip/include/ipv4/lwip/igmp.h	/^  u16_t              timer;$/;"	m	struct:igmp_group	access:public
igmp_group::use	./net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               use; \/* counter of simultaneous uses *\/$/;"	m	struct:igmp_group	access:public
igmp_init	./net/lwip/include/ipv4/lwip/igmp.h	/^void   igmp_init(void);$/;"	p	signature:(void)
igmp_input	./net/lwip/include/ipv4/lwip/igmp.h	/^void   igmp_input( struct pbuf *p, struct netif *inp, struct ip_addr *dest);$/;"	p	signature:( struct pbuf *p, struct netif *inp, struct ip_addr *dest)
igmp_ip_output_if	./net/lwip/include/ipv4/lwip/igmp.h	/^err_t  igmp_ip_output_if( struct pbuf *p, struct ip_addr *src, struct ip_addr *dest, u8_t ttl, u8_t proto, struct netif *netif);$/;"	p	signature:( struct pbuf *p, struct ip_addr *src, struct ip_addr *dest, u8_t ttl, u8_t proto, struct netif *netif)
igmp_joingroup	./net/lwip/include/ipv4/lwip/igmp.h	/^err_t  igmp_joingroup( struct ip_addr *ifaddr, struct ip_addr *groupaddr);$/;"	p	signature:( struct ip_addr *ifaddr, struct ip_addr *groupaddr)
igmp_leavegroup	./net/lwip/include/ipv4/lwip/igmp.h	/^err_t  igmp_leavegroup( struct ip_addr *ifaddr, struct ip_addr *groupaddr);$/;"	p	signature:( struct ip_addr *ifaddr, struct ip_addr *groupaddr)
igmp_lookfor_group	./net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_group *igmp_lookfor_group( struct netif *ifp, struct ip_addr *addr);$/;"	p	signature:( struct netif *ifp, struct ip_addr *addr)
igmp_lookup_group	./net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_group *igmp_lookup_group( struct netif *ifp, struct ip_addr *addr);$/;"	p	signature:( struct netif *ifp, struct ip_addr *addr)
igmp_mac_filter	./net/lwip/include/lwip/netif.h	/^  err_t (*igmp_mac_filter)( struct netif *netif, struct ip_addr *group, u8_t action);$/;"	m	struct:netif	access:public
igmp_msg	./net/lwip/include/ipv4/lwip/igmp.h	/^struct igmp_msg {$/;"	s
igmp_msg::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/igmp.h	/^ PACK_STRUCT_FIELD(struct ip_addr igmp_group_address);$/;"	p	struct:igmp_msg	access:public	signature:(struct ip_addr igmp_group_address)
igmp_msg::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/igmp.h	/^ PACK_STRUCT_FIELD(u16_t          igmp_checksum);$/;"	p	struct:igmp_msg	access:public	signature:(u16_t igmp_checksum)
igmp_msg::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/igmp.h	/^ PACK_STRUCT_FIELD(u8_t           igmp_maxresp);$/;"	p	struct:igmp_msg	access:public	signature:(u8_t igmp_maxresp)
igmp_msg::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/igmp.h	/^ PACK_STRUCT_FIELD(u8_t           igmp_msgtype);$/;"	p	struct:igmp_msg	access:public	signature:(u8_t igmp_msgtype)
igmp_remove_group	./net/lwip/include/ipv4/lwip/igmp.h	/^err_t  igmp_remove_group( struct igmp_group *group);$/;"	p	signature:( struct igmp_group *group)
igmp_report_groups	./net/lwip/include/ipv4/lwip/igmp.h	/^void   igmp_report_groups( struct netif *netif);$/;"	p	signature:( struct netif *netif)
igmp_send	./net/lwip/include/ipv4/lwip/igmp.h	/^void   igmp_send( struct igmp_group *group, u8_t type);$/;"	p	signature:( struct igmp_group *group, u8_t type)
igmp_start	./net/lwip/include/ipv4/lwip/igmp.h	/^err_t  igmp_start( struct netif *netif);$/;"	p	signature:( struct netif *netif)
igmp_start_timer	./net/lwip/include/ipv4/lwip/igmp.h	/^void   igmp_start_timer( struct igmp_group *group, u8_t max_time);$/;"	p	signature:( struct igmp_group *group, u8_t max_time)
igmp_stop	./net/lwip/include/ipv4/lwip/igmp.h	/^err_t  igmp_stop( struct netif *netif);$/;"	p	signature:( struct netif *netif)
igmp_stop_timer	./net/lwip/include/ipv4/lwip/igmp.h	/^void   igmp_stop_timer( struct igmp_group *group);$/;"	p	signature:( struct igmp_group *group)
igmp_timeout	./net/lwip/include/ipv4/lwip/igmp.h	/^void   igmp_timeout( struct igmp_group *group);$/;"	p	signature:( struct igmp_group *group)
igmp_tmr	./net/lwip/include/ipv4/lwip/igmp.h	/^void   igmp_tmr(void);$/;"	p	signature:(void)
illegal	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER illegal;$/;"	m	struct:stats_mem	access:public
imr_interface	./net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_interface; \/* local IP address of interface *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr	access:public
imr_multiaddr	./net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_multiaddr; \/* IP multicast address of group *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr	access:public
in	./net/lwip/netif/ppp/md5.h	/^  unsigned char in[64];     \/* input buffer *\/$/;"	m	struct:__anon13	access:public
in_addr	./net/lwip/include/ipv4/lwip/inet.h	/^struct in_addr {$/;"	s
in_addr::s_addr	./net/lwip/include/ipv4/lwip/inet.h	/^  u32_t s_addr;$/;"	m	struct:in_addr	access:public
inb	./inc/x86.h	/^inb(int port)$/;"	f	signature:(int port)
inb	./inc/x86.h	/^static __inline uint8_t inb(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
inet_addr	./net/lwip/include/ipv4/lwip/inet.h	/^u32_t inet_addr(const char *cp);$/;"	p	signature:(const char *cp)
inet_addr	./net/lwip/include/ipv6/lwip/inet.h	/^u32_t inet_addr(const char *cp);$/;"	p	signature:(const char *cp)
inet_aton	./net/lwip/include/ipv4/lwip/inet.h	/^int inet_aton(const char *cp, struct in_addr *addr);$/;"	p	signature:(const char *cp, struct in_addr *addr)
inet_aton	./net/lwip/include/ipv6/lwip/inet.h	/^s8_t inet_aton(const char *cp, struct in_addr *addr);$/;"	p	signature:(const char *cp, struct in_addr *addr)
inet_chksum	./net/lwip/include/ipv4/lwip/inet_chksum.h	/^u16_t inet_chksum(void *dataptr, u16_t len);$/;"	p	signature:(void *dataptr, u16_t len)
inet_chksum	./net/lwip/include/ipv6/lwip/inet.h	/^u16_t inet_chksum(void *data, u16_t len);$/;"	p	signature:(void *data, u16_t len)
inet_chksum_pbuf	./net/lwip/include/ipv4/lwip/inet_chksum.h	/^u16_t inet_chksum_pbuf(struct pbuf *p);$/;"	p	signature:(struct pbuf *p)
inet_chksum_pbuf	./net/lwip/include/ipv6/lwip/inet.h	/^u16_t inet_chksum_pbuf(struct pbuf *p);$/;"	p	signature:(struct pbuf *p)
inet_chksum_pseudo	./net/lwip/include/ipv4/lwip/inet_chksum.h	/^u16_t inet_chksum_pseudo(struct pbuf *p,$/;"	p	signature:(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest, u8_t proto, u16_t proto_len)
inet_chksum_pseudo	./net/lwip/include/ipv6/lwip/inet.h	/^u16_t inet_chksum_pseudo(struct pbuf *p,$/;"	p	signature:(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest, u8_t proto, u32_t proto_len)
inet_chksum_pseudo_partial	./net/lwip/include/ipv4/lwip/inet_chksum.h	/^u16_t inet_chksum_pseudo_partial(struct pbuf *p,$/;"	p	signature:(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest, u8_t proto, u16_t proto_len, u16_t chksum_len)
inet_ntoa	./net/lwip/include/ipv4/lwip/inet.h	/^char *inet_ntoa(struct in_addr addr); \/* returns ptr to static buffer; not reentrant! *\/$/;"	p	signature:(struct in_addr addr)
init	./net/lwip/include/lwip/netifapi.h	/^      err_t (* init) (struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon31::__anon32	access:public
init	./net/lwip/netif/ppp/ppp.h	/^    void (*init) (int unit);$/;"	m	struct:protent	access:public
inl	./inc/x86.h	/^inl(int port)$/;"	f	signature:(int port)
inl	./inc/x86.h	/^static __inline uint32_t inl(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
inp	./net/lwip/include/lwip/tcpip.h	/^    } inp;$/;"	m	union:tcpip_msg::__anon27	typeref:struct:tcpip_msg::__anon27::__anon28	access:public
input	./net/lwip/include/lwip/netif.h	/^  err_t (* input)(struct pbuf *p, struct netif *inp);$/;"	m	struct:netif	access:public
input	./net/lwip/include/lwip/netifapi.h	/^      err_t (* input)(struct pbuf *p, struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon31::__anon32	access:public
input	./net/lwip/netif/ppp/ppp.h	/^    void (*input) (int unit, u_char *pkt, int len);$/;"	m	struct:protent	access:public
input	./net/ns.h	/^void input(envid_t ns_envid);$/;"	p	signature:(envid_t ns_envid)
insb	./inc/x86.h	/^insb(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insb	./inc/x86.h	/^static __inline void insb(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
insl	./inc/x86.h	/^insl(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insl	./inc/x86.h	/^static __inline void insl(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
instance	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t instance;$/;"	m	struct:obj_def	access:public
insw	./inc/x86.h	/^insw(int port, void *addr, int cnt)$/;"	f	signature:(int port, void *addr, int cnt)
insw	./inc/x86.h	/^static __inline void insw(int port, void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, void *addr, int cnt)
int16_t	./inc/types.h	/^typedef short int16_t;$/;"	t
int32_t	./inc/types.h	/^typedef int int32_t;$/;"	t
int64_t	./inc/types.h	/^typedef long long int64_t;$/;"	t
int8_t	./inc/types.h	/^typedef __signed char int8_t;$/;"	t
interface	./net/lwip/include/ipv4/lwip/igmp.h	/^  struct netif      *interface;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::netif	access:public
interface	./net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *interface;$/;"	m	struct:api_msg_msg::__anon17::__anon23	typeref:struct:api_msg_msg::__anon17::__anon23::ip_addr	access:public
intptr_t	./inc/types.h	/^typedef int32_t intptr_t;$/;"	t
invb	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root invb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root	access:public
invlpg	./inc/x86.h	/^invlpg(void *addr)$/;"	f	signature:(void *addr)
invlpg	./inc/x86.h	/^static __inline void invlpg(void *addr) __attribute__((always_inline));$/;"	p	signature:(void *addr)
inw	./inc/x86.h	/^inw(int port)$/;"	f	signature:(int port)
inw	./inc/x86.h	/^static __inline uint16_t inw(int port) __attribute__((always_inline));$/;"	p	signature:(int port)
ioctlsocket	./net/lwip/include/lwip/sockets.h	342;"	d
ip	./net/lwip/include/lwip/api.h	/^    struct ip_pcb  *ip;$/;"	m	union:netconn::__anon34	typeref:struct:netconn::__anon34::ip_pcb	access:public
ip	./net/lwip/include/lwip/stats.h	/^  struct stats_proto ip;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto	access:public
ip	./net/lwip/netif/ppp/vjbsdhdr.h	/^struct ip$/;"	s
ip4_addr1	./net/lwip/include/ipv4/lwip/ip_addr.h	156;"	d
ip4_addr2	./net/lwip/include/ipv4/lwip/ip_addr.h	157;"	d
ip4_addr3	./net/lwip/include/ipv4/lwip/ip_addr.h	158;"	d
ip4_addr4	./net/lwip/include/ipv4/lwip/ip_addr.h	159;"	d
ip::ip_dst	./net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::	access:public
ip::ip_hl_v	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   ip_hl_v;  \/* bug in GCC for mips means the bitfield stuff will sometimes break - so we use a char for both and get round it with macro's instead... *\/$/;"	m	struct:ip	access:public
ip::ip_id	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_id;                 \/* identification *\/$/;"	m	struct:ip	access:public
ip::ip_len	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_len;                \/* total length *\/$/;"	m	struct:ip	access:public
ip::ip_off	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_off;                \/* fragment offset field *\/$/;"	m	struct:ip	access:public
ip::ip_p	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_p;                  \/* protocol *\/$/;"	m	struct:ip	access:public
ip::ip_src	./net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::in_addr	access:public
ip::ip_sum	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_sum;                \/* checksum *\/$/;"	m	struct:ip	access:public
ip::ip_tos	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_tos;                \/* type of service *\/$/;"	m	struct:ip	access:public
ip::ip_ttl	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_ttl;                \/* time to live *\/$/;"	m	struct:ip	access:public
ip_addr	./net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr {$/;"	s
ip_addr	./net/lwip/include/ipv6/lwip/ip_addr.h	/^ struct ip_addr {$/;"	s
ip_addr	./net/lwip/include/lwip/netif.h	/^  struct ip_addr ip_addr;$/;"	m	struct:netif	typeref:struct:netif::ip_addr	access:public
ip_addr2	./net/lwip/include/ipv4/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr2	./net/lwip/include/ipv6/lwip/ip_addr.h	/^struct ip_addr2 {$/;"	s
ip_addr2::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/ip_addr.h	/^  PACK_STRUCT_FIELD(u16_t addrw[2]);$/;"	p	struct:ip_addr2	access:public	signature:(u16_t addrw[2])
ip_addr2::PACK_STRUCT_FIELD	./net/lwip/include/ipv6/lwip/ip_addr.h	/^  PACK_STRUCT_FIELD(u16_t addrw[2]);$/;"	p	struct:ip_addr2	access:public	signature:(u16_t addrw[2])
ip_addr::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/ip_addr.h	/^  PACK_STRUCT_FIELD(u32_t addr);$/;"	p	struct:ip_addr	access:public	signature:(u32_t addr)
ip_addr::PACK_STRUCT_FIELD	./net/lwip/include/ipv6/lwip/ip_addr.h	/^  PACK_STRUCT_FIELD(u32_t addr[4]);$/;"	p	struct:ip_addr	access:public	signature:(u32_t addr[4])
ip_addr_cmp	./net/lwip/include/ipv4/lwip/ip_addr.h	137;"	d
ip_addr_cmp	./net/lwip/include/ipv6/lwip/ip_addr.h	/^u8_t ip_addr_cmp(struct ip_addr *addr1, struct ip_addr *addr2);$/;"	p	signature:(struct ip_addr *addr1, struct ip_addr *addr2)
ip_addr_debug_print	./net/lwip/include/ipv4/lwip/ip_addr.h	147;"	d
ip_addr_debug_print	./net/lwip/include/ipv6/lwip/ip_addr.h	82;"	d
ip_addr_isany	./net/lwip/include/ipv4/lwip/ip_addr.h	139;"	d
ip_addr_isany	./net/lwip/include/ipv6/lwip/ip_addr.h	/^u8_t ip_addr_isany(struct ip_addr *addr);$/;"	p	signature:(struct ip_addr *addr)
ip_addr_isbroadcast	./net/lwip/include/ipv4/lwip/ip_addr.h	/^u8_t ip_addr_isbroadcast(struct ip_addr *, struct netif *);$/;"	p	signature:(struct ip_addr *, struct netif *)
ip_addr_islinklocal	./net/lwip/include/ipv4/lwip/ip_addr.h	145;"	d
ip_addr_ismulticast	./net/lwip/include/ipv4/lwip/ip_addr.h	143;"	d
ip_addr_netcmp	./net/lwip/include/ipv4/lwip/ip_addr.h	133;"	d
ip_addr_netcmp	./net/lwip/include/ipv6/lwip/ip_addr.h	/^u8_t ip_addr_netcmp(struct ip_addr *addr1, struct ip_addr *addr2,$/;"	p	signature:(struct ip_addr *addr1, struct ip_addr *addr2, struct ip_addr *mask)
ip_addr_set	./net/lwip/include/ipv4/lwip/ip_addr.h	122;"	d
ip_addr_set	./net/lwip/include/ipv6/lwip/ip_addr.h	/^void ip_addr_set(struct ip_addr *dest, struct ip_addr *src);$/;"	p	signature:(struct ip_addr *dest, struct ip_addr *src)
ip_debug_print	./net/lwip/include/ipv4/lwip/ip.h	/^void ip_debug_print(struct pbuf *p);$/;"	p	signature:(struct pbuf *p)
ip_debug_print	./net/lwip/include/ipv6/lwip/ip.h	/^void ip_debug_print(struct pbuf *p);$/;"	p	signature:(struct pbuf *p)
ip_dst	./net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::	access:public
ip_frag	./net/lwip/include/ipv4/lwip/ip_frag.h	/^err_t ip_frag(struct pbuf *p, struct netif *netif, struct ip_addr *dest);$/;"	p	signature:(struct pbuf *p, struct netif *netif, struct ip_addr *dest)
ip_frag	./net/lwip/include/lwip/stats.h	/^  struct stats_proto ip_frag;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto	access:public
ip_hdr	./net/lwip/include/ipv4/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hdr	./net/lwip/include/ipv6/lwip/ip.h	/^struct ip_hdr {$/;"	s
ip_hdr::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/ip.h	/^  PACK_STRUCT_FIELD(struct ip_addr dest); $/;"	p	struct:ip_hdr	access:public	signature:(struct ip_addr dest)
ip_hdr::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/ip.h	/^  PACK_STRUCT_FIELD(struct ip_addr src);$/;"	p	struct:ip_hdr	access:public	signature:(struct ip_addr src)
ip_hdr::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/ip.h	/^  PACK_STRUCT_FIELD(u16_t _chksum);$/;"	p	struct:ip_hdr	access:public	signature:(u16_t _chksum)
ip_hdr::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/ip.h	/^  PACK_STRUCT_FIELD(u16_t _id);$/;"	p	struct:ip_hdr	access:public	signature:(u16_t _id)
ip_hdr::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/ip.h	/^  PACK_STRUCT_FIELD(u16_t _len);$/;"	p	struct:ip_hdr	access:public	signature:(u16_t _len)
ip_hdr::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/ip.h	/^  PACK_STRUCT_FIELD(u16_t _offset);$/;"	p	struct:ip_hdr	access:public	signature:(u16_t _offset)
ip_hdr::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/ip.h	/^  PACK_STRUCT_FIELD(u16_t _ttl_proto);$/;"	p	struct:ip_hdr	access:public	signature:(u16_t _ttl_proto)
ip_hdr::PACK_STRUCT_FIELD	./net/lwip/include/ipv4/lwip/ip.h	/^  PACK_STRUCT_FIELD(u16_t _v_hl_tos);$/;"	p	struct:ip_hdr	access:public	signature:(u16_t _v_hl_tos)
ip_hdr::dest	./net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::	access:public
ip_hdr::flow1	./net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr	access:public
ip_hdr::flow2	./net/lwip/include/ipv6/lwip/ip.h	/^  u16_t flow2;$/;"	m	struct:ip_hdr	access:public
ip_hdr::hoplim	./net/lwip/include/ipv6/lwip/ip.h	/^  u8_t hoplim;              \/* hop limit (TTL) *\/$/;"	m	struct:ip_hdr	access:public
ip_hdr::len	./net/lwip/include/ipv6/lwip/ip.h	/^  u16_t len;                \/* payload length *\/$/;"	m	struct:ip_hdr	access:public
ip_hdr::nexthdr	./net/lwip/include/ipv6/lwip/ip.h	/^  u8_t nexthdr;             \/* next header *\/$/;"	m	struct:ip_hdr	access:public
ip_hdr::src	./net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::ip_addr	access:public
ip_hdr::tclass1	./net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr	access:public
ip_hdr::tclass2	./net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr	access:public
ip_hdr::v	./net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr	access:public
ip_hl_v	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   ip_hl_v;  \/* bug in GCC for mips means the bitfield stuff will sometimes break - so we use a char for both and get round it with macro's instead... *\/$/;"	m	struct:ip	access:public
ip_id	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_id;                 \/* identification *\/$/;"	m	struct:ip	access:public
ip_init	./net/lwip/include/ipv4/lwip/ip.h	46;"	d
ip_init	./net/lwip/include/ipv6/lwip/ip.h	/^void ip_init(void);$/;"	p	signature:(void)
ip_input	./net/lwip/include/ipv4/lwip/ip.h	/^err_t ip_input(struct pbuf *p, struct netif *inp);$/;"	p	signature:(struct pbuf *p, struct netif *inp)
ip_input	./net/lwip/include/ipv6/lwip/ip.h	/^void ip_input(struct pbuf *p, struct netif *inp);$/;"	p	signature:(struct pbuf *p, struct netif *inp)
ip_len	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_len;                \/* total length *\/$/;"	m	struct:ip	access:public
ip_mreq	./net/lwip/include/lwip/sockets.h	/^typedef struct ip_mreq {$/;"	s
ip_mreq	./net/lwip/include/lwip/sockets.h	/^} ip_mreq;$/;"	t	typeref:struct:ip_mreq
ip_mreq::imr_interface	./net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_interface; \/* local IP address of interface *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr	access:public
ip_mreq::imr_multiaddr	./net/lwip/include/lwip/sockets.h	/^    struct in_addr imr_multiaddr; \/* IP multicast address of group *\/$/;"	m	struct:ip_mreq	typeref:struct:ip_mreq::in_addr	access:public
ip_off	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_off;                \/* fragment offset field *\/$/;"	m	struct:ip	access:public
ip_output	./net/lwip/include/ipv4/lwip/ip.h	/^err_t ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	p	signature:(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest, u8_t ttl, u8_t tos, u8_t proto)
ip_output	./net/lwip/include/ipv6/lwip/ip.h	/^err_t ip_output(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	p	signature:(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest, u8_t ttl, u8_t proto)
ip_output_if	./net/lwip/include/ipv4/lwip/ip.h	/^err_t ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	p	signature:(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest, u8_t ttl, u8_t tos, u8_t proto, struct netif *netif)
ip_output_if	./net/lwip/include/ipv6/lwip/ip.h	/^err_t ip_output_if(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest,$/;"	p	signature:(struct pbuf *p, struct ip_addr *src, struct ip_addr *dest, u8_t ttl, u8_t proto, struct netif *netif)
ip_p	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_p;                  \/* protocol *\/$/;"	m	struct:ip	access:public
ip_pcb	./net/lwip/include/ipv4/lwip/ip.h	/^struct ip_pcb {$/;"	s
ip_pcb::IP_PCB	./net/lwip/include/ipv4/lwip/ip.h	/^  IP_PCB;$/;"	m	struct:ip_pcb	access:public
ip_reass	./net/lwip/include/ipv4/lwip/ip_frag.h	/^struct pbuf * ip_reass(struct pbuf *p);$/;"	p	signature:(struct pbuf *p)
ip_reass_init	./net/lwip/include/ipv4/lwip/ip_frag.h	/^void ip_reass_init(void);$/;"	p	signature:(void)
ip_reass_tmr	./net/lwip/include/ipv4/lwip/ip_frag.h	/^void ip_reass_tmr(void);$/;"	p	signature:(void)
ip_reassdata	./net/lwip/include/ipv4/lwip/ip_frag.h	/^struct ip_reassdata {$/;"	s
ip_reassdata::datagram_len	./net/lwip/include/ipv4/lwip/ip_frag.h	/^  u16_t datagram_len;$/;"	m	struct:ip_reassdata	access:public
ip_reassdata::flags	./net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t flags;$/;"	m	struct:ip_reassdata	access:public
ip_reassdata::iphdr	./net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_hdr iphdr;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_hdr	access:public
ip_reassdata::next	./net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_reassdata *next;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_reassdata	access:public
ip_reassdata::p	./net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct pbuf *p;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::pbuf	access:public
ip_reassdata::timer	./net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t timer;$/;"	m	struct:ip_reassdata	access:public
ip_route	./net/lwip/include/ipv4/lwip/ip.h	/^struct netif *ip_route(struct ip_addr *dest);$/;"	p	signature:(struct ip_addr *dest)
ip_route	./net/lwip/include/ipv6/lwip/ip.h	/^struct netif *ip_route(struct ip_addr *dest);$/;"	p	signature:(struct ip_addr *dest)
ip_src	./net/lwip/netif/ppp/vjbsdhdr.h	/^  struct  in_addr ip_src,ip_dst; \/* source and dest address *\/$/;"	m	struct:ip	typeref:struct:ip::in_addr	access:public
ip_sum	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short ip_sum;                \/* checksum *\/$/;"	m	struct:ip	access:public
ip_tos	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_tos;                \/* type of service *\/$/;"	m	struct:ip	access:public
ip_ttl	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char  ip_ttl;                \/* time to live *\/$/;"	m	struct:ip	access:public
ipaddr	./net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon17::__anon19	typeref:struct:api_msg_msg::__anon17::__anon19::ip_addr	access:public
ipaddr	./net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:api_msg_msg::__anon17::__anon20	typeref:struct:api_msg_msg::__anon17::__anon20::ip_addr	access:public
ipaddr	./net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:netifapi_msg_msg::__anon31::__anon32	typeref:struct:netifapi_msg_msg::__anon31::__anon32::ip_addr	access:public
ipc_find_env	./inc/lib.h	/^envid_t	ipc_find_env(enum EnvType type);$/;"	p	signature:(enum EnvType type)
ipc_recv	./inc/lib.h	/^int32_t ipc_recv(envid_t *from_env_store, void *pg, int *perm_store);$/;"	p	signature:(envid_t *from_env_store, void *pg, int *perm_store)
ipc_send	./inc/lib.h	/^void	ipc_send(envid_t to_env, uint32_t value, void *pg, int perm);$/;"	p	signature:(envid_t to_env, uint32_t value, void *pg, int perm)
ipcp_options	./net/lwip/netif/ppp/ipcp.h	/^typedef struct ipcp_options {$/;"	s
ipcp_options	./net/lwip/netif/ppp/ipcp.h	/^} ipcp_options;$/;"	t	typeref:struct:ipcp_options
ipcp_options::accept_local	./net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_local  : 1; \/* accept peer's value for ouraddr *\/$/;"	m	struct:ipcp_options	access:public
ipcp_options::accept_remote	./net/lwip/netif/ppp/ipcp.h	/^  u_int   accept_remote : 1; \/* accept peer's value for hisaddr *\/$/;"	m	struct:ipcp_options	access:public
ipcp_options::cflag	./net/lwip/netif/ppp/ipcp.h	/^  u_char  cflag;             \/* VJ slot compression flag. *\/$/;"	m	struct:ipcp_options	access:public
ipcp_options::default_route	./net/lwip/netif/ppp/ipcp.h	/^  u_int   default_route : 1; \/* Assign default route through interface? *\/$/;"	m	struct:ipcp_options	access:public
ipcp_options::dnsaddr	./net/lwip/netif/ppp/ipcp.h	/^  u32_t   dnsaddr[2];        \/* Primary and secondary MS DNS entries *\/$/;"	m	struct:ipcp_options	access:public
ipcp_options::hisaddr	./net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options	access:public
ipcp_options::maxslotindex	./net/lwip/netif/ppp/ipcp.h	/^  u_char  maxslotindex;      \/* VJ slots - 1. *\/$/;"	m	struct:ipcp_options	access:public
ipcp_options::neg_addr	./net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_addr      : 1; \/* Negotiate IP Address? *\/$/;"	m	struct:ipcp_options	access:public
ipcp_options::neg_vj	./net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_vj        : 1; \/* Van Jacobson Compression? *\/$/;"	m	struct:ipcp_options	access:public
ipcp_options::old_addrs	./net/lwip/netif/ppp/ipcp.h	/^  u_int   old_addrs     : 1; \/* Use old (IP-Addresses) option? *\/$/;"	m	struct:ipcp_options	access:public
ipcp_options::old_vj	./net/lwip/netif/ppp/ipcp.h	/^  u_int   old_vj        : 1; \/* use old (short) form of VJ option? *\/$/;"	m	struct:ipcp_options	access:public
ipcp_options::ouraddr	./net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options	access:public
ipcp_options::proxy_arp	./net/lwip/netif/ppp/ipcp.h	/^  u_int   proxy_arp     : 1; \/* Make proxy ARP entry for peer? *\/$/;"	m	struct:ipcp_options	access:public
ipcp_options::req_addr	./net/lwip/netif/ppp/ipcp.h	/^  u_int   req_addr      : 1; \/* Ask peer to send IP address? *\/$/;"	m	struct:ipcp_options	access:public
ipcp_options::req_dns1	./net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns1      : 1; \/* Ask peer to send primary DNS address? *\/$/;"	m	struct:ipcp_options	access:public
ipcp_options::req_dns2	./net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns2      : 1; \/* Ask peer to send secondary DNS address? *\/$/;"	m	struct:ipcp_options	access:public
ipcp_options::vj_protocol	./net/lwip/netif/ppp/ipcp.h	/^  u_short vj_protocol;       \/* protocol value to use in VJ option *\/$/;"	m	struct:ipcp_options	access:public
ipcp_options::winsaddr	./net/lwip/netif/ppp/ipcp.h	/^  u32_t   winsaddr[2];       \/* Primary and secondary MS WINS entries *\/$/;"	m	struct:ipcp_options	access:public
iphdr	./net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_hdr iphdr;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_hdr	access:public
irq_eoi	./kern/picirq.h	/^void irq_eoi(void);$/;"	p	signature:(void)
irq_line	./kern/pci.h	/^    uint8_t irq_line;$/;"	m	struct:pci_func	access:public
irq_setmask_8259A	./kern/picirq.h	/^void irq_setmask_8259A(uint16_t mask);$/;"	p	signature:(uint16_t mask)
iscons	./inc/lib.h	/^int	iscons(int fd);$/;"	p	signature:(int fd)
iscons	./inc/stdio.h	/^int	iscons(int fd);$/;"	p	signature:(int fd)
jb_ebp	./net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebp;$/;"	m	struct:jos_jmp_buf	access:public
jb_ebx	./net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebx;$/;"	m	struct:jos_jmp_buf	access:public
jb_edi	./net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_edi;$/;"	m	struct:jos_jmp_buf	access:public
jb_eip	./net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_eip;$/;"	m	struct:jos_jmp_buf	access:public
jb_esi	./net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esi;$/;"	m	struct:jos_jmp_buf	access:public
jb_esp	./net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esp;$/;"	m	struct:jos_jmp_buf	access:public
jif_init	./net/lwip/jos/jif/jif.h	/^err_t	jif_init(struct netif *netif);$/;"	p	signature:(struct netif *netif)
jif_input	./net/lwip/jos/jif/jif.h	/^void	jif_input(struct netif *netif, void *va);$/;"	p	signature:(struct netif *netif, void *va)
jif_pkt	./inc/ns.h	/^struct jif_pkt {$/;"	s
jif_pkt::jp_data	./inc/ns.h	/^	char jp_data[0];$/;"	m	struct:jif_pkt	access:public
jif_pkt::jp_len	./inc/ns.h	/^	int jp_len;$/;"	m	struct:jif_pkt	access:public
jl	./net/lwip/include/lwip/api_msg.h	/^    } jl;$/;"	m	union:api_msg_msg::__anon17	typeref:struct:api_msg_msg::__anon17::__anon23	access:public
join_or_leave	./net/lwip/include/lwip/api_msg.h	/^      enum netconn_igmp join_or_leave;$/;"	m	struct:api_msg_msg::__anon17::__anon23	typeref:enum:api_msg_msg::__anon17::__anon23::netconn_igmp	access:public
join_sent	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER join_sent;        \/* *\/$/;"	m	struct:stats_igmp	access:public
jos_jmp_buf	./net/lwip/jos/arch/i386/setjmp.h	/^struct jos_jmp_buf {$/;"	s
jos_jmp_buf::jb_ebp	./net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebp;$/;"	m	struct:jos_jmp_buf	access:public
jos_jmp_buf::jb_ebx	./net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_ebx;$/;"	m	struct:jos_jmp_buf	access:public
jos_jmp_buf::jb_edi	./net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_edi;$/;"	m	struct:jos_jmp_buf	access:public
jos_jmp_buf::jb_eip	./net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_eip;$/;"	m	struct:jos_jmp_buf	access:public
jos_jmp_buf::jb_esi	./net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esi;$/;"	m	struct:jos_jmp_buf	access:public
jos_jmp_buf::jb_esp	./net/lwip/jos/arch/i386/setjmp.h	/^    uint32_t jb_esp;$/;"	m	struct:jos_jmp_buf	access:public
jos_longjmp	./net/lwip/jos/arch/setjmp.h	/^void jos_longjmp(volatile struct jos_jmp_buf *buf, int val)$/;"	p	signature:(volatile struct jos_jmp_buf *buf, int val)
jos_setjmp	./net/lwip/jos/arch/setjmp.h	/^int  jos_setjmp(volatile struct jos_jmp_buf *buf);$/;"	p	signature:(volatile struct jos_jmp_buf *buf)
jp_data	./inc/ns.h	/^	char jp_data[0];$/;"	m	struct:jif_pkt	access:public
jp_len	./inc/ns.h	/^	int jp_len;$/;"	m	struct:jif_pkt	access:public
kbd_intr	./kern/console.h	/^void kbd_intr(void); \/\/ irq 1$/;"	p	signature:(void)
keep_cnt	./net/lwip/include/lwip/tcp.h	/^  u32_t keep_cnt;$/;"	m	struct:tcp_pcb	access:public
keep_cnt_sent	./net/lwip/include/lwip/tcp.h	/^  u8_t keep_cnt_sent;$/;"	m	struct:tcp_pcb	access:public
keep_idle	./net/lwip/include/lwip/tcp.h	/^  u32_t keep_idle;$/;"	m	struct:tcp_pcb	access:public
keep_intvl	./net/lwip/include/lwip/tcp.h	/^  u32_t keep_intvl;$/;"	m	struct:tcp_pcb	access:public
l_linger	./net/lwip/include/lwip/sockets.h	/^       int l_linger;               \/* linger time *\/$/;"	m	struct:linger	access:public
l_onoff	./net/lwip/include/lwip/sockets.h	/^       int l_onoff;                \/* option on\/off *\/$/;"	m	struct:linger	access:public
lapic_eoi	./kern/cpu.h	/^void lapic_eoi(void);$/;"	p	signature:(void)
lapic_init	./kern/cpu.h	/^void lapic_init(void);$/;"	p	signature:(void)
lapic_ipi	./kern/cpu.h	/^void lapic_ipi(int vector);$/;"	p	signature:(int vector)
lapic_startap	./kern/cpu.h	/^void lapic_startap(uint8_t apicid, uint32_t addr);$/;"	p	signature:(uint8_t apicid, uint32_t addr)
last_cs	./net/lwip/netif/ppp/vj.h	/^  struct cstate *last_cs;          \/* most recently used tstate *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate	access:public
last_recv	./net/lwip/netif/ppp/vj.h	/^  u_char last_recv;                \/* last rcvd conn. id *\/$/;"	m	struct:vjcompress	access:public
last_reporter_flag	./net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               last_reporter_flag; \/* signifies we were the last person to report *\/$/;"	m	struct:igmp_group	access:public
last_xmit	./net/lwip/netif/ppp/vj.h	/^  u_char last_xmit;                \/* last sent conn. id *\/$/;"	m	struct:vjcompress	access:public
lastack	./net/lwip/include/lwip/tcp.h	/^  u32_t lastack; \/* Highest acknowledged seqno. *\/$/;"	m	struct:tcp_pcb	access:public
lastconflict	./net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t lastconflict;        \/* ticks until a conflict can be solved by defending *\/$/;"	m	struct:autoip	access:public
lb	./net/lwip/include/lwip/api_msg.h	/^    } lb;$/;"	m	union:api_msg_msg::__anon17	typeref:struct:api_msg_msg::__anon17::__anon24	access:public
lba_length	./inc/partition.h	/^	uint32_t lba_length;$/;"	m	struct:Partitiondesc	access:public
lba_start	./inc/partition.h	/^	uint32_t lba_start;$/;"	m	struct:Partitiondesc	access:public
lcp_close	./net/lwip/netif/ppp/lcp.h	/^void lcp_close    (int, char *);$/;"	p	signature:(int, char *)
lcp_init	./net/lwip/netif/ppp/lcp.h	/^void lcp_init     (int);$/;"	p	signature:(int)
lcp_lowerdown	./net/lwip/netif/ppp/lcp.h	/^void lcp_lowerdown(int);$/;"	p	signature:(int)
lcp_lowerup	./net/lwip/netif/ppp/lcp.h	/^void lcp_lowerup  (int);$/;"	p	signature:(int)
lcp_open	./net/lwip/netif/ppp/lcp.h	/^void lcp_open     (int);$/;"	p	signature:(int)
lcp_options	./net/lwip/netif/ppp/lcp.h	/^typedef struct lcp_options {$/;"	s
lcp_options	./net/lwip/netif/ppp/lcp.h	/^} lcp_options;$/;"	t	typeref:struct:lcp_options
lcp_options::asyncmap	./net/lwip/netif/ppp/lcp.h	/^    u32_t asyncmap;              \/* Value of async map *\/$/;"	m	struct:lcp_options	access:public
lcp_options::chap_mdtype	./net/lwip/netif/ppp/lcp.h	/^    u_char chap_mdtype;          \/* which MD type (hashing algorithm) *\/$/;"	m	struct:lcp_options	access:public
lcp_options::endpoint	./net/lwip/netif/ppp/lcp.h	/^    struct epdisc endpoint;      \/* endpoint discriminator *\/$/;"	m	struct:lcp_options	typeref:struct:lcp_options::epdisc	access:public
lcp_options::lqr_period	./net/lwip/netif/ppp/lcp.h	/^    u32_t lqr_period;            \/* Reporting period for LQR 1\/100ths second *\/$/;"	m	struct:lcp_options	access:public
lcp_options::magicnumber	./net/lwip/netif/ppp/lcp.h	/^    u32_t magicnumber;$/;"	m	struct:lcp_options	access:public
lcp_options::mrru	./net/lwip/netif/ppp/lcp.h	/^    u_short mrru;                \/* Value of MRRU, and multilink enable *\/$/;"	m	struct:lcp_options	access:public
lcp_options::mru	./net/lwip/netif/ppp/lcp.h	/^    u_short mru;                 \/* Value of MRU *\/$/;"	m	struct:lcp_options	access:public
lcp_options::neg_accompression	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_accompression : 1; \/* HDLC Address\/Control Field Compression? *\/$/;"	m	struct:lcp_options	access:public
lcp_options::neg_asyncmap	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_asyncmap      : 1; \/* Negotiate the async map? *\/$/;"	m	struct:lcp_options	access:public
lcp_options::neg_cbcp	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_cbcp          : 1; \/* Negotiate use of CBCP *\/$/;"	m	struct:lcp_options	access:public
lcp_options::neg_chap	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_chap          : 1; \/* Ask for CHAP authentication? *\/$/;"	m	struct:lcp_options	access:public
lcp_options::neg_endpoint	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_endpoint      : 1; \/* Negotiate endpoint discriminator *\/$/;"	m	struct:lcp_options	access:public
lcp_options::neg_lqr	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_lqr           : 1; \/* Negotiate use of Link Quality Reports *\/$/;"	m	struct:lcp_options	access:public
lcp_options::neg_magicnumber	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_magicnumber   : 1; \/* Ask for magic number? *\/$/;"	m	struct:lcp_options	access:public
lcp_options::neg_mrru	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_mrru          : 1; \/* Negotiate multilink MRRU *\/$/;"	m	struct:lcp_options	access:public
lcp_options::neg_mru	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_mru           : 1; \/* Negotiate the MRU? *\/$/;"	m	struct:lcp_options	access:public
lcp_options::neg_pcompression	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_pcompression  : 1; \/* HDLC Protocol Field Compression? *\/$/;"	m	struct:lcp_options	access:public
lcp_options::neg_ssnhf	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_ssnhf         : 1; \/* Negotiate short sequence numbers *\/$/;"	m	struct:lcp_options	access:public
lcp_options::neg_upap	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_upap          : 1; \/* Ask for UPAP authentication? *\/$/;"	m	struct:lcp_options	access:public
lcp_options::numloops	./net/lwip/netif/ppp/lcp.h	/^    int numloops;                \/* Number of loops during magic number neg. *\/$/;"	m	struct:lcp_options	access:public
lcp_options::passive	./net/lwip/netif/ppp/lcp.h	/^    u_int passive           : 1; \/* Don't die if we don't get a response *\/$/;"	m	struct:lcp_options	access:public
lcp_options::restart	./net/lwip/netif/ppp/lcp.h	/^    u_int restart           : 1; \/* Restart vs. exit after close *\/$/;"	m	struct:lcp_options	access:public
lcp_options::silent	./net/lwip/netif/ppp/lcp.h	/^    u_int silent            : 1; \/* Wait for the other end to start first *\/$/;"	m	struct:lcp_options	access:public
lcp_sprotrej	./net/lwip/netif/ppp/lcp.h	/^void lcp_sprotrej (int, u_char *, int); \/* send protocol reject *\/$/;"	p	signature:(int, u_char *, int)
lcr0	./inc/x86.h	/^lcr0(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr0	./inc/x86.h	/^static __inline void lcr0(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr3	./inc/x86.h	/^lcr3(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr3	./inc/x86.h	/^static __inline void lcr3(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
lcr4	./inc/x86.h	/^lcr4(uint32_t val)$/;"	f	signature:(uint32_t val)
lcr4	./inc/x86.h	/^static __inline void lcr4(uint32_t val) __attribute__((always_inline));$/;"	p	signature:(uint32_t val)
leave_sent	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER leave_sent;       \/* *\/$/;"	m	struct:stats_igmp	access:public
len	./net/lwip/include/ipv6/lwip/ip.h	/^  u16_t len;                \/* payload length *\/$/;"	m	struct:ip_hdr	access:public
len	./net/lwip/include/lwip/api_msg.h	/^      int len;$/;"	m	struct:api_msg_msg::__anon17::__anon21	access:public
len	./net/lwip/include/lwip/api_msg.h	/^      u16_t len;$/;"	m	struct:api_msg_msg::__anon17::__anon22	access:public
len	./net/lwip/include/lwip/pbuf.h	/^  u16_t len;  $/;"	m	struct:pbuf	access:public
len	./net/lwip/include/lwip/snmp.h	/^  u8_t len;$/;"	m	struct:snmp_obj_id	access:public
len	./net/lwip/include/lwip/tcp.h	/^  u16_t len;               \/* the TCP length of this segment *\/$/;"	m	struct:tcp_seg	access:public
lenerr	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_igmp	access:public
lenerr	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_proto	access:public
length	./kern/e1000.h	/^	uint16_t length;     \/* Length of data DMAed into data buffer *\/$/;"	m	struct:e1000_rx_desc	access:public
length	./kern/e1000.h	/^	uint16_t length;    \/* Data buffer length *\/$/;"	m	struct:e1000_tx_desc	access:public
level_length	./net/lwip/include/lwip/snmp_structs.h	/^  u16_t (*level_length)(void* addr_inf, u8_t level);$/;"	m	struct:mib_external_node	access:public
lgdt	./inc/x86.h	/^lgdt(void *p)$/;"	f	signature:(void *p)
lidt	./inc/x86.h	/^lidt(void *p)$/;"	f	signature:(void *p)
lidt	./inc/x86.h	/^static __inline void lidt(void *p) __attribute__((always_inline));$/;"	p	signature:(void *p)
linger	./net/lwip/include/lwip/sockets.h	/^struct linger {$/;"	s
linger::l_linger	./net/lwip/include/lwip/sockets.h	/^       int l_linger;               \/* linger time *\/$/;"	m	struct:linger	access:public
linger::l_onoff	./net/lwip/include/lwip/sockets.h	/^       int l_onoff;                \/* option on\/off *\/$/;"	m	struct:linger	access:public
link	./net/lwip/include/lwip/stats.h	/^  struct stats_proto link;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto	access:public
link_callback	./net/lwip/include/lwip/netif.h	/^  void (* link_callback)(struct netif *netif);$/;"	m	struct:netif	access:public
link_down	./net/lwip/netif/ppp/auth.h	/^void link_down (int);$/;"	p	signature:(int)
link_established	./net/lwip/netif/ppp/auth.h	/^void link_established (int);$/;"	p	signature:(int)
link_required	./net/lwip/netif/ppp/auth.h	/^void link_required (int);$/;"	p	signature:(int)
link_speed	./net/lwip/include/lwip/netif.h	/^  u32_t link_speed;$/;"	m	struct:netif	access:public
link_terminated	./net/lwip/netif/ppp/auth.h	/^void link_terminated (int);$/;"	p	signature:(int)
link_type	./net/lwip/include/lwip/netif.h	/^  u8_t link_type;$/;"	m	struct:netif	access:public
linkoutput	./net/lwip/include/lwip/netif.h	/^  err_t (* linkoutput)(struct netif *netif, struct pbuf *p);$/;"	m	struct:netif	access:public
listen	./inc/lib.h	/^int     listen(int s, int backlog);$/;"	p	signature:(int s, int backlog)
listen	./inc/ns.h	/^	} listen;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_listen	access:public
listen	./net/lwip/include/lwip/sockets.h	335;"	d
listen_pcbs	./net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb_listen *listen_pcbs; $/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb_listen	access:public
lldt	./inc/x86.h	/^lldt(uint16_t sel)$/;"	f	signature:(uint16_t sel)
lldt	./inc/x86.h	/^static __inline void lldt(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
llipaddr	./net/lwip/include/ipv4/lwip/autoip.h	/^  struct ip_addr llipaddr;  \/* the currently selected, probed, announced or used LL IP-Address *\/$/;"	m	struct:autoip	typeref:struct:autoip::ip_addr	access:public
local	./net/lwip/include/lwip/api_msg.h	/^      u8_t local;$/;"	m	struct:api_msg_msg::__anon17::__anon20	access:public
local_port	./net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb	access:public
lock_kernel	./kern/spinlock.h	/^lock_kernel(void)$/;"	f	signature:(void)
locked	./kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock	access:public
loop_cnt_current	./net/lwip/include/lwip/netif.h	/^  u16_t loop_cnt_current;$/;"	m	struct:netif	access:public
loop_first	./net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_first;$/;"	m	struct:netif	typeref:struct:netif::pbuf	access:public
loop_last	./net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_last;$/;"	m	struct:netif	typeref:struct:netif::pbuf	access:public
loopif_init	./net/lwip/include/netif/loopif.h	/^err_t loopif_init(struct netif *netif);$/;"	p	signature:(struct netif *netif)
loopif_poll	./net/lwip/include/netif/loopif.h	44;"	d
lowerdown	./net/lwip/netif/ppp/ppp.h	/^    void (*lowerdown) (int unit);$/;"	m	struct:protent	access:public
lowerup	./net/lwip/netif/ppp/ppp.h	/^    void (*lowerup) (int unit);$/;"	m	struct:protent	access:public
lqr_period	./net/lwip/netif/ppp/lcp.h	/^    u32_t lqr_period;            \/* Reporting period for LQR 1\/100ths second *\/$/;"	m	struct:lcp_options	access:public
ltr	./inc/x86.h	/^ltr(uint16_t sel)$/;"	f	signature:(uint16_t sel)
ltr	./inc/x86.h	/^static __inline void ltr(uint16_t sel) __attribute__((always_inline));$/;"	p	signature:(uint16_t sel)
lwip_accept	./net/lwip/include/lwip/sockets.h	/^int lwip_accept(int s, struct sockaddr *addr, socklen_t *addrlen);$/;"	p	signature:(int s, struct sockaddr *addr, socklen_t *addrlen)
lwip_bind	./net/lwip/include/lwip/sockets.h	/^int lwip_bind(int s, struct sockaddr *name, socklen_t namelen);$/;"	p	signature:(int s, struct sockaddr *name, socklen_t namelen)
lwip_close	./net/lwip/include/lwip/sockets.h	/^int lwip_close(int s);$/;"	p	signature:(int s)
lwip_connect	./net/lwip/include/lwip/sockets.h	/^int lwip_connect(int s, const struct sockaddr *name, socklen_t namelen);$/;"	p	signature:(int s, const struct sockaddr *name, socklen_t namelen)
lwip_core_init	./net/lwip/jos/arch/sys_arch.h	/^void lwip_core_init(void);$/;"	p	signature:(void)
lwip_core_lock	./net/lwip/jos/arch/sys_arch.h	/^void lwip_core_lock(void);$/;"	p	signature:(void)
lwip_core_unlock	./net/lwip/jos/arch/sys_arch.h	/^void lwip_core_unlock(void);$/;"	p	signature:(void)
lwip_event	./net/lwip/include/lwip/tcp.h	/^enum lwip_event {$/;"	g
lwip_freeaddrinfo	./net/lwip/include/lwip/netdb.h	/^void lwip_freeaddrinfo(struct addrinfo *ai);$/;"	p	signature:(struct addrinfo *ai)
lwip_getaddrinfo	./net/lwip/include/lwip/netdb.h	/^int lwip_getaddrinfo(const char *nodename,$/;"	p	signature:(const char *nodename, const char *servname, const struct addrinfo *hints, struct addrinfo **res)
lwip_gethostbyname	./net/lwip/include/lwip/netdb.h	/^struct hostent *lwip_gethostbyname(const char *name);$/;"	p	signature:(const char *name)
lwip_gethostbyname_r	./net/lwip/include/lwip/netdb.h	/^int lwip_gethostbyname_r(const char *name, struct hostent *ret, char *buf,$/;"	p	signature:(const char *name, struct hostent *ret, char *buf, size_t buflen, struct hostent **result, int *h_errnop)
lwip_getpeername	./net/lwip/include/lwip/sockets.h	/^int lwip_getpeername (int s, struct sockaddr *name, socklen_t *namelen);$/;"	p	signature:(int s, struct sockaddr *name, socklen_t *namelen)
lwip_getsockname	./net/lwip/include/lwip/sockets.h	/^int lwip_getsockname (int s, struct sockaddr *name, socklen_t *namelen);$/;"	p	signature:(int s, struct sockaddr *name, socklen_t *namelen)
lwip_getsockopt	./net/lwip/include/lwip/sockets.h	/^int lwip_getsockopt (int s, int level, int optname, void *optval, socklen_t *optlen);$/;"	p	signature:(int s, int level, int optname, void *optval, socklen_t *optlen)
lwip_init	./net/lwip/include/lwip/init.h	/^void lwip_init(void);$/;"	p	signature:(void)
lwip_ioctl	./net/lwip/include/lwip/sockets.h	/^int lwip_ioctl(int s, long cmd, void *argp);$/;"	p	signature:(int s, long cmd, void *argp)
lwip_listen	./net/lwip/include/lwip/sockets.h	/^int lwip_listen(int s, int backlog);$/;"	p	signature:(int s, int backlog)
lwip_read	./net/lwip/include/lwip/sockets.h	/^int lwip_read(int s, void *mem, int len);$/;"	p	signature:(int s, void *mem, int len)
lwip_recv	./net/lwip/include/lwip/sockets.h	/^int lwip_recv(int s, void *mem, int len, unsigned int flags);$/;"	p	signature:(int s, void *mem, int len, unsigned int flags)
lwip_recvfrom	./net/lwip/include/lwip/sockets.h	/^int lwip_recvfrom(int s, void *mem, int len, unsigned int flags,$/;"	p	signature:(int s, void *mem, int len, unsigned int flags, struct sockaddr *from, socklen_t *fromlen)
lwip_select	./net/lwip/include/lwip/sockets.h	/^int lwip_select(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset,$/;"	p	signature:(int maxfdp1, fd_set *readset, fd_set *writeset, fd_set *exceptset, struct timeval *timeout)
lwip_send	./net/lwip/include/lwip/sockets.h	/^int lwip_send(int s, const void *dataptr, int size, unsigned int flags);$/;"	p	signature:(int s, const void *dataptr, int size, unsigned int flags)
lwip_sendto	./net/lwip/include/lwip/sockets.h	/^int lwip_sendto(int s, const void *dataptr, int size, unsigned int flags,$/;"	p	signature:(int s, const void *dataptr, int size, unsigned int flags, struct sockaddr *to, socklen_t tolen)
lwip_setsockopt	./net/lwip/include/lwip/sockets.h	/^int lwip_setsockopt (int s, int level, int optname, const void *optval, socklen_t optlen);$/;"	p	signature:(int s, int level, int optname, const void *optval, socklen_t optlen)
lwip_shutdown	./net/lwip/include/lwip/sockets.h	/^int lwip_shutdown(int s, int how);$/;"	p	signature:(int s, int how)
lwip_socket	./net/lwip/include/lwip/sockets.h	/^int lwip_socket(int domain, int type, int protocol);$/;"	p	signature:(int domain, int type, int protocol)
lwip_socket_init	./net/lwip/include/lwip/sockets.h	/^void lwip_socket_init(void);$/;"	p	signature:(void)
lwip_strerr	./net/lwip/include/lwip/err.h	/^extern const char *lwip_strerr(err_t err);$/;"	p	signature:(err_t err)
lwip_strerr	./net/lwip/include/lwip/err.h	80;"	d
lwip_tcp_event	./net/lwip/include/lwip/tcp.h	/^err_t lwip_tcp_event(void *arg, struct tcp_pcb *pcb,$/;"	p	signature:(void *arg, struct tcp_pcb *pcb, enum lwip_event, struct pbuf *p, u16_t size, err_t err)
lwip_write	./net/lwip/include/lwip/sockets.h	/^int lwip_write(int s, const void *dataptr, int size);$/;"	p	signature:(int s, const void *dataptr, int size)
magic	./net/lwip/netif/ppp/magic.h	/^u32_t magic(void);$/;"	p	signature:(void)
magicInit	./net/lwip/netif/ppp/magic.h	/^void  magicInit(void);$/;"	p	signature:(void)
magicnumber	./net/lwip/netif/ppp/lcp.h	/^    u32_t magicnumber;$/;"	m	struct:lcp_options	access:public
malloc	./inc/malloc.h	/^void *malloc(size_t size);$/;"	p	signature:(size_t size)
max	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER max;$/;"	m	struct:stats_syselem	access:public
max	./net/lwip/include/lwip/stats.h	/^  mem_size_t max;$/;"	m	struct:stats_mem	access:public
maxSlotIndex	./net/lwip/netif/ppp/vj.h	/^  u_char maxSlotIndex;$/;"	m	struct:vjcompress	access:public
max_transmits	./net/lwip/netif/ppp/chap.h	/^  int max_transmits;                      \/* Maximum # of challenge transmissions *\/$/;"	m	struct:chap_state	access:public
maxconfreqtransmits	./net/lwip/netif/ppp/fsm.h	/^  int maxconfreqtransmits;         \/* Maximum Configure-Request transmissions *\/$/;"	m	struct:fsm	access:public
maxconnect	./net/lwip/netif/ppp/ppp.h	/^  int  maxconnect;                    \/* Maximum connect time (seconds) *\/$/;"	m	struct:ppp_settings	access:public
maxlength	./net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_array_node	access:public
maxlength	./net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_node	access:public
maxlength	./net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_external_node	access:public
maxlength	./net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_list_rootnode	access:public
maxlength	./net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_ram_array_node	access:public
maxnakloops	./net/lwip/netif/ppp/fsm.h	/^  int maxnakloops;                 \/* Maximum number of nak loops tolerated *\/$/;"	m	struct:fsm	access:public
maxslotindex	./net/lwip/netif/ppp/ipcp.h	/^  u_char  maxslotindex;      \/* VJ slots - 1. *\/$/;"	m	struct:ipcp_options	access:public
maxtermtransmits	./net/lwip/netif/ppp/fsm.h	/^  int maxtermtransmits;            \/* Maximum Terminate-Request transmissions *\/$/;"	m	struct:fsm	access:public
mbox	./net/lwip/include/lwip/stats.h	/^  struct stats_syselem mbox;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem	access:public
mc146818_read	./kern/kclock.h	/^unsigned mc146818_read(unsigned reg);$/;"	p	signature:(unsigned reg)
mc146818_write	./kern/kclock.h	/^void mc146818_write(unsigned reg, unsigned datum);$/;"	p	signature:(unsigned reg, unsigned datum)
mem	./net/lwip/include/lwip/stats.h	/^  struct stats_mem mem;$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem	access:public
mem_calloc	./net/lwip/include/lwip/mem.h	/^void *mem_calloc(mem_size_t count, mem_size_t size);$/;"	p	signature:(mem_size_t count, mem_size_t size)
mem_calloc	./net/lwip/include/lwip/mem.h	59;"	d
mem_free	./net/lwip/include/lwip/mem.h	/^void  mem_free(void *mem);$/;"	p	signature:(void *mem)
mem_free	./net/lwip/include/lwip/mem.h	53;"	d
mem_free_callback	./net/lwip/include/lwip/tcpip.h	/^err_t mem_free_callback(void *m);$/;"	p	signature:(void *m)
mem_init	./kern/pmap.h	/^void	mem_init(void);$/;"	p	signature:(void)
mem_init	./net/lwip/include/lwip/mem.h	/^void  mem_init(void);$/;"	p	signature:(void)
mem_init	./net/lwip/include/lwip/mem.h	48;"	d
mem_init	./net/lwip/include/lwip/mem.h	77;"	d
mem_malloc	./net/lwip/include/lwip/mem.h	/^void *mem_malloc(mem_size_t size);$/;"	p	signature:(mem_size_t size)
mem_malloc	./net/lwip/include/lwip/mem.h	56;"	d
mem_ptr_t	./net/lwip/jos/arch/cc.h	/^typedef uintptr_t mem_ptr_t;$/;"	t
mem_realloc	./net/lwip/include/lwip/mem.h	/^void *mem_realloc(void *mem, mem_size_t size);$/;"	p	signature:(void *mem, mem_size_t size)
mem_realloc	./net/lwip/include/lwip/mem.h	62;"	d
mem_realloc	./net/lwip/include/lwip/mem.h	80;"	d
mem_size_t	./net/lwip/include/lwip/mem.h	/^typedef size_t mem_size_t;$/;"	t
mem_size_t	./net/lwip/include/lwip/mem.h	/^typedef u16_t mem_size_t;$/;"	t
mem_size_t	./net/lwip/include/lwip/mem.h	/^typedef u32_t mem_size_t;$/;"	t
memcmp	./inc/string.h	/^int	memcmp(const void *s1, const void *s2, size_t len);$/;"	p	signature:(const void *s1, const void *s2, size_t len)
memcpy	./inc/string.h	/^void *	memcpy(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memcpy	./net/lwip/jos/lwipopts.h	/^void *memcpy(void *dst, const void *src, size_t n);$/;"	p	signature:(void *dst, const void *src, size_t n)
memerr	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER memerr;           \/* Out of memory error. *\/$/;"	m	struct:stats_proto	access:public
memfind	./inc/string.h	/^void *	memfind(const void *s, int c, size_t len);$/;"	p	signature:(const void *s, int c, size_t len)
memmove	./inc/string.h	/^void *	memmove(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
memp	./net/lwip/include/lwip/stats.h	/^  struct stats_mem memp[MEMP_MAX];$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem	access:public
memp_free	./net/lwip/include/lwip/memp.h	/^void  memp_free(memp_t type, void *mem);$/;"	p	signature:(memp_t type, void *mem)
memp_init	./net/lwip/include/lwip/memp.h	/^void  memp_init(void);$/;"	p	signature:(void)
memp_malloc	./net/lwip/include/lwip/memp.h	/^void *memp_malloc(memp_t type);$/;"	p	signature:(memp_t type)
memp_malloc	./net/lwip/include/lwip/memp.h	84;"	d
memp_malloc_fn	./net/lwip/include/lwip/memp.h	/^void *memp_malloc_fn(memp_t type, const char* file, const int line);$/;"	p	signature:(memp_t type, const char* file, const int line)
memp_pool_helper_t	./net/lwip/include/lwip/memp.h	/^} memp_pool_helper_t;$/;"	t	typeref:enum:__anon16
memp_t	./net/lwip/include/lwip/memp.h	/^} memp_t;$/;"	t	typeref:enum:__anon15
memset	./inc/string.h	/^void *	memset(void *dst, int c, size_t len);$/;"	p	signature:(void *dst, int c, size_t len)
mib_array_node	./net/lwip/include/lwip/snmp_structs.h	/^struct mib_array_node$/;"	s
mib_array_node::get_object_def	./net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_array_node	access:public
mib_array_node::get_value	./net/lwip/include/lwip/snmp_structs.h	/^  void (* const get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node	access:public
mib_array_node::maxlength	./net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_array_node	access:public
mib_array_node::node_type	./net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_array_node	access:public
mib_array_node::nptr	./net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node* const *nptr;$/;"	m	struct:mib_array_node	access:public
mib_array_node::objid	./net/lwip/include/lwip/snmp_structs.h	/^  const s32_t *objid;$/;"	m	struct:mib_array_node	access:public
mib_array_node::set_test	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node	access:public
mib_array_node::set_value	./net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node	access:public
mib_external_node	./net/lwip/include/lwip/snmp_structs.h	/^struct mib_external_node$/;"	s
mib_external_node::addr_inf	./net/lwip/include/lwip/snmp_structs.h	/^  void* addr_inf;$/;"	m	struct:mib_external_node	access:public
mib_external_node::get_object_def	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node	access:public
mib_external_node::get_object_def_a	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_a)(u8_t rid, u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_external_node	access:public
mib_external_node::get_object_def_pc	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_pc)(u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node	access:public
mib_external_node::get_object_def_q	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def_q)(void* addr_inf, u8_t rid, u8_t ident_len, s32_t *ident);$/;"	m	struct:mib_external_node	access:public
mib_external_node::get_objid	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_objid)(void* addr_inf, u8_t level, u16_t idx, s32_t *sub_id);$/;"	m	struct:mib_external_node	access:public
mib_external_node::get_value	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node	access:public
mib_external_node::get_value_a	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node	access:public
mib_external_node::get_value_pc	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node	access:public
mib_external_node::get_value_q	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node	access:public
mib_external_node::ident_cmp	./net/lwip/include/lwip/snmp_structs.h	/^  s32_t (*ident_cmp)(void* addr_inf, u8_t level, u16_t idx, s32_t sub_id);$/;"	m	struct:mib_external_node	access:public
mib_external_node::level_length	./net/lwip/include/lwip/snmp_structs.h	/^  u16_t (*level_length)(void* addr_inf, u8_t level);$/;"	m	struct:mib_external_node	access:public
mib_external_node::maxlength	./net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_external_node	access:public
mib_external_node::node_type	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_external_node	access:public
mib_external_node::set_test	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node	access:public
mib_external_node::set_test_a	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node	access:public
mib_external_node::set_test_pc	./net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node	access:public
mib_external_node::set_test_q	./net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node	access:public
mib_external_node::set_value	./net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node	access:public
mib_external_node::set_value_a	./net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node	access:public
mib_external_node::set_value_pc	./net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node	access:public
mib_external_node::set_value_q	./net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_q)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node	access:public
mib_external_node::tree_levels	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t tree_levels;$/;"	m	struct:mib_external_node	access:public
mib_list_node	./net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_node$/;"	s
mib_list_node::next	./net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *next;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node	access:public
mib_list_node::nptr	./net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node *nptr;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_node	access:public
mib_list_node::objid	./net/lwip/include/lwip/snmp_structs.h	/^  s32_t objid;$/;"	m	struct:mib_list_node	access:public
mib_list_node::prev	./net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *prev;  $/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node	access:public
mib_list_rootnode	./net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_rootnode$/;"	s
mib_list_rootnode::count	./net/lwip/include/lwip/snmp_structs.h	/^  u16_t count;$/;"	m	struct:mib_list_rootnode	access:public
mib_list_rootnode::get_object_def	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_list_rootnode	access:public
mib_list_rootnode::get_value	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode	access:public
mib_list_rootnode::head	./net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *head;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node	access:public
mib_list_rootnode::maxlength	./net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_list_rootnode	access:public
mib_list_rootnode::node_type	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_list_rootnode	access:public
mib_list_rootnode::set_test	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode	access:public
mib_list_rootnode::set_value	./net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode	access:public
mib_list_rootnode::tail	./net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *tail;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node	access:public
mib_node	./net/lwip/include/lwip/snmp_structs.h	/^struct mib_node$/;"	s
mib_node::get_object_def	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_node	access:public
mib_node::get_value	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node	access:public
mib_node::maxlength	./net/lwip/include/lwip/snmp_structs.h	/^  const u16_t maxlength;$/;"	m	struct:mib_node	access:public
mib_node::node_type	./net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_node	access:public
mib_node::set_test	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node	access:public
mib_node::set_value	./net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);  $/;"	m	struct:mib_node	access:public
mib_ram_array_node	./net/lwip/include/lwip/snmp_structs.h	/^struct mib_ram_array_node$/;"	s
mib_ram_array_node::get_object_def	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_object_def)(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	m	struct:mib_ram_array_node	access:public
mib_ram_array_node::get_value	./net/lwip/include/lwip/snmp_structs.h	/^  void (*get_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node	access:public
mib_ram_array_node::maxlength	./net/lwip/include/lwip/snmp_structs.h	/^  u16_t maxlength;$/;"	m	struct:mib_ram_array_node	access:public
mib_ram_array_node::node_type	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_ram_array_node	access:public
mib_ram_array_node::nptr	./net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node **nptr;$/;"	m	struct:mib_ram_array_node	typeref:struct:mib_ram_array_node::mib_node	access:public
mib_ram_array_node::objid	./net/lwip/include/lwip/snmp_structs.h	/^  s32_t *objid;$/;"	m	struct:mib_ram_array_node	access:public
mib_ram_array_node::set_test	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node	access:public
mib_ram_array_node::set_value	./net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node	access:public
mib_scalar_node	./net/lwip/include/lwip/snmp_structs.h	/^typedef struct mib_node mib_scalar_node;$/;"	t	typeref:struct:mib_node
mmio_map_region	./kern/pmap.h	/^void *	mmio_map_region(physaddr_t pa, size_t size);$/;"	p	signature:(physaddr_t pa, size_t size)
mon_backtrace	./kern/monitor.h	/^int mon_backtrace(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_help	./kern/monitor.h	/^int mon_help(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
mon_kerninfo	./kern/monitor.h	/^int mon_kerninfo(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
monitor	./kern/monitor.h	/^void monitor(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
mp_init	./kern/cpu.h	/^void mp_init(void);$/;"	p	signature:(void)
mrru	./net/lwip/netif/ppp/lcp.h	/^    u_short mrru;                \/* Value of MRRU, and multilink enable *\/$/;"	m	struct:lcp_options	access:public
mru	./net/lwip/netif/ppp/lcp.h	/^    u_short mru;                 \/* Value of MRU *\/$/;"	m	struct:lcp_options	access:public
msecs	./net/lwip/include/lwip/tcpip.h	/^      u32_t msecs;$/;"	m	struct:tcpip_msg::__anon27::__anon30	access:public
msg	./net/lwip/include/lwip/api_msg.h	/^  struct api_msg_msg msg;$/;"	m	struct:api_msg	typeref:struct:api_msg::api_msg_msg	access:public
msg	./net/lwip/include/lwip/api_msg.h	/^  } msg;$/;"	m	struct:api_msg_msg	typeref:union:api_msg_msg::__anon17	access:public
msg	./net/lwip/include/lwip/netifapi.h	/^  struct netifapi_msg_msg msg;$/;"	m	struct:netifapi_msg	typeref:struct:netifapi_msg::netifapi_msg_msg	access:public
msg	./net/lwip/include/lwip/netifapi.h	/^  } msg;$/;"	m	struct:netifapi_msg_msg	typeref:union:netifapi_msg_msg::__anon31	access:public
msg	./net/lwip/include/lwip/tcpip.h	/^  } msg;$/;"	m	struct:tcpip_msg	typeref:union:tcpip_msg::__anon27	access:public
msg_in	./net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_in;$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg	access:public
msg_out	./net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *msg_out; \/* outgoing msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg	access:public
mss	./net/lwip/include/lwip/tcp.h	/^  u16_t mss;   \/* maximum segment size *\/$/;"	m	struct:tcp_pcb	access:public
mtu	./net/lwip/include/lwip/netif.h	/^  u16_t mtu;$/;"	m	struct:netif	access:public
multiaddr	./net/lwip/include/lwip/api_msg.h	/^      struct ip_addr *multiaddr;$/;"	m	struct:api_msg_msg::__anon17::__anon23	typeref:struct:api_msg_msg::__anon17::__anon23::ip_addr	access:public
multicast_ip	./net/lwip/include/lwip/udp.h	/^  struct ip_addr multicast_ip;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::ip_addr	access:public
n	./net/lwip/include/lwip/api_msg.h	/^    } n;$/;"	m	union:api_msg_msg::__anon17	typeref:struct:api_msg_msg::__anon17::__anon18	access:public
n_desc	./inc/stab.h	/^	uint16_t n_desc;        \/\/ description field$/;"	m	struct:Stab	access:public
n_other	./inc/stab.h	/^	uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:Stab	access:public
n_strx	./inc/stab.h	/^	uint32_t n_strx;	\/\/ index into string table of name$/;"	m	struct:Stab	access:public
n_type	./inc/stab.h	/^	uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:Stab	access:public
n_value	./inc/stab.h	/^	uintptr_t n_value;	\/\/ value of symbol$/;"	m	struct:Stab	access:public
nakci	./net/lwip/netif/ppp/fsm.h	/^  int  (*nakci)(fsm*, u_char*, int);                \/* NAK our Configuration Information *\/$/;"	m	struct:fsm_callbacks	access:public
nakloops	./net/lwip/netif/ppp/fsm.h	/^  int nakloops;                    \/* Number of nak loops since last ack *\/$/;"	m	struct:fsm	access:public
name	./kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock	access:public
name	./net/lwip/include/lwip/api_msg.h	/^  const char *name;$/;"	m	struct:dns_api_msg	access:public
name	./net/lwip/include/lwip/netif.h	/^  char name[2];$/;"	m	struct:netif	access:public
name	./net/lwip/netif/ppp/ppp.h	/^    char *name;         \/* Text name of protocol *\/$/;"	m	struct:protent	access:public
name_size	./net/lwip/jos/arch/threadq.h	/^enum { name_size = 32 };$/;"	e	enum:__anon35
neg_accompression	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_accompression : 1; \/* HDLC Address\/Control Field Compression? *\/$/;"	m	struct:lcp_options	access:public
neg_addr	./net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_addr      : 1; \/* Negotiate IP Address? *\/$/;"	m	struct:ipcp_options	access:public
neg_asyncmap	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_asyncmap      : 1; \/* Negotiate the async map? *\/$/;"	m	struct:lcp_options	access:public
neg_cbcp	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_cbcp          : 1; \/* Negotiate use of CBCP *\/$/;"	m	struct:lcp_options	access:public
neg_chap	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_chap          : 1; \/* Ask for CHAP authentication? *\/$/;"	m	struct:lcp_options	access:public
neg_endpoint	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_endpoint      : 1; \/* Negotiate endpoint discriminator *\/$/;"	m	struct:lcp_options	access:public
neg_lqr	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_lqr           : 1; \/* Negotiate use of Link Quality Reports *\/$/;"	m	struct:lcp_options	access:public
neg_magicnumber	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_magicnumber   : 1; \/* Ask for magic number? *\/$/;"	m	struct:lcp_options	access:public
neg_mrru	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_mrru          : 1; \/* Negotiate multilink MRRU *\/$/;"	m	struct:lcp_options	access:public
neg_mru	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_mru           : 1; \/* Negotiate the MRU? *\/$/;"	m	struct:lcp_options	access:public
neg_pcompression	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_pcompression  : 1; \/* HDLC Protocol Field Compression? *\/$/;"	m	struct:lcp_options	access:public
neg_ssnhf	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_ssnhf         : 1; \/* Negotiate short sequence numbers *\/$/;"	m	struct:lcp_options	access:public
neg_upap	./net/lwip/netif/ppp/lcp.h	/^    u_int neg_upap          : 1; \/* Ask for UPAP authentication? *\/$/;"	m	struct:lcp_options	access:public
neg_vj	./net/lwip/netif/ppp/ipcp.h	/^  u_int   neg_vj        : 1; \/* Van Jacobson Compression? *\/$/;"	m	struct:ipcp_options	access:public
netbuf	./net/lwip/include/lwip/netbuf.h	/^struct netbuf {$/;"	s
netbuf::addr	./net/lwip/include/lwip/netbuf.h	/^  struct ip_addr *addr;$/;"	m	struct:netbuf	typeref:struct:netbuf::ip_addr	access:public
netbuf::p	./net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::pbuf	access:public
netbuf::port	./net/lwip/include/lwip/netbuf.h	/^  u16_t port;$/;"	m	struct:netbuf	access:public
netbuf::ptr	./net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::	access:public
netbuf_alloc	./net/lwip/include/lwip/netbuf.h	/^void *            netbuf_alloc    (struct netbuf *buf, u16_t size);$/;"	p	signature:(struct netbuf *buf, u16_t size)
netbuf_chain	./net/lwip/include/lwip/netbuf.h	/^void              netbuf_chain    (struct netbuf *head,$/;"	p	signature:(struct netbuf *head, struct netbuf *tail)
netbuf_copy	./net/lwip/include/lwip/netbuf.h	67;"	d
netbuf_copy_partial	./net/lwip/include/lwip/netbuf.h	65;"	d
netbuf_data	./net/lwip/include/lwip/netbuf.h	/^err_t             netbuf_data     (struct netbuf *buf,$/;"	p	signature:(struct netbuf *buf, void **dataptr, u16_t *len)
netbuf_delete	./net/lwip/include/lwip/netbuf.h	/^void              netbuf_delete   (struct netbuf *buf);$/;"	p	signature:(struct netbuf *buf)
netbuf_first	./net/lwip/include/lwip/netbuf.h	/^void              netbuf_first    (struct netbuf *buf);$/;"	p	signature:(struct netbuf *buf)
netbuf_free	./net/lwip/include/lwip/netbuf.h	/^void              netbuf_free     (struct netbuf *buf);$/;"	p	signature:(struct netbuf *buf)
netbuf_fromaddr	./net/lwip/include/lwip/netbuf.h	69;"	d
netbuf_fromport	./net/lwip/include/lwip/netbuf.h	70;"	d
netbuf_len	./net/lwip/include/lwip/netbuf.h	/^u16_t             netbuf_len      (struct netbuf *buf);$/;"	p	signature:(struct netbuf *buf)
netbuf_len	./net/lwip/include/lwip/netbuf.h	68;"	d
netbuf_new	./net/lwip/include/lwip/netbuf.h	/^struct netbuf *   netbuf_new      (void);$/;"	p	signature:(void)
netbuf_next	./net/lwip/include/lwip/netbuf.h	/^s8_t              netbuf_next     (struct netbuf *buf);$/;"	p	signature:(struct netbuf *buf)
netbuf_ref	./net/lwip/include/lwip/netbuf.h	/^err_t             netbuf_ref      (struct netbuf *buf,$/;"	p	signature:(struct netbuf *buf, const void *dataptr, u16_t size)
netconn	./net/lwip/include/lwip/api.h	/^struct netconn {$/;"	s
netconn::__anon34::ip	./net/lwip/include/lwip/api.h	/^    struct ip_pcb  *ip;$/;"	m	union:netconn::__anon34	typeref:struct:netconn::__anon34::ip_pcb	access:public
netconn::__anon34::raw	./net/lwip/include/lwip/api.h	/^    struct raw_pcb *raw;$/;"	m	union:netconn::__anon34	typeref:struct:netconn::__anon34::raw_pcb	access:public
netconn::__anon34::tcp	./net/lwip/include/lwip/api.h	/^    struct tcp_pcb *tcp;$/;"	m	union:netconn::__anon34	typeref:struct:netconn::__anon34::tcp_pcb	access:public
netconn::__anon34::udp	./net/lwip/include/lwip/api.h	/^    struct udp_pcb *udp;$/;"	m	union:netconn::__anon34	typeref:struct:netconn::__anon34::udp_pcb	access:public
netconn::acceptmbox	./net/lwip/include/lwip/api.h	/^  sys_mbox_t acceptmbox;$/;"	m	struct:netconn	access:public
netconn::callback	./net/lwip/include/lwip/api.h	/^  netconn_callback callback;$/;"	m	struct:netconn	access:public
netconn::err	./net/lwip/include/lwip/api.h	/^  err_t err;$/;"	m	struct:netconn	access:public
netconn::op_completed	./net/lwip/include/lwip/api.h	/^  sys_sem_t op_completed;$/;"	m	struct:netconn	access:public
netconn::pcb	./net/lwip/include/lwip/api.h	/^  } pcb;$/;"	m	struct:netconn	typeref:union:netconn::__anon34	access:public
netconn::recv_avail	./net/lwip/include/lwip/api.h	/^  u16_t recv_avail;$/;"	m	struct:netconn	access:public
netconn::recv_bufsize	./net/lwip/include/lwip/api.h	/^  int recv_bufsize;$/;"	m	struct:netconn	access:public
netconn::recv_timeout	./net/lwip/include/lwip/api.h	/^  int recv_timeout;$/;"	m	struct:netconn	access:public
netconn::recvmbox	./net/lwip/include/lwip/api.h	/^  sys_mbox_t recvmbox;$/;"	m	struct:netconn	access:public
netconn::socket	./net/lwip/include/lwip/api.h	/^  int socket;$/;"	m	struct:netconn	access:public
netconn::state	./net/lwip/include/lwip/api.h	/^  enum netconn_state state;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_state	access:public
netconn::type	./net/lwip/include/lwip/api.h	/^  enum netconn_type type;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_type	access:public
netconn::write_delayed	./net/lwip/include/lwip/api.h	/^  u8_t write_delayed;$/;"	m	struct:netconn	access:public
netconn::write_msg	./net/lwip/include/lwip/api.h	/^  struct api_msg_msg *write_msg;$/;"	m	struct:netconn	typeref:struct:netconn::api_msg_msg	access:public
netconn::write_offset	./net/lwip/include/lwip/api.h	/^  int write_offset;$/;"	m	struct:netconn	access:public
netconn_accept	./net/lwip/include/lwip/api.h	/^struct netconn *  netconn_accept  (struct netconn *conn);$/;"	p	signature:(struct netconn *conn)
netconn_addr	./net/lwip/include/lwip/api.h	176;"	d
netconn_alloc	./net/lwip/include/lwip/api_msg.h	/^struct netconn* netconn_alloc(enum netconn_type t, netconn_callback callback);$/;"	p	signature:(enum netconn_type t, netconn_callback callback)
netconn_bind	./net/lwip/include/lwip/api.h	/^err_t             netconn_bind    (struct netconn *conn,$/;"	p	signature:(struct netconn *conn, struct ip_addr *addr, u16_t port)
netconn_callback	./net/lwip/include/lwip/api.h	/^typedef void (* netconn_callback)(struct netconn *, enum netconn_evt, u16_t len);$/;"	t
netconn_close	./net/lwip/include/lwip/api.h	/^err_t             netconn_close   (struct netconn *conn);$/;"	p	signature:(struct netconn *conn)
netconn_connect	./net/lwip/include/lwip/api.h	/^err_t             netconn_connect (struct netconn *conn,$/;"	p	signature:(struct netconn *conn, struct ip_addr *addr, u16_t port)
netconn_delete	./net/lwip/include/lwip/api.h	/^err_t             netconn_delete  (struct netconn *conn);$/;"	p	signature:(struct netconn *conn)
netconn_disconnect	./net/lwip/include/lwip/api.h	/^err_t             netconn_disconnect (struct netconn *conn);$/;"	p	signature:(struct netconn *conn)
netconn_err	./net/lwip/include/lwip/api.h	208;"	d
netconn_evt	./net/lwip/include/lwip/api.h	/^enum netconn_evt {$/;"	g
netconn_free	./net/lwip/include/lwip/api_msg.h	/^void netconn_free(struct netconn *conn);$/;"	p	signature:(struct netconn *conn)
netconn_getaddr	./net/lwip/include/lwip/api.h	/^err_t             netconn_getaddr (struct netconn *conn,$/;"	p	signature:(struct netconn *conn, struct ip_addr *addr, u16_t *port, u8_t local)
netconn_gethostbyname	./net/lwip/include/lwip/api.h	/^err_t             netconn_gethostbyname(const char *name, struct ip_addr *addr);$/;"	p	signature:(const char *name, struct ip_addr *addr)
netconn_igmp	./net/lwip/include/lwip/api.h	/^enum netconn_igmp {$/;"	g
netconn_join_leave_group	./net/lwip/include/lwip/api.h	/^err_t             netconn_join_leave_group (struct netconn *conn,$/;"	p	signature:(struct netconn *conn, struct ip_addr *multiaddr, struct ip_addr *interface, enum netconn_igmp join_or_leave)
netconn_listen	./net/lwip/include/lwip/api.h	186;"	d
netconn_listen_with_backlog	./net/lwip/include/lwip/api.h	/^err_t             netconn_listen_with_backlog(struct netconn *conn, u8_t backlog);$/;"	p	signature:(struct netconn *conn, u8_t backlog)
netconn_new	./net/lwip/include/lwip/api.h	163;"	d
netconn_new_with_callback	./net/lwip/include/lwip/api.h	164;"	d
netconn_new_with_proto_and_callback	./net/lwip/include/lwip/api.h	/^netconn *netconn_new_with_proto_and_callback(enum netconn_type t, u8_t proto,$/;"	p	signature:(enum netconn_type t, u8_t proto, netconn_callback callback)
netconn_peer	./net/lwip/include/lwip/api.h	175;"	d
netconn_recv	./net/lwip/include/lwip/api.h	/^struct netbuf *   netconn_recv    (struct netconn *conn);$/;"	p	signature:(struct netconn *conn)
netconn_recv_bufsize	./net/lwip/include/lwip/api.h	209;"	d
netconn_send	./net/lwip/include/lwip/api.h	/^err_t             netconn_send    (struct netconn *conn,$/;"	p	signature:(struct netconn *conn, struct netbuf *buf)
netconn_sendto	./net/lwip/include/lwip/api.h	/^err_t             netconn_sendto  (struct netconn *conn,$/;"	p	signature:(struct netconn *conn, struct netbuf *buf, struct ip_addr *addr, u16_t port)
netconn_state	./net/lwip/include/lwip/api.h	/^enum netconn_state {$/;"	g
netconn_type	./net/lwip/include/lwip/api.h	/^enum netconn_type netconn_type    (struct netconn *conn);$/;"	p	signature:(struct netconn *conn)
netconn_type	./net/lwip/include/lwip/api.h	/^enum netconn_type {$/;"	g
netconn_write	./net/lwip/include/lwip/api.h	/^err_t             netconn_write   (struct netconn *conn,$/;"	p	signature:(struct netconn *conn, const void *dataptr, int size, u8_t apiflags)
netif	./net/lwip/include/lwip/netif.h	/^struct netif {$/;"	s
netif	./net/lwip/include/lwip/netifapi.h	/^  struct netif *netif;$/;"	m	struct:netifapi_msg_msg	typeref:struct:netifapi_msg_msg::netif	access:public
netif	./net/lwip/include/lwip/tcpip.h	/^      struct netif *netif;$/;"	m	struct:tcpip_msg::__anon27::__anon28	typeref:struct:tcpip_msg::__anon27::__anon28::netif	access:public
netif::addr_hint	./net/lwip/include/lwip/netif.h	/^  u8_t *addr_hint;$/;"	m	struct:netif	access:public
netif::autoip	./net/lwip/include/lwip/netif.h	/^  struct autoip *autoip;$/;"	m	struct:netif	typeref:struct:netif::autoip	access:public
netif::dhcp	./net/lwip/include/lwip/netif.h	/^  struct dhcp *dhcp;$/;"	m	struct:netif	typeref:struct:netif::dhcp	access:public
netif::flags	./net/lwip/include/lwip/netif.h	/^  u8_t flags;$/;"	m	struct:netif	access:public
netif::gw	./net/lwip/include/lwip/netif.h	/^  struct ip_addr gw;$/;"	m	struct:netif	typeref:struct:netif::ip_addr	access:public
netif::hostname	./net/lwip/include/lwip/netif.h	/^  char*  hostname;$/;"	m	struct:netif	access:public
netif::hwaddr	./net/lwip/include/lwip/netif.h	/^  u8_t hwaddr[NETIF_MAX_HWADDR_LEN];$/;"	m	struct:netif	access:public
netif::hwaddr_len	./net/lwip/include/lwip/netif.h	/^  u8_t hwaddr_len;$/;"	m	struct:netif	access:public
netif::ifindiscards	./net/lwip/include/lwip/netif.h	/^  u32_t ifindiscards;$/;"	m	struct:netif	access:public
netif::ifinnucastpkts	./net/lwip/include/lwip/netif.h	/^  u32_t ifinnucastpkts;$/;"	m	struct:netif	access:public
netif::ifinoctets	./net/lwip/include/lwip/netif.h	/^  u32_t ifinoctets;$/;"	m	struct:netif	access:public
netif::ifinucastpkts	./net/lwip/include/lwip/netif.h	/^  u32_t ifinucastpkts;$/;"	m	struct:netif	access:public
netif::ifoutdiscards	./net/lwip/include/lwip/netif.h	/^  u32_t ifoutdiscards;$/;"	m	struct:netif	access:public
netif::ifoutnucastpkts	./net/lwip/include/lwip/netif.h	/^  u32_t ifoutnucastpkts;$/;"	m	struct:netif	access:public
netif::ifoutoctets	./net/lwip/include/lwip/netif.h	/^  u32_t ifoutoctets;$/;"	m	struct:netif	access:public
netif::ifoutucastpkts	./net/lwip/include/lwip/netif.h	/^  u32_t ifoutucastpkts;$/;"	m	struct:netif	access:public
netif::igmp_mac_filter	./net/lwip/include/lwip/netif.h	/^  err_t (*igmp_mac_filter)( struct netif *netif, struct ip_addr *group, u8_t action);$/;"	m	struct:netif	access:public
netif::input	./net/lwip/include/lwip/netif.h	/^  err_t (* input)(struct pbuf *p, struct netif *inp);$/;"	m	struct:netif	access:public
netif::ip_addr	./net/lwip/include/lwip/netif.h	/^  struct ip_addr ip_addr;$/;"	m	struct:netif	typeref:struct:netif::ip_addr	access:public
netif::link_callback	./net/lwip/include/lwip/netif.h	/^  void (* link_callback)(struct netif *netif);$/;"	m	struct:netif	access:public
netif::link_speed	./net/lwip/include/lwip/netif.h	/^  u32_t link_speed;$/;"	m	struct:netif	access:public
netif::link_type	./net/lwip/include/lwip/netif.h	/^  u8_t link_type;$/;"	m	struct:netif	access:public
netif::linkoutput	./net/lwip/include/lwip/netif.h	/^  err_t (* linkoutput)(struct netif *netif, struct pbuf *p);$/;"	m	struct:netif	access:public
netif::loop_cnt_current	./net/lwip/include/lwip/netif.h	/^  u16_t loop_cnt_current;$/;"	m	struct:netif	access:public
netif::loop_first	./net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_first;$/;"	m	struct:netif	typeref:struct:netif::pbuf	access:public
netif::loop_last	./net/lwip/include/lwip/netif.h	/^  struct pbuf *loop_last;$/;"	m	struct:netif	typeref:struct:netif::pbuf	access:public
netif::mtu	./net/lwip/include/lwip/netif.h	/^  u16_t mtu;$/;"	m	struct:netif	access:public
netif::name	./net/lwip/include/lwip/netif.h	/^  char name[2];$/;"	m	struct:netif	access:public
netif::netmask	./net/lwip/include/lwip/netif.h	/^  struct ip_addr netmask;$/;"	m	struct:netif	typeref:struct:netif::ip_addr	access:public
netif::next	./net/lwip/include/lwip/netif.h	/^  struct netif *next;$/;"	m	struct:netif	typeref:struct:netif::netif	access:public
netif::num	./net/lwip/include/lwip/netif.h	/^  u8_t num;$/;"	m	struct:netif	access:public
netif::output	./net/lwip/include/lwip/netif.h	/^  err_t (* output)(struct netif *netif, struct pbuf *p,$/;"	m	struct:netif	access:public
netif::state	./net/lwip/include/lwip/netif.h	/^  void *state;$/;"	m	struct:netif	access:public
netif::status_callback	./net/lwip/include/lwip/netif.h	/^  void (* status_callback)(struct netif *netif);$/;"	m	struct:netif	access:public
netif::ts	./net/lwip/include/lwip/netif.h	/^  u32_t ts;$/;"	m	struct:netif	access:public
netif_add	./net/lwip/include/lwip/netif.h	/^struct netif *netif_add(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	p	signature:(struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask, struct ip_addr *gw, void *state, err_t (* init)(struct netif *netif), err_t (* input)(struct pbuf *p, struct netif *netif))
netif_find	./net/lwip/include/lwip/netif.h	/^struct netif *netif_find(char *name);$/;"	p	signature:(char *name)
netif_init	./net/lwip/include/lwip/netif.h	205;"	d
netif_is_link_up	./net/lwip/include/lwip/netif.h	/^u8_t netif_is_link_up(struct netif *netif);$/;"	p	signature:(struct netif *netif)
netif_is_up	./net/lwip/include/lwip/netif.h	/^u8_t netif_is_up(struct netif *netif);$/;"	p	signature:(struct netif *netif)
netif_loop_output	./net/lwip/include/lwip/netif.h	/^err_t netif_loop_output(struct netif *netif, struct pbuf *p, struct ip_addr *dest_ip);$/;"	p	signature:(struct netif *netif, struct pbuf *p, struct ip_addr *dest_ip)
netif_poll	./net/lwip/include/lwip/netif.h	/^void netif_poll(struct netif *netif);$/;"	p	signature:(struct netif *netif)
netif_poll_all	./net/lwip/include/lwip/netif.h	/^void netif_poll_all(void);$/;"	p	signature:(void)
netif_remove	./net/lwip/include/lwip/netif.h	/^void netif_remove(struct netif * netif);$/;"	p	signature:(struct netif * netif)
netif_set_addr	./net/lwip/include/lwip/netif.h	/^netif_set_addr(struct netif *netif,struct ip_addr *ipaddr, struct ip_addr *netmask,$/;"	p	signature:(struct netif *netif,struct ip_addr *ipaddr, struct ip_addr *netmask, struct ip_addr *gw)
netif_set_default	./net/lwip/include/lwip/netif.h	/^void netif_set_default(struct netif *netif);$/;"	p	signature:(struct netif *netif)
netif_set_down	./net/lwip/include/lwip/netif.h	/^void netif_set_down(struct netif *netif);$/;"	p	signature:(struct netif *netif)
netif_set_gw	./net/lwip/include/lwip/netif.h	/^void netif_set_gw(struct netif *netif, struct ip_addr *gw);$/;"	p	signature:(struct netif *netif, struct ip_addr *gw)
netif_set_ipaddr	./net/lwip/include/lwip/netif.h	/^void netif_set_ipaddr(struct netif *netif, struct ip_addr *ipaddr);$/;"	p	signature:(struct netif *netif, struct ip_addr *ipaddr)
netif_set_link_callback	./net/lwip/include/lwip/netif.h	/^void netif_set_link_callback(struct netif *netif, void (* link_callback)(struct netif *netif));$/;"	p	signature:(struct netif *netif, void (* link_callback)(struct netif *netif))
netif_set_link_down	./net/lwip/include/lwip/netif.h	/^void netif_set_link_down(struct netif *netif);$/;"	p	signature:(struct netif *netif)
netif_set_link_up	./net/lwip/include/lwip/netif.h	/^void netif_set_link_up(struct netif *netif);$/;"	p	signature:(struct netif *netif)
netif_set_netmask	./net/lwip/include/lwip/netif.h	/^void netif_set_netmask(struct netif *netif, struct ip_addr *netmask);$/;"	p	signature:(struct netif *netif, struct ip_addr *netmask)
netif_set_status_callback	./net/lwip/include/lwip/netif.h	/^void netif_set_status_callback(struct netif *netif, void (* status_callback)(struct netif *netif));$/;"	p	signature:(struct netif *netif, void (* status_callback)(struct netif *netif))
netif_set_up	./net/lwip/include/lwip/netif.h	/^void netif_set_up(struct netif *netif);$/;"	p	signature:(struct netif *netif)
netifapi_autoip_start	./net/lwip/include/lwip/netifapi.h	91;"	d
netifapi_autoip_stop	./net/lwip/include/lwip/netifapi.h	92;"	d
netifapi_dhcp_start	./net/lwip/include/lwip/netifapi.h	89;"	d
netifapi_dhcp_stop	./net/lwip/include/lwip/netifapi.h	90;"	d
netifapi_msg	./net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg {$/;"	s
netifapi_msg::function	./net/lwip/include/lwip/netifapi.h	/^  void (* function)(struct netifapi_msg_msg *msg);$/;"	m	struct:netifapi_msg	access:public
netifapi_msg::msg	./net/lwip/include/lwip/netifapi.h	/^  struct netifapi_msg_msg msg;$/;"	m	struct:netifapi_msg	typeref:struct:netifapi_msg::netifapi_msg_msg	access:public
netifapi_msg_msg	./net/lwip/include/lwip/netifapi.h	/^struct netifapi_msg_msg {$/;"	s
netifapi_msg_msg::__anon31::__anon32::gw	./net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *gw;$/;"	m	struct:netifapi_msg_msg::__anon31::__anon32	typeref:struct:netifapi_msg_msg::__anon31::__anon32::ip_addr	access:public
netifapi_msg_msg::__anon31::__anon32::init	./net/lwip/include/lwip/netifapi.h	/^      err_t (* init) (struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon31::__anon32	access:public
netifapi_msg_msg::__anon31::__anon32::input	./net/lwip/include/lwip/netifapi.h	/^      err_t (* input)(struct pbuf *p, struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon31::__anon32	access:public
netifapi_msg_msg::__anon31::__anon32::ipaddr	./net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *ipaddr;$/;"	m	struct:netifapi_msg_msg::__anon31::__anon32	typeref:struct:netifapi_msg_msg::__anon31::__anon32::ip_addr	access:public
netifapi_msg_msg::__anon31::__anon32::netmask	./net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *netmask;$/;"	m	struct:netifapi_msg_msg::__anon31::__anon32	typeref:struct:netifapi_msg_msg::__anon31::__anon32::ip_addr	access:public
netifapi_msg_msg::__anon31::__anon32::state	./net/lwip/include/lwip/netifapi.h	/^      void *state;$/;"	m	struct:netifapi_msg_msg::__anon31::__anon32	access:public
netifapi_msg_msg::__anon31::__anon33::errtfunc	./net/lwip/include/lwip/netifapi.h	/^      err_t (* errtfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon31::__anon33	access:public
netifapi_msg_msg::__anon31::__anon33::voidfunc	./net/lwip/include/lwip/netifapi.h	/^      void  (* voidfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon31::__anon33	access:public
netifapi_msg_msg::__anon31::add	./net/lwip/include/lwip/netifapi.h	/^    } add;$/;"	m	union:netifapi_msg_msg::__anon31	typeref:struct:netifapi_msg_msg::__anon31::__anon32	access:public
netifapi_msg_msg::__anon31::common	./net/lwip/include/lwip/netifapi.h	/^    } common;$/;"	m	union:netifapi_msg_msg::__anon31	typeref:struct:netifapi_msg_msg::__anon31::__anon33	access:public
netifapi_msg_msg::err	./net/lwip/include/lwip/netifapi.h	/^  err_t err;$/;"	m	struct:netifapi_msg_msg	access:public
netifapi_msg_msg::msg	./net/lwip/include/lwip/netifapi.h	/^  } msg;$/;"	m	struct:netifapi_msg_msg	typeref:union:netifapi_msg_msg::__anon31	access:public
netifapi_msg_msg::netif	./net/lwip/include/lwip/netifapi.h	/^  struct netif *netif;$/;"	m	struct:netifapi_msg_msg	typeref:struct:netifapi_msg_msg::netif	access:public
netifapi_msg_msg::sem	./net/lwip/include/lwip/netifapi.h	/^  sys_sem_t sem;$/;"	m	struct:netifapi_msg_msg	access:public
netifapi_netif_add	./net/lwip/include/lwip/netifapi.h	/^err_t netifapi_netif_add       ( struct netif *netif,$/;"	p	signature:( struct netif *netif, struct ip_addr *ipaddr, struct ip_addr *netmask, struct ip_addr *gw, void *state, err_t (* init)(struct netif *netif), err_t (* input)(struct pbuf *p, struct netif *netif) )
netifapi_netif_common	./net/lwip/include/lwip/netifapi.h	/^err_t netifapi_netif_common    ( struct netif *netif,$/;"	p	signature:( struct netif *netif, void (* voidfunc)(struct netif *netif), err_t (* errtfunc)(struct netif *netif) )
netifapi_netif_remove	./net/lwip/include/lwip/netifapi.h	85;"	d
netifapi_netif_set_default	./net/lwip/include/lwip/netifapi.h	88;"	d
netifapi_netif_set_down	./net/lwip/include/lwip/netifapi.h	87;"	d
netifapi_netif_set_up	./net/lwip/include/lwip/netifapi.h	86;"	d
netifapimsg	./net/lwip/include/lwip/tcpip.h	/^    struct netifapi_msg *netifapimsg;$/;"	m	union:tcpip_msg::__anon27	typeref:struct:tcpip_msg::__anon27::netifapi_msg	access:public
netmask	./net/lwip/include/lwip/netif.h	/^  struct ip_addr netmask;$/;"	m	struct:netif	typeref:struct:netif::ip_addr	access:public
netmask	./net/lwip/include/lwip/netifapi.h	/^      struct ip_addr *netmask;$/;"	m	struct:netifapi_msg_msg::__anon31::__anon32	typeref:struct:netifapi_msg_msg::__anon31::__anon32::ip_addr	access:public
netmask	./net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::	access:public
next	./net/lwip/include/ipv4/lwip/igmp.h	/^  struct igmp_group *next;$/;"	m	struct:igmp_group	typeref:struct:igmp_group::igmp_group	access:public
next	./net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct ip_reassdata *next;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::ip_reassdata	access:public
next	./net/lwip/include/lwip/netif.h	/^  struct netif *next;$/;"	m	struct:netif	typeref:struct:netif::netif	access:public
next	./net/lwip/include/lwip/pbuf.h	/^  struct pbuf *next;$/;"	m	struct:pbuf	typeref:struct:pbuf::pbuf	access:public
next	./net/lwip/include/lwip/raw.h	/^  struct raw_pcb *next;$/;"	m	struct:raw_pcb	typeref:struct:raw_pcb::raw_pcb	access:public
next	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *next;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind	access:public
next	./net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *next;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node	access:public
next	./net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeo	typeref:struct:sys_timeo::sys_timeo	access:public
next	./net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeouts	typeref:struct:sys_timeouts::sys_timeo	access:public
next	./net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *next;    \/* used when putting segements on a queue *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_seg	access:public
next	./net/lwip/include/lwip/udp.h	/^  struct udp_pcb *next;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::udp_pcb	access:public
next	./net/lwip/include/netif/etharp.h	/^  struct etharp_q_entry *next;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::etharp_q_entry	access:public
nexthdr	./net/lwip/include/ipv6/lwip/ip.h	/^  u8_t nexthdr;             \/* next header *\/$/;"	m	struct:ip_hdr	access:public
node_type	./net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_array_node	access:public
node_type	./net/lwip/include/lwip/snmp_structs.h	/^  const u8_t node_type;$/;"	m	struct:mib_node	access:public
node_type	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_external_node	access:public
node_type	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_list_rootnode	access:public
node_type	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t node_type;$/;"	m	struct:mib_ram_array_node	access:public
noleafs_get_object_def	./net/lwip/include/lwip/snmp_structs.h	/^void noleafs_get_object_def(u8_t ident_len, s32_t *ident, struct obj_def *od);$/;"	p	signature:(u8_t ident_len, s32_t *ident, struct obj_def *od)
noleafs_get_value	./net/lwip/include/lwip/snmp_structs.h	/^void noleafs_get_value(struct obj_def *od, u16_t len, void *value);$/;"	p	signature:(struct obj_def *od, u16_t len, void *value)
noleafs_set_test	./net/lwip/include/lwip/snmp_structs.h	/^u8_t noleafs_set_test(struct obj_def *od, u16_t len, void *value);$/;"	p	signature:(struct obj_def *od, u16_t len, void *value)
noleafs_set_value	./net/lwip/include/lwip/snmp_structs.h	/^void noleafs_set_value(struct obj_def *od, u16_t len, void *value);$/;"	p	signature:(struct obj_def *od, u16_t len, void *value)
np_down	./net/lwip/netif/ppp/auth.h	/^void np_down (int, u16_t);$/;"	p	signature:(int, u16_t)
np_finished	./net/lwip/netif/ppp/auth.h	/^void np_finished (int, u16_t);$/;"	p	signature:(int, u16_t)
np_up	./net/lwip/netif/ppp/auth.h	/^void np_up (int, u16_t);$/;"	p	signature:(int, u16_t)
nptr	./net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node **nptr;$/;"	m	struct:mib_ram_array_node	typeref:struct:mib_ram_array_node::mib_node	access:public
nptr	./net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node *nptr;$/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_node	access:public
nptr	./net/lwip/include/lwip/snmp_structs.h	/^  struct mib_node* const *nptr;$/;"	m	struct:mib_array_node	access:public
nrtx	./net/lwip/include/lwip/tcp.h	/^  u8_t nrtx;    \/* number of retransmissions *\/$/;"	m	struct:tcp_pcb	access:public
nsipc_accept	./inc/lib.h	/^int     nsipc_accept(int s, struct sockaddr *addr, socklen_t *addrlen);$/;"	p	signature:(int s, struct sockaddr *addr, socklen_t *addrlen)
nsipc_bind	./inc/lib.h	/^int     nsipc_bind(int s, struct sockaddr *name, socklen_t namelen);$/;"	p	signature:(int s, struct sockaddr *name, socklen_t namelen)
nsipc_close	./inc/lib.h	/^int     nsipc_close(int s);$/;"	p	signature:(int s)
nsipc_connect	./inc/lib.h	/^int     nsipc_connect(int s, const struct sockaddr *name, socklen_t namelen);$/;"	p	signature:(int s, const struct sockaddr *name, socklen_t namelen)
nsipc_listen	./inc/lib.h	/^int     nsipc_listen(int s, int backlog);$/;"	p	signature:(int s, int backlog)
nsipc_recv	./inc/lib.h	/^int     nsipc_recv(int s, void *mem, int len, unsigned int flags);$/;"	p	signature:(int s, void *mem, int len, unsigned int flags)
nsipc_send	./inc/lib.h	/^int     nsipc_send(int s, const void *buf, int size, unsigned int flags);$/;"	p	signature:(int s, const void *buf, int size, unsigned int flags)
nsipc_shutdown	./inc/lib.h	/^int     nsipc_shutdown(int s, int how);$/;"	p	signature:(int s, int how)
nsipc_socket	./inc/lib.h	/^int     nsipc_socket(int domain, int type, int protocol);$/;"	p	signature:(int domain, int type, int protocol)
ntohl	./net/lwip/include/ipv4/lwip/inet.h	/^u32_t ntohl(u32_t x);$/;"	p	signature:(u32_t x)
ntohl	./net/lwip/include/ipv4/lwip/inet.h	62;"	d
ntohl	./net/lwip/include/ipv4/lwip/inet.h	73;"	d
ntohl	./net/lwip/include/ipv4/lwip/inet.h	80;"	d
ntohl	./net/lwip/include/ipv4/lwip/inet.h	86;"	d
ntohl	./net/lwip/include/ipv6/lwip/inet.h	/^u32_t ntohl(u32_t n);$/;"	p	signature:(u32_t n)
ntohs	./net/lwip/include/ipv4/lwip/inet.h	/^u16_t ntohs(u16_t x);$/;"	p	signature:(u16_t x)
ntohs	./net/lwip/include/ipv4/lwip/inet.h	59;"	d
ntohs	./net/lwip/include/ipv4/lwip/inet.h	71;"	d
ntohs	./net/lwip/include/ipv4/lwip/inet.h	78;"	d
ntohs	./net/lwip/include/ipv4/lwip/inet.h	84;"	d
ntohs	./net/lwip/include/ipv6/lwip/inet.h	/^u16_t ntohs(u16_t n);$/;"	p	signature:(u16_t n)
num	./net/lwip/include/lwip/netif.h	/^  u8_t num;$/;"	m	struct:netif	access:public
numloops	./net/lwip/netif/ppp/lcp.h	/^    int numloops;                \/* Number of loops during magic number neg. *\/$/;"	m	struct:lcp_options	access:public
obj_def	./net/lwip/include/lwip/snmp_structs.h	/^struct obj_def$/;"	s
obj_def::access	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t access;$/;"	m	struct:obj_def	access:public
obj_def::asn_type	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t asn_type;$/;"	m	struct:obj_def	access:public
obj_def::id_inst_len	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t  id_inst_len;$/;"	m	struct:obj_def	access:public
obj_def::id_inst_ptr	./net/lwip/include/lwip/snmp_structs.h	/^  s32_t *id_inst_ptr;$/;"	m	struct:obj_def	access:public
obj_def::instance	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t instance;$/;"	m	struct:obj_def	access:public
obj_def::v_len	./net/lwip/include/lwip/snmp_structs.h	/^  u16_t v_len;$/;"	m	struct:obj_def	access:public
objid	./net/lwip/include/lwip/snmp_structs.h	/^  const s32_t *objid;$/;"	m	struct:mib_array_node	access:public
objid	./net/lwip/include/lwip/snmp_structs.h	/^  s32_t *objid;$/;"	m	struct:mib_ram_array_node	access:public
objid	./net/lwip/include/lwip/snmp_structs.h	/^  s32_t objid;$/;"	m	struct:mib_list_node	access:public
off_t	./inc/types.h	/^typedef int32_t off_t;$/;"	t
offered_bc_addr	./net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_bc_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr	access:public
offered_dns_addr	./net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_dns_addr[DHCP_MAX_DNS]; \/* DNS server addresses *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr	access:public
offered_gw_addr	./net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_gw_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr	access:public
offered_ip_addr	./net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_ip_addr;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr	access:public
offered_sn_mask	./net/lwip/include/lwip/dhcp.h	/^  struct ip_addr offered_sn_mask;$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr	access:public
offered_t0_lease	./net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t0_lease; \/* lease period (in seconds) *\/$/;"	m	struct:dhcp	access:public
offered_t1_renew	./net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t1_renew; \/* recommended renew time (usually 50% of lease period) *\/$/;"	m	struct:dhcp	access:public
offered_t2_rebind	./net/lwip/include/lwip/dhcp.h	/^  u32_t offered_t2_rebind; \/* recommended rebind time (usually 66% of lease period)  *\/$/;"	m	struct:dhcp	access:public
offsetof	./inc/types.h	71;"	d
old_addrs	./net/lwip/netif/ppp/ipcp.h	/^  u_int   old_addrs     : 1; \/* Use old (IP-Addresses) option? *\/$/;"	m	struct:ipcp_options	access:public
old_vj	./net/lwip/netif/ppp/ipcp.h	/^  u_int   old_vj        : 1; \/* use old (short) form of VJ option? *\/$/;"	m	struct:ipcp_options	access:public
olen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t olen;$/;"	m	struct:snmp_varbind	access:public
olenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t olenlen;$/;"	m	struct:snmp_varbind	access:public
ooseq	./net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *ooseq;    \/* Received out of sequence segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg	access:public
op_completed	./net/lwip/include/lwip/api.h	/^  sys_sem_t op_completed;$/;"	m	struct:netconn	access:public
open	./inc/fs.h	/^	} open;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_open	access:public
open	./inc/lib.h	/^int	open(const char *path, int mode);$/;"	p	signature:(const char *path, int mode)
open	./net/lwip/netif/ppp/ppp.h	/^    void (*open) (int unit);$/;"	m	struct:protent	access:public
opencons	./inc/lib.h	/^int	opencons(void);$/;"	p	signature:(void)
opterr	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER opterr;           \/* Error in options. *\/$/;"	m	struct:stats_proto	access:public
options_in	./net/lwip/include/lwip/dhcp.h	/^  struct dhcp_msg *options_in; $/;"	m	struct:dhcp	typeref:struct:dhcp::dhcp_msg	access:public
options_in_len	./net/lwip/include/lwip/dhcp.h	/^  u16_t options_in_len;$/;"	m	struct:dhcp	access:public
options_out_len	./net/lwip/include/lwip/dhcp.h	/^  u16_t options_out_len; \/* outgoing msg options length *\/$/;"	m	struct:dhcp	access:public
our_ipaddr	./net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::ip_addr	access:public
our_name	./net/lwip/netif/ppp/ppp.h	/^  char our_name   [MAXNAMELEN   + 1]; \/* Our name for authentication purposes *\/$/;"	m	struct:ppp_settings	access:public
ouraddr	./net/lwip/netif/ppp/ipcp.h	/^  u32_t   ouraddr, hisaddr;  \/* Addresses in NETWORK BYTE ORDER *\/$/;"	m	struct:ipcp_options	access:public
outb	./inc/x86.h	/^outb(int port, uint8_t data)$/;"	f	signature:(int port, uint8_t data)
outb	./inc/x86.h	/^static __inline void outb(int port, uint8_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint8_t data)
outl	./inc/x86.h	/^outl(int port, uint32_t data)$/;"	f	signature:(int port, uint32_t data)
outl	./inc/x86.h	/^static __inline void outl(int port, uint32_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint32_t data)
output	./net/lwip/include/lwip/netif.h	/^  err_t (* output)(struct netif *netif, struct pbuf *p,$/;"	m	struct:netif	access:public
output	./net/ns.h	/^void output(envid_t ns_envid);$/;"	p	signature:(envid_t ns_envid)
outsb	./inc/x86.h	/^outsb(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsb	./inc/x86.h	/^static __inline void outsb(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsl	./inc/x86.h	/^outsl(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsl	./inc/x86.h	/^static __inline void outsl(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outsw	./inc/x86.h	/^outsw(int port, const void *addr, int cnt)$/;"	f	signature:(int port, const void *addr, int cnt)
outsw	./inc/x86.h	/^static __inline void outsw(int port, const void *addr, int cnt) __attribute__((always_inline));$/;"	p	signature:(int port, const void *addr, int cnt)
outvb	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root	access:public
outvb	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_varbind_root	access:public
outw	./inc/x86.h	/^outw(int port, uint16_t data)$/;"	f	signature:(int port, uint16_t data)
outw	./inc/x86.h	/^static __inline void outw(int port, uint16_t data) __attribute__((always_inline));$/;"	p	signature:(int port, uint16_t data)
p	./net/lwip/include/ipv4/lwip/ip_frag.h	/^  struct pbuf *p;$/;"	m	struct:ip_reassdata	typeref:struct:ip_reassdata::pbuf	access:public
p	./net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p;$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf	access:public
p	./net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::pbuf	access:public
p	./net/lwip/include/lwip/tcp.h	/^  struct pbuf *p;          \/* buffer containing data + TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::pbuf	access:public
p	./net/lwip/include/lwip/tcpip.h	/^      struct pbuf *p;$/;"	m	struct:tcpip_msg::__anon27::__anon28	typeref:struct:tcpip_msg::__anon27::__anon28::pbuf	access:public
p	./net/lwip/include/netif/etharp.h	/^  struct pbuf *p;$/;"	m	struct:etharp_q_entry	typeref:struct:etharp_q_entry::pbuf	access:public
p_align	./inc/elf.h	/^	uint32_t p_align;$/;"	m	struct:Proghdr	access:public
p_filesz	./inc/elf.h	/^	uint32_t p_filesz;$/;"	m	struct:Proghdr	access:public
p_flags	./inc/elf.h	/^	uint32_t p_flags;$/;"	m	struct:Proghdr	access:public
p_memsz	./inc/elf.h	/^	uint32_t p_memsz;$/;"	m	struct:Proghdr	access:public
p_offset	./inc/elf.h	/^	uint32_t p_offset;$/;"	m	struct:Proghdr	access:public
p_out	./net/lwip/include/lwip/dhcp.h	/^  struct pbuf *p_out; \/* pbuf of outcoming msg *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::pbuf	access:public
p_pa	./inc/elf.h	/^	uint32_t p_pa;$/;"	m	struct:Proghdr	access:public
p_type	./inc/elf.h	/^	uint32_t p_type;$/;"	m	struct:Proghdr	access:public
p_va	./inc/elf.h	/^	uint32_t p_va;$/;"	m	struct:Proghdr	access:public
pa2page	./kern/pmap.h	/^pa2page(physaddr_t pa)$/;"	f	signature:(physaddr_t pa)
packet	./kern/e1000.h	/^struct packet{$/;"	s
packet::buf	./kern/e1000.h	/^	char buf[PKT_SIZE];$/;"	m	struct:packet	access:public
page2kva	./kern/pmap.h	/^page2kva(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page2pa	./kern/pmap.h	/^page2pa(struct PageInfo *pp)$/;"	f	signature:(struct PageInfo *pp)
page_alloc	./kern/pmap.h	/^struct PageInfo *page_alloc(int alloc_flags);$/;"	p	signature:(int alloc_flags)
page_decref	./kern/pmap.h	/^void	page_decref(struct PageInfo *pp);$/;"	p	signature:(struct PageInfo *pp)
page_fault_handler	./kern/trap.h	/^void page_fault_handler(struct Trapframe *);$/;"	p	signature:(struct Trapframe *)
page_free	./kern/pmap.h	/^void	page_free(struct PageInfo *pp);$/;"	p	signature:(struct PageInfo *pp)
page_init	./kern/pmap.h	/^void	page_init(void);$/;"	p	signature:(void)
page_insert	./kern/pmap.h	/^int	page_insert(pde_t *pgdir, struct PageInfo *pp, void *va, int perm);$/;"	p	signature:(pde_t *pgdir, struct PageInfo *pp, void *va, int perm)
page_lookup	./kern/pmap.h	/^struct PageInfo *page_lookup(pde_t *pgdir, void *va, pte_t **pte_store);$/;"	p	signature:(pde_t *pgdir, void *va, pte_t **pte_store)
page_remove	./kern/pmap.h	/^void	page_remove(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
pageref	./inc/lib.h	/^int	pageref(void *addr);$/;"	p	signature:(void *addr)
panic	./inc/assert.h	12;"	d
parent_bridge	./kern/pci.h	/^    struct pci_func *parent_bridge;$/;"	m	struct:pci_bus	typeref:struct:pci_bus::pci_func	access:public
passive	./net/lwip/netif/ppp/lcp.h	/^    u_int passive           : 1; \/* Don't die if we don't get a response *\/$/;"	m	struct:lcp_options	access:public
passwd	./net/lwip/netif/ppp/ppp.h	/^  char passwd     [MAXSECRETLEN + 1]; \/* Password for PAP, secret for CHAP *\/$/;"	m	struct:ppp_settings	access:public
payload	./net/lwip/include/lwip/pbuf.h	/^  void *payload;$/;"	m	struct:pbuf	access:public
pbuf	./net/lwip/include/lwip/pbuf.h	/^struct pbuf {$/;"	s
pbuf::flags	./net/lwip/include/lwip/pbuf.h	/^  u8_t flags;$/;"	m	struct:pbuf	access:public
pbuf::len	./net/lwip/include/lwip/pbuf.h	/^  u16_t len;  $/;"	m	struct:pbuf	access:public
pbuf::next	./net/lwip/include/lwip/pbuf.h	/^  struct pbuf *next;$/;"	m	struct:pbuf	typeref:struct:pbuf::pbuf	access:public
pbuf::payload	./net/lwip/include/lwip/pbuf.h	/^  void *payload;$/;"	m	struct:pbuf	access:public
pbuf::ref	./net/lwip/include/lwip/pbuf.h	/^  u16_t ref;$/;"	m	struct:pbuf	access:public
pbuf::tot_len	./net/lwip/include/lwip/pbuf.h	/^  u16_t tot_len;$/;"	m	struct:pbuf	access:public
pbuf::type	./net/lwip/include/lwip/pbuf.h	/^  u8_t \/*pbuf_type*\/ type;$/;"	m	struct:pbuf	access:public
pbuf_alloc	./net/lwip/include/lwip/pbuf.h	/^struct pbuf *pbuf_alloc(pbuf_layer l, u16_t size, pbuf_type type);$/;"	p	signature:(pbuf_layer l, u16_t size, pbuf_type type)
pbuf_cat	./net/lwip/include/lwip/pbuf.h	/^void pbuf_cat(struct pbuf *head, struct pbuf *tail);$/;"	p	signature:(struct pbuf *head, struct pbuf *tail)
pbuf_chain	./net/lwip/include/lwip/pbuf.h	/^void pbuf_chain(struct pbuf *head, struct pbuf *tail);$/;"	p	signature:(struct pbuf *head, struct pbuf *tail)
pbuf_clen	./net/lwip/include/lwip/pbuf.h	/^u8_t pbuf_clen(struct pbuf *p);  $/;"	p	signature:(struct pbuf *p)
pbuf_copy	./net/lwip/include/lwip/pbuf.h	/^err_t pbuf_copy(struct pbuf *p_to, struct pbuf *p_from);$/;"	p	signature:(struct pbuf *p_to, struct pbuf *p_from)
pbuf_copy_partial	./net/lwip/include/lwip/pbuf.h	/^u16_t pbuf_copy_partial(struct pbuf *p, void *dataptr, u16_t len, u16_t offset);$/;"	p	signature:(struct pbuf *p, void *dataptr, u16_t len, u16_t offset)
pbuf_dechain	./net/lwip/include/lwip/pbuf.h	/^struct pbuf *pbuf_dechain(struct pbuf *p);$/;"	p	signature:(struct pbuf *p)
pbuf_free	./net/lwip/include/lwip/pbuf.h	/^u8_t pbuf_free(struct pbuf *p);$/;"	p	signature:(struct pbuf *p)
pbuf_free_callback	./net/lwip/include/lwip/tcpip.h	/^err_t pbuf_free_callback(struct pbuf *p);$/;"	p	signature:(struct pbuf *p)
pbuf_header	./net/lwip/include/lwip/pbuf.h	/^u8_t pbuf_header(struct pbuf *p, s16_t header_size);$/;"	p	signature:(struct pbuf *p, s16_t header_size)
pbuf_init	./net/lwip/include/lwip/pbuf.h	99;"	d
pbuf_layer	./net/lwip/include/lwip/pbuf.h	/^} pbuf_layer;$/;"	t	typeref:enum:__anon25
pbuf_realloc	./net/lwip/include/lwip/pbuf.h	/^void pbuf_realloc(struct pbuf *p, u16_t size); $/;"	p	signature:(struct pbuf *p, u16_t size)
pbuf_ref	./net/lwip/include/lwip/pbuf.h	/^void pbuf_ref(struct pbuf *p);$/;"	p	signature:(struct pbuf *p)
pbuf_ref_chain	./net/lwip/include/lwip/pbuf.h	/^void pbuf_ref_chain(struct pbuf *p);$/;"	p	signature:(struct pbuf *p)
pbuf_type	./net/lwip/include/lwip/pbuf.h	/^} pbuf_type;$/;"	t	typeref:enum:__anon26
pcb	./net/lwip/include/lwip/api.h	/^  } pcb;$/;"	m	struct:netconn	typeref:union:netconn::__anon34	access:public
pcb	./net/lwip/include/lwip/dhcp.h	/^  struct udp_pcb *pcb;$/;"	m	struct:dhcp	typeref:struct:dhcp::udp_pcb	access:public
pcb	./net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::udp_pcb	access:public
pcb	./net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::udp_pcb	access:public
pcbs	./net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb *pcbs;$/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb	access:public
pci_bus	./kern/pci.h	/^struct pci_bus {$/;"	s
pci_bus::busno	./kern/pci.h	/^    uint32_t busno;$/;"	m	struct:pci_bus	access:public
pci_bus::parent_bridge	./kern/pci.h	/^    struct pci_func *parent_bridge;$/;"	m	struct:pci_bus	typeref:struct:pci_bus::pci_func	access:public
pci_class_t	./kern/pcireg.h	/^typedef uint8_t pci_class_t;$/;"	t
pci_func	./kern/pci.h	/^struct pci_func {$/;"	s
pci_func::bus	./kern/pci.h	/^    struct pci_bus *bus;	\/\/ Primary bus for bridges$/;"	m	struct:pci_func	typeref:struct:pci_func::pci_bus	access:public
pci_func::dev	./kern/pci.h	/^    uint32_t dev;$/;"	m	struct:pci_func	access:public
pci_func::dev_class	./kern/pci.h	/^    uint32_t dev_class;$/;"	m	struct:pci_func	access:public
pci_func::dev_id	./kern/pci.h	/^    uint32_t dev_id;$/;"	m	struct:pci_func	access:public
pci_func::func	./kern/pci.h	/^    uint32_t func;$/;"	m	struct:pci_func	access:public
pci_func::irq_line	./kern/pci.h	/^    uint8_t irq_line;$/;"	m	struct:pci_func	access:public
pci_func::reg_base	./kern/pci.h	/^    uint32_t reg_base[6];$/;"	m	struct:pci_func	access:public
pci_func::reg_size	./kern/pci.h	/^    uint32_t reg_size[6];$/;"	m	struct:pci_func	access:public
pci_func_enable	./kern/pci.h	/^void pci_func_enable(struct pci_func *f);$/;"	p	signature:(struct pci_func *f)
pci_init	./kern/pci.h	/^int  pci_init(void);$/;"	p	signature:(void)
pci_interface_t	./kern/pcireg.h	/^typedef uint8_t pci_interface_t;$/;"	t
pci_intr_grant_t	./kern/pcireg.h	/^typedef uint8_t pci_intr_grant_t;$/;"	t
pci_intr_latency_t	./kern/pcireg.h	/^typedef uint8_t pci_intr_latency_t;$/;"	t
pci_intr_line_t	./kern/pcireg.h	/^typedef uint8_t pci_intr_line_t;$/;"	t
pci_intr_pin_t	./kern/pcireg.h	/^typedef uint8_t pci_intr_pin_t;$/;"	t
pci_product_id_t	./kern/pcireg.h	/^typedef uint16_t pci_product_id_t;$/;"	t
pci_res_bus	./kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon2
pci_res_io	./kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon2
pci_res_max	./kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon2
pci_res_mem	./kern/pci.h	/^enum { pci_res_bus, pci_res_mem, pci_res_io, pci_res_max };$/;"	e	enum:__anon2
pci_revision_t	./kern/pcireg.h	/^typedef uint8_t pci_revision_t;$/;"	t
pci_subclass_t	./kern/pcireg.h	/^typedef uint8_t pci_subclass_t;$/;"	t
pci_vendor_id_t	./kern/pcireg.h	/^typedef uint16_t pci_vendor_id_t;$/;"	t
pci_vpd	./kern/pcireg.h	/^struct pci_vpd {$/;"	s
pci_vpd::vpd_key0	./kern/pcireg.h	/^	uint8_t		vpd_key0;$/;"	m	struct:pci_vpd	access:public
pci_vpd::vpd_key1	./kern/pcireg.h	/^	uint8_t		vpd_key1;$/;"	m	struct:pci_vpd	access:public
pci_vpd::vpd_len	./kern/pcireg.h	/^	uint8_t		vpd_len;		\/* length of data only *\/$/;"	m	struct:pci_vpd	access:public
pci_vpd_largeres	./kern/pcireg.h	/^struct pci_vpd_largeres {$/;"	s
pci_vpd_largeres::vpdres_byte0	./kern/pcireg.h	/^	uint8_t		vpdres_byte0;$/;"	m	struct:pci_vpd_largeres	access:public
pci_vpd_largeres::vpdres_len_lsb	./kern/pcireg.h	/^	uint8_t		vpdres_len_lsb;		\/* length of data only *\/$/;"	m	struct:pci_vpd_largeres	access:public
pci_vpd_largeres::vpdres_len_msb	./kern/pcireg.h	/^	uint8_t		vpdres_len_msb;$/;"	m	struct:pci_vpd_largeres	access:public
pci_vpd_smallres	./kern/pcireg.h	/^struct pci_vpd_smallres {$/;"	s
pci_vpd_smallres::vpdres_byte0	./kern/pcireg.h	/^	uint8_t		vpdres_byte0;		\/* length of data + tag *\/$/;"	m	struct:pci_vpd_smallres	access:public
pcs	./kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock	access:public
pd_base	./inc/mmu.h	/^	uint32_t pd_base;		\/\/ Base address$/;"	m	struct:Pseudodesc	access:public
pd_lim	./inc/mmu.h	/^	uint16_t pd_lim;		\/\/ Limit$/;"	m	struct:Pseudodesc	access:public
pde_t	./inc/memlayout.h	/^typedef uint32_t pde_t;$/;"	t
pdulen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_resp_header_lengths	access:public
pdulen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_trap_header_lengths	access:public
pdulenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
pdulenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
perror	./net/lwip/jos/arch/perror.h	/^void perror(const char *s);$/;"	p	signature:(const char *s)
persist_backoff	./net/lwip/include/lwip/tcp.h	/^  u8_t persist_backoff;$/;"	m	struct:tcp_pcb	access:public
persist_cnt	./net/lwip/include/lwip/tcp.h	/^  u32_t persist_cnt;$/;"	m	struct:tcp_pcb	access:public
pgdir_walk	./kern/pmap.h	/^pte_t *pgdir_walk(pde_t *pgdir, const void *va, int create);$/;"	p	signature:(pde_t *pgdir, const void *va, int create)
physaddr_t	./inc/types.h	/^typedef uint32_t physaddr_t;$/;"	t
pic_init	./kern/picirq.h	/^void pic_init(void);$/;"	p	signature:(void)
pipe	./inc/lib.h	/^int	pipe(int pipefds[2]);$/;"	p	signature:(int pipefds[2])
pipeisclosed	./inc/lib.h	/^int	pipeisclosed(int pipefd);$/;"	p	signature:(int pipefd)
pkt	./inc/ns.h	/^	struct jif_pkt pkt;$/;"	m	union:Nsipc	typeref:struct:Nsipc::jif_pkt	access:public
poll	./net/lwip/include/lwip/tcp.h	/^  err_t (* poll)(void *arg, struct tcp_pcb *pcb);$/;"	m	struct:tcp_pcb	access:public
pollinterval	./net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb	access:public
polltmr	./net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb	access:public
port	./net/lwip/include/lwip/api_msg.h	/^      u16_t *port;$/;"	m	struct:api_msg_msg::__anon17::__anon20	access:public
port	./net/lwip/include/lwip/api_msg.h	/^      u16_t port;$/;"	m	struct:api_msg_msg::__anon17::__anon19	access:public
port	./net/lwip/include/lwip/netbuf.h	/^  u16_t port;$/;"	m	struct:netbuf	access:public
pp_link	./inc/memlayout.h	/^	struct PageInfo *pp_link;$/;"	m	struct:PageInfo	typeref:struct:PageInfo::PageInfo	access:public
pp_ref	./inc/memlayout.h	/^	uint16_t pp_ref;$/;"	m	struct:PageInfo	access:public
ppn_t	./inc/types.h	/^typedef uint32_t ppn_t;$/;"	t
pppAuthType	./net/lwip/netif/ppp/ppp.h	/^enum pppAuthType {$/;"	g
pppClose	./net/lwip/netif/ppp/ppp.h	/^int pppClose(int pd);$/;"	p	signature:(int pd)
pppIOCtl	./net/lwip/netif/ppp/ppp.h	/^int  pppIOCtl(int pd, int cmd, void *arg);$/;"	p	signature:(int pd, int cmd, void *arg)
pppInProcOverEthernet	./net/lwip/netif/ppp/ppp.h	/^void pppInProcOverEthernet(int pd, struct pbuf *pb);$/;"	p	signature:(int pd, struct pbuf *pb)
pppInit	./net/lwip/netif/ppp/ppp.h	/^err_t pppInit(void);$/;"	p	signature:(void)
pppLinkDown	./net/lwip/netif/ppp/ppp.h	/^void pppLinkDown(int pd);$/;"	p	signature:(int pd)
pppLinkTerminated	./net/lwip/netif/ppp/ppp.h	/^void pppLinkTerminated(int pd);$/;"	p	signature:(int pd)
pppMTU	./net/lwip/netif/ppp/ppp.h	/^u_int pppMTU(int pd);$/;"	p	signature:(int pd)
pppMainWakeup	./net/lwip/netif/ppp/ppp.h	/^void pppMainWakeup(int pd);$/;"	p	signature:(int pd)
pppOpen	./net/lwip/netif/ppp/ppp.h	393;"	d
pppOverEthernetOpen	./net/lwip/netif/ppp/ppp.h	/^int pppOverEthernetOpen(struct netif *ethif, const char *service_name, const char *concentrator_name, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx);$/;"	p	signature:(struct netif *ethif, const char *service_name, const char *concentrator_name, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)
pppOverSerialOpen	./net/lwip/netif/ppp/ppp.h	/^int pppOverSerialOpen(sio_fd_t fd, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx);$/;"	p	signature:(sio_fd_t fd, void (*linkStatusCB)(void *ctx, int errCode, void *arg), void *linkStatusCtx)
pppSetAuth	./net/lwip/netif/ppp/ppp.h	/^void pppSetAuth(enum pppAuthType authType, const char *user, const char *passwd);$/;"	p	signature:(enum pppAuthType authType, const char *user, const char *passwd)
pppSigHUP	./net/lwip/netif/ppp/ppp.h	/^void pppSigHUP(int pd);$/;"	p	signature:(int pd)
pppSingleBuf	./net/lwip/netif/ppp/ppp.h	/^struct pbuf *pppSingleBuf(struct pbuf *p);$/;"	p	signature:(struct pbuf *p)
pppWrite	./net/lwip/netif/ppp/ppp.h	/^int pppWrite(int pd, const u_char *s, int n);$/;"	p	signature:(int pd, const u_char *s, int n)
ppp_addrs	./net/lwip/netif/ppp/ppp.h	/^struct ppp_addrs {$/;"	s
ppp_addrs::dns1	./net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::	access:public
ppp_addrs::dns2	./net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::	access:public
ppp_addrs::his_ipaddr	./net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::	access:public
ppp_addrs::netmask	./net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::	access:public
ppp_addrs::our_ipaddr	./net/lwip/netif/ppp/ppp.h	/^  struct ip_addr our_ipaddr, his_ipaddr, netmask, dns1, dns2;$/;"	m	struct:ppp_addrs	typeref:struct:ppp_addrs::ip_addr	access:public
ppp_idle	./net/lwip/netif/ppp/ppp.h	/^struct ppp_idle {$/;"	s
ppp_idle::recv_idle	./net/lwip/netif/ppp/ppp.h	/^  u_short recv_idle;      \/* seconds since last NP packet received *\/$/;"	m	struct:ppp_idle	access:public
ppp_idle::xmit_idle	./net/lwip/netif/ppp/ppp.h	/^  u_short xmit_idle;      \/* seconds since last NP packet sent *\/$/;"	m	struct:ppp_idle	access:public
ppp_recv_config	./net/lwip/netif/ppp/ppp.h	/^void ppp_recv_config (int, int, u32_t, int, int);$/;"	p	signature:(int, int, u32_t, int, int)
ppp_send_config	./net/lwip/netif/ppp/ppp.h	/^void ppp_send_config (int, int, u32_t, int, int);$/;"	p	signature:(int, int, u32_t, int, int)
ppp_set_xaccm	./net/lwip/netif/ppp/ppp.h	/^void ppp_set_xaccm (int, ext_accm *);$/;"	p	signature:(int, ext_accm *)
ppp_settings	./net/lwip/netif/ppp/ppp.h	/^struct ppp_settings {$/;"	s
ppp_settings::auth_required	./net/lwip/netif/ppp/ppp.h	/^  u_int  auth_required     : 1;       \/* Peer is required to authenticate *\/$/;"	m	struct:ppp_settings	access:public
ppp_settings::disable_defaultip	./net/lwip/netif/ppp/ppp.h	/^  u_int  disable_defaultip : 1;       \/* Don't use hostname for default IP addrs *\/$/;"	m	struct:ppp_settings	access:public
ppp_settings::explicit_remote	./net/lwip/netif/ppp/ppp.h	/^  u_int  explicit_remote   : 1;       \/* remote_name specified with remotename opt *\/$/;"	m	struct:ppp_settings	access:public
ppp_settings::idle_time_limit	./net/lwip/netif/ppp/ppp.h	/^  u_short idle_time_limit;            \/* Shut down link if idle for this long *\/$/;"	m	struct:ppp_settings	access:public
ppp_settings::maxconnect	./net/lwip/netif/ppp/ppp.h	/^  int  maxconnect;                    \/* Maximum connect time (seconds) *\/$/;"	m	struct:ppp_settings	access:public
ppp_settings::our_name	./net/lwip/netif/ppp/ppp.h	/^  char our_name   [MAXNAMELEN   + 1]; \/* Our name for authentication purposes *\/$/;"	m	struct:ppp_settings	access:public
ppp_settings::passwd	./net/lwip/netif/ppp/ppp.h	/^  char passwd     [MAXSECRETLEN + 1]; \/* Password for PAP, secret for CHAP *\/$/;"	m	struct:ppp_settings	access:public
ppp_settings::refuse_chap	./net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_chap       : 1;       \/* Don't wanna auth. ourselves with CHAP *\/$/;"	m	struct:ppp_settings	access:public
ppp_settings::refuse_pap	./net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_pap        : 1;       \/* Don't wanna auth. ourselves with PAP *\/$/;"	m	struct:ppp_settings	access:public
ppp_settings::remote_name	./net/lwip/netif/ppp/ppp.h	/^  char remote_name[MAXNAMELEN   + 1]; \/* Peer's name for authentication *\/$/;"	m	struct:ppp_settings	access:public
ppp_settings::usehostname	./net/lwip/netif/ppp/ppp.h	/^  u_int  usehostname       : 1;       \/* Use hostname for our_name *\/$/;"	m	struct:ppp_settings	access:public
ppp_settings::usepeerdns	./net/lwip/netif/ppp/ppp.h	/^  u_int  usepeerdns        : 1;       \/* Ask peer for DNS adds *\/$/;"	m	struct:ppp_settings	access:public
ppp_settings::user	./net/lwip/netif/ppp/ppp.h	/^  char user       [MAXNAMELEN   + 1]; \/* Username for PAP *\/$/;"	m	struct:ppp_settings	access:public
ppp_trace	./net/lwip/netif/ppp/pppdebug.h	/^void ppp_trace(int level, const char *format,...);$/;"	p	signature:(int level, const char *format,...)
pppoe_connect	./net/lwip/include/netif/ppp_oe.h	/^int pppoe_connect(struct pppoe_softc *sc);$/;"	p	signature:(struct pppoe_softc *sc)
pppoe_create	./net/lwip/include/netif/ppp_oe.h	/^err_t pppoe_create(struct netif *ethif, int pd, void (*linkStatusCB)(int pd, int up), struct pppoe_softc **scptr);$/;"	p	signature:(struct netif *ethif, int pd, void (*linkStatusCB)(int pd, int up), struct pppoe_softc **scptr)
pppoe_data_input	./net/lwip/include/netif/ppp_oe.h	/^void pppoe_data_input(struct netif *netif, struct pbuf *p);$/;"	p	signature:(struct netif *netif, struct pbuf *p)
pppoe_destroy	./net/lwip/include/netif/ppp_oe.h	/^err_t pppoe_destroy(struct netif *ifp);$/;"	p	signature:(struct netif *ifp)
pppoe_disc_input	./net/lwip/include/netif/ppp_oe.h	/^void pppoe_disc_input(struct netif *netif, struct pbuf *p);$/;"	p	signature:(struct netif *netif, struct pbuf *p)
pppoe_disconnect	./net/lwip/include/netif/ppp_oe.h	/^void pppoe_disconnect(struct pppoe_softc *sc);$/;"	p	signature:(struct pppoe_softc *sc)
pppoe_init	./net/lwip/include/netif/ppp_oe.h	/^void pppoe_init(void);$/;"	p	signature:(void)
pppoe_xmit	./net/lwip/include/netif/ppp_oe.h	/^err_t pppoe_xmit(struct pppoe_softc *sc, struct pbuf *pb);$/;"	p	signature:(struct pppoe_softc *sc, struct pbuf *pb)
pppoehdr	./net/lwip/include/netif/ppp_oe.h	/^struct pppoehdr {$/;"	s
pppoehdr::PACK_STRUCT_FIELD	./net/lwip/include/netif/ppp_oe.h	/^	PACK_STRUCT_FIELD(u16_t plen);$/;"	p	struct:pppoehdr	access:public	signature:(u16_t plen)
pppoehdr::PACK_STRUCT_FIELD	./net/lwip/include/netif/ppp_oe.h	/^	PACK_STRUCT_FIELD(u16_t session);$/;"	p	struct:pppoehdr	access:public	signature:(u16_t session)
pppoehdr::PACK_STRUCT_FIELD	./net/lwip/include/netif/ppp_oe.h	/^	PACK_STRUCT_FIELD(u8_t code);$/;"	p	struct:pppoehdr	access:public	signature:(u8_t code)
pppoehdr::PACK_STRUCT_FIELD	./net/lwip/include/netif/ppp_oe.h	/^	PACK_STRUCT_FIELD(u8_t vertype);$/;"	p	struct:pppoehdr	access:public	signature:(u8_t vertype)
pppoetag	./net/lwip/include/netif/ppp_oe.h	/^struct pppoetag {$/;"	s
pppoetag::PACK_STRUCT_FIELD	./net/lwip/include/netif/ppp_oe.h	/^	PACK_STRUCT_FIELD(u16_t len);$/;"	p	struct:pppoetag	access:public	signature:(u16_t len)
pppoetag::PACK_STRUCT_FIELD	./net/lwip/include/netif/ppp_oe.h	/^	PACK_STRUCT_FIELD(u16_t tag);$/;"	p	struct:pppoetag	access:public	signature:(u16_t tag)
prev	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *prev;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind	access:public
prev	./net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *prev;  $/;"	m	struct:mib_list_node	typeref:struct:mib_list_node::mib_list_node	access:public
print_regs	./kern/trap.h	/^void print_regs(struct PushRegs *regs);$/;"	p	signature:(struct PushRegs *regs)
print_trapframe	./kern/trap.h	/^void print_trapframe(struct Trapframe *tf);$/;"	p	signature:(struct Trapframe *tf)
printf	./inc/stdio.h	/^int	printf(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
printfmt	./inc/stdio.h	/^void	printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, ...)
protent	./net/lwip/netif/ppp/ppp.h	/^struct protent {$/;"	s
protent::close	./net/lwip/netif/ppp/ppp.h	/^    void (*close) (int unit, char *reason);$/;"	m	struct:protent	access:public
protent::enabled_flag	./net/lwip/netif/ppp/ppp.h	/^    int  enabled_flag;      \/* 0 iff protocol is disabled *\/$/;"	m	struct:protent	access:public
protent::init	./net/lwip/netif/ppp/ppp.h	/^    void (*init) (int unit);$/;"	m	struct:protent	access:public
protent::input	./net/lwip/netif/ppp/ppp.h	/^    void (*input) (int unit, u_char *pkt, int len);$/;"	m	struct:protent	access:public
protent::lowerdown	./net/lwip/netif/ppp/ppp.h	/^    void (*lowerdown) (int unit);$/;"	m	struct:protent	access:public
protent::lowerup	./net/lwip/netif/ppp/ppp.h	/^    void (*lowerup) (int unit);$/;"	m	struct:protent	access:public
protent::name	./net/lwip/netif/ppp/ppp.h	/^    char *name;         \/* Text name of protocol *\/$/;"	m	struct:protent	access:public
protent::open	./net/lwip/netif/ppp/ppp.h	/^    void (*open) (int unit);$/;"	m	struct:protent	access:public
protent::protocol	./net/lwip/netif/ppp/ppp.h	/^    u_short protocol;       \/* PPP protocol number *\/$/;"	m	struct:protent	access:public
protent::protrej	./net/lwip/netif/ppp/ppp.h	/^    void (*protrej) (int unit);$/;"	m	struct:protent	access:public
proterr	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER proterr;          \/* Protocol error. *\/$/;"	m	struct:stats_proto	access:public
proto	./net/lwip/include/lwip/api_msg.h	/^      u8_t proto;$/;"	m	struct:api_msg_msg::__anon17::__anon18	access:public
proto_name	./net/lwip/netif/ppp/fsm.h	/^  char *proto_name;                                 \/* String name for protocol (for messages) *\/$/;"	m	struct:fsm_callbacks	access:public
protocol	./net/lwip/include/lwip/raw.h	/^  u8_t protocol;$/;"	m	struct:raw_pcb	access:public
protocol	./net/lwip/netif/ppp/fsm.h	/^  u_short protocol;                \/* Data Link Layer Protocol field value *\/$/;"	m	struct:fsm	access:public
protocol	./net/lwip/netif/ppp/ppp.h	/^    u_short protocol;       \/* PPP protocol number *\/$/;"	m	struct:protent	access:public
protrej	./net/lwip/netif/ppp/ppp.h	/^    void (*protrej) (int unit);$/;"	m	struct:protent	access:public
protreject	./net/lwip/netif/ppp/fsm.h	/^  void (*protreject)(int);                          \/* Called when Protocol-Reject received *\/$/;"	m	struct:fsm_callbacks	access:public
proxy_arp	./net/lwip/netif/ppp/ipcp.h	/^  u_int   proxy_arp     : 1; \/* Make proxy ARP entry for peer? *\/$/;"	m	struct:ipcp_options	access:public
pte_t	./inc/memlayout.h	/^typedef uint32_t pte_t;$/;"	t
ptr	./net/lwip/include/lwip/netbuf.h	/^  struct pbuf *p, *ptr;$/;"	m	struct:netbuf	typeref:struct:netbuf::	access:public
r	./net/lwip/include/lwip/api_msg.h	/^    } r;$/;"	m	union:api_msg_msg::__anon17	typeref:struct:api_msg_msg::__anon17::__anon22	access:public
raw	./net/lwip/include/lwip/api.h	/^    struct raw_pcb *raw;$/;"	m	union:netconn::__anon34	typeref:struct:netconn::__anon34::raw_pcb	access:public
raw_bind	./net/lwip/include/lwip/raw.h	/^err_t            raw_bind       (struct raw_pcb *pcb, struct ip_addr *ipaddr);$/;"	p	signature:(struct raw_pcb *pcb, struct ip_addr *ipaddr)
raw_connect	./net/lwip/include/lwip/raw.h	/^err_t            raw_connect    (struct raw_pcb *pcb, struct ip_addr *ipaddr);$/;"	p	signature:(struct raw_pcb *pcb, struct ip_addr *ipaddr)
raw_init	./net/lwip/include/lwip/raw.h	89;"	d
raw_input	./net/lwip/include/lwip/raw.h	/^u8_t             raw_input      (struct pbuf *p, struct netif *inp);$/;"	p	signature:(struct pbuf *p, struct netif *inp)
raw_new	./net/lwip/include/lwip/raw.h	/^struct raw_pcb * raw_new        (u8_t proto);$/;"	p	signature:(u8_t proto)
raw_pcb	./net/lwip/include/lwip/raw.h	/^struct raw_pcb {$/;"	s
raw_pcb::IP_PCB	./net/lwip/include/lwip/raw.h	/^  IP_PCB;$/;"	m	struct:raw_pcb	access:public
raw_pcb::next	./net/lwip/include/lwip/raw.h	/^  struct raw_pcb *next;$/;"	m	struct:raw_pcb	typeref:struct:raw_pcb::raw_pcb	access:public
raw_pcb::protocol	./net/lwip/include/lwip/raw.h	/^  u8_t protocol;$/;"	m	struct:raw_pcb	access:public
raw_pcb::recv	./net/lwip/include/lwip/raw.h	/^  u8_t (* recv)(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	m	struct:raw_pcb	access:public
raw_pcb::recv_arg	./net/lwip/include/lwip/raw.h	/^  void *recv_arg;$/;"	m	struct:raw_pcb	access:public
raw_recv	./net/lwip/include/lwip/raw.h	/^void             raw_recv       (struct raw_pcb *pcb,$/;"	p	signature:(struct raw_pcb *pcb, u8_t (* recv)(void *arg, struct raw_pcb *pcb, struct pbuf *p, struct ip_addr *addr), void *recv_arg)
raw_remove	./net/lwip/include/lwip/raw.h	/^void             raw_remove     (struct raw_pcb *pcb);$/;"	p	signature:(struct raw_pcb *pcb)
raw_send	./net/lwip/include/lwip/raw.h	/^err_t            raw_send       (struct raw_pcb *pcb, struct pbuf *p);$/;"	p	signature:(struct raw_pcb *pcb, struct pbuf *p)
raw_sendto	./net/lwip/include/lwip/raw.h	/^err_t            raw_sendto     (struct raw_pcb *pcb, struct pbuf *p, struct ip_addr *ipaddr);$/;"	p	signature:(struct raw_pcb *pcb, struct pbuf *p, struct ip_addr *ipaddr)
rcr0	./inc/x86.h	/^rcr0(void)$/;"	f	signature:(void)
rcr0	./inc/x86.h	/^static __inline uint32_t rcr0(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr2	./inc/x86.h	/^rcr2(void)$/;"	f	signature:(void)
rcr2	./inc/x86.h	/^static __inline uint32_t rcr2(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr3	./inc/x86.h	/^rcr3(void)$/;"	f	signature:(void)
rcr3	./inc/x86.h	/^static __inline uint32_t rcr3(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcr4	./inc/x86.h	/^rcr4(void)$/;"	f	signature:(void)
rcr4	./inc/x86.h	/^static __inline uint32_t rcr4(void) __attribute__((always_inline));$/;"	p	signature:(void)
rcv_ann_wnd	./net/lwip/include/lwip/tcp.h	/^  u16_t rcv_ann_wnd; \/* announced receive window *\/$/;"	m	struct:tcp_pcb	access:public
rcv_nxt	./net/lwip/include/lwip/tcp.h	/^  u32_t rcv_nxt;   \/* next seqno expected *\/$/;"	m	struct:tcp_pcb	access:public
rcv_wnd	./net/lwip/include/lwip/tcp.h	/^  u16_t rcv_wnd;   \/* receiver window *\/$/;"	m	struct:tcp_pcb	access:public
read	./inc/fs.h	/^	} read;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_read	access:public
read	./inc/lib.h	/^ssize_t	read(int fd, void *buf, size_t nbytes);$/;"	p	signature:(int fd, void *buf, size_t nbytes)
read	./net/lwip/include/lwip/sockets.h	345;"	d
readRet	./inc/fs.h	/^	} readRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_read	access:public
read_ebp	./inc/x86.h	/^read_ebp(void)$/;"	f	signature:(void)
read_ebp	./inc/x86.h	/^static __inline uint32_t read_ebp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_eflags	./inc/x86.h	/^read_eflags(void)$/;"	f	signature:(void)
read_eflags	./inc/x86.h	/^static __inline uint32_t read_eflags(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_esp	./inc/x86.h	/^read_esp(void)$/;"	f	signature:(void)
read_esp	./inc/x86.h	/^static __inline uint32_t read_esp(void) __attribute__((always_inline));$/;"	p	signature:(void)
read_tsc	./inc/x86.h	/^read_tsc(void)$/;"	f	signature:(void)
read_tsc	./inc/x86.h	/^static __inline uint64_t read_tsc(void) __attribute__((always_inline));$/;"	p	signature:(void)
readline	./inc/lib.h	/^char*	readline(const char *buf);$/;"	p	signature:(const char *buf)
readline	./inc/stdio.h	/^char*	readline(const char *prompt);$/;"	p	signature:(const char *prompt)
readn	./inc/lib.h	/^ssize_t	readn(int fd, void *buf, size_t nbytes);$/;"	p	signature:(int fd, void *buf, size_t nbytes)
recv	./inc/ns.h	/^	} recv;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_recv	access:public
recv	./net/lwip/include/lwip/raw.h	/^  u8_t (* recv)(void *arg, struct raw_pcb *pcb, struct pbuf *p,$/;"	m	struct:raw_pcb	access:public
recv	./net/lwip/include/lwip/sockets.h	336;"	d
recv	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER recv;             \/* Received packets. *\/$/;"	m	struct:stats_proto	access:public
recv	./net/lwip/include/lwip/tcp.h	/^  err_t (* recv)(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err);$/;"	m	struct:tcp_pcb	access:public
recv	./net/lwip/include/lwip/udp.h	/^  void (* recv)(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	m	struct:udp_pcb	access:public
recvRet	./inc/ns.h	/^	} recvRet;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsret_recv	access:public
recv_arg	./net/lwip/include/lwip/raw.h	/^  void *recv_arg;$/;"	m	struct:raw_pcb	access:public
recv_arg	./net/lwip/include/lwip/udp.h	/^  void *recv_arg;  $/;"	m	struct:udp_pcb	access:public
recv_avail	./net/lwip/include/lwip/api.h	/^  u16_t recv_avail;$/;"	m	struct:netconn	access:public
recv_bufsize	./net/lwip/include/lwip/api.h	/^  int recv_bufsize;$/;"	m	struct:netconn	access:public
recv_idle	./net/lwip/netif/ppp/ppp.h	/^  u_short recv_idle;      \/* seconds since last NP packet received *\/$/;"	m	struct:ppp_idle	access:public
recv_timeout	./net/lwip/include/lwip/api.h	/^  int recv_timeout;$/;"	m	struct:netconn	access:public
recvfrom	./net/lwip/include/lwip/sockets.h	337;"	d
recvmbox	./net/lwip/include/lwip/api.h	/^  sys_mbox_t recvmbox;$/;"	m	struct:netconn	access:public
ref	./net/lwip/include/lwip/pbuf.h	/^  u16_t ref;$/;"	m	struct:pbuf	access:public
refuse_chap	./net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_chap       : 1;       \/* Don't wanna auth. ourselves with CHAP *\/$/;"	m	struct:ppp_settings	access:public
refuse_pap	./net/lwip/netif/ppp/ppp.h	/^  u_int  refuse_pap        : 1;       \/* Don't wanna auth. ourselves with PAP *\/$/;"	m	struct:ppp_settings	access:public
refused_data	./net/lwip/include/lwip/tcp.h	/^  struct pbuf *refused_data; \/* Data previously received but not yet taken by upper layer *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::pbuf	access:public
reg_base	./kern/pci.h	/^    uint32_t reg_base[6];$/;"	m	struct:pci_func	access:public
reg_eax	./inc/trap.h	/^	uint32_t reg_eax;$/;"	m	struct:PushRegs	access:public
reg_ebp	./inc/trap.h	/^	uint32_t reg_ebp;$/;"	m	struct:PushRegs	access:public
reg_ebx	./inc/trap.h	/^	uint32_t reg_ebx;$/;"	m	struct:PushRegs	access:public
reg_ecx	./inc/trap.h	/^	uint32_t reg_ecx;$/;"	m	struct:PushRegs	access:public
reg_edi	./inc/trap.h	/^	uint32_t reg_edi;$/;"	m	struct:PushRegs	access:public
reg_edx	./inc/trap.h	/^	uint32_t reg_edx;$/;"	m	struct:PushRegs	access:public
reg_esi	./inc/trap.h	/^	uint32_t reg_esi;$/;"	m	struct:PushRegs	access:public
reg_oesp	./inc/trap.h	/^	uint32_t reg_oesp;		\/* Useless *\/$/;"	m	struct:PushRegs	access:public
reg_size	./kern/pci.h	/^    uint32_t reg_size[6];$/;"	m	struct:pci_func	access:public
rejci	./net/lwip/netif/ppp/fsm.h	/^  int  (*rejci)(fsm*, u_char*, int);                \/* Reject our Configuration Information *\/$/;"	m	struct:fsm_callbacks	access:public
remote_name	./net/lwip/netif/ppp/ppp.h	/^  char remote_name[MAXNAMELEN   + 1]; \/* Peer's name for authentication *\/$/;"	m	struct:ppp_settings	access:public
remote_port	./net/lwip/include/lwip/tcp.h	/^  u16_t remote_port;$/;"	m	struct:tcp_pcb	access:public
remote_port	./net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb	access:public
remove	./inc/fs.h	/^	} remove;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_remove	access:public
remove	./inc/lib.h	/^int	remove(const char *path);$/;"	p	signature:(const char *path)
report_rxed	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_rxed;      \/* *\/$/;"	m	struct:stats_igmp	access:public
report_sent	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_sent;      \/* *\/$/;"	m	struct:stats_igmp	access:public
req_addr	./net/lwip/netif/ppp/ipcp.h	/^  u_int   req_addr      : 1; \/* Ask peer to send IP address? *\/$/;"	m	struct:ipcp_options	access:public
req_addrlen	./inc/ns.h	/^		socklen_t req_addrlen;$/;"	m	struct:Nsipc::Nsreq_accept	access:public
req_backlog	./inc/ns.h	/^		int req_backlog;$/;"	m	struct:Nsipc::Nsreq_listen	access:public
req_buf	./inc/fs.h	/^		char req_buf[PGSIZE - (sizeof(int) + sizeof(size_t))];$/;"	m	struct:Fsipc::Fsreq_write	access:public
req_buf	./inc/ns.h	/^		char req_buf[0];$/;"	m	struct:Nsipc::Nsreq_send	access:public
req_dns1	./net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns1      : 1; \/* Ask peer to send primary DNS address? *\/$/;"	m	struct:ipcp_options	access:public
req_dns2	./net/lwip/netif/ppp/ipcp.h	/^  u_int   req_dns2      : 1; \/* Ask peer to send secondary DNS address? *\/$/;"	m	struct:ipcp_options	access:public
req_domain	./inc/ns.h	/^		int req_domain;$/;"	m	struct:Nsipc::Nsreq_socket	access:public
req_fileid	./inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_flush	access:public
req_fileid	./inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_read	access:public
req_fileid	./inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_set_size	access:public
req_fileid	./inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_stat	access:public
req_fileid	./inc/fs.h	/^		int req_fileid;$/;"	m	struct:Fsipc::Fsreq_write	access:public
req_flags	./inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_recv	access:public
req_flags	./inc/ns.h	/^		unsigned int req_flags;$/;"	m	struct:Nsipc::Nsreq_send	access:public
req_how	./inc/ns.h	/^		int req_how;$/;"	m	struct:Nsipc::Nsreq_shutdown	access:public
req_len	./inc/ns.h	/^		int req_len;$/;"	m	struct:Nsipc::Nsreq_recv	access:public
req_n	./inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_read	access:public
req_n	./inc/fs.h	/^		size_t req_n;$/;"	m	struct:Fsipc::Fsreq_write	access:public
req_name	./inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_bind	typeref:struct:Nsipc::Nsreq_bind::sockaddr	access:public
req_name	./inc/ns.h	/^		struct sockaddr req_name;$/;"	m	struct:Nsipc::Nsreq_connect	typeref:struct:Nsipc::Nsreq_connect::sockaddr	access:public
req_namelen	./inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_bind	access:public
req_namelen	./inc/ns.h	/^		socklen_t req_namelen;$/;"	m	struct:Nsipc::Nsreq_connect	access:public
req_omode	./inc/fs.h	/^		int req_omode;$/;"	m	struct:Fsipc::Fsreq_open	access:public
req_path	./inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_open	access:public
req_path	./inc/fs.h	/^		char req_path[MAXPATHLEN];$/;"	m	struct:Fsipc::Fsreq_remove	access:public
req_protocol	./inc/ns.h	/^		int req_protocol;$/;"	m	struct:Nsipc::Nsreq_socket	access:public
req_s	./inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_accept	access:public
req_s	./inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_bind	access:public
req_s	./inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_close	access:public
req_s	./inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_connect	access:public
req_s	./inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_listen	access:public
req_s	./inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_recv	access:public
req_s	./inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_send	access:public
req_s	./inc/ns.h	/^		int req_s;$/;"	m	struct:Nsipc::Nsreq_shutdown	access:public
req_size	./inc/fs.h	/^		off_t req_size;$/;"	m	struct:Fsipc::Fsreq_set_size	access:public
req_size	./inc/ns.h	/^		int req_size;$/;"	m	struct:Nsipc::Nsreq_send	access:public
req_type	./inc/ns.h	/^		int req_type;$/;"	m	struct:Nsipc::Nsreq_socket	access:public
reqci	./net/lwip/netif/ppp/fsm.h	/^  int  (*reqci)(fsm*, u_char*, int*, int);          \/* Request peer's Configuration Information *\/$/;"	m	struct:fsm_callbacks	access:public
reqid	./net/lwip/netif/ppp/fsm.h	/^  u_char reqid;                    \/* Current request id *\/$/;"	m	struct:fsm	access:public
request_timeout	./net/lwip/include/lwip/dhcp.h	/^  u16_t request_timeout; \/* #ticks with period DHCP_FINE_TIMER_SECS for request timeout *\/$/;"	m	struct:dhcp	access:public
resetci	./net/lwip/netif/ppp/fsm.h	/^  void (*resetci)(fsm*);                            \/* Reset our Configuration Information *\/$/;"	m	struct:fsm_callbacks	access:public
resp_id	./net/lwip/netif/ppp/chap.h	/^  u_char resp_id;                         \/* ID for response messages *\/$/;"	m	struct:chap_state	access:public
resp_length	./net/lwip/netif/ppp/chap.h	/^  u_char resp_length;                     \/* length of response *\/$/;"	m	struct:chap_state	access:public
resp_name	./net/lwip/netif/ppp/chap.h	/^  char *resp_name;                        \/* Our name to send with response *\/$/;"	m	struct:chap_state	access:public
resp_transmits	./net/lwip/netif/ppp/chap.h	/^  int resp_transmits;                     \/* Number of transmissions of response *\/$/;"	m	struct:chap_state	access:public
resp_type	./net/lwip/netif/ppp/chap.h	/^  u_char resp_type;                       \/* hash algorithm for responses *\/$/;"	m	struct:chap_state	access:public
response	./net/lwip/netif/ppp/chap.h	/^  u_char response[MAX_RESPONSE_LENGTH];   \/* Response to send *\/$/;"	m	struct:chap_state	access:public
restart	./net/lwip/netif/ppp/lcp.h	/^    u_int restart           : 1; \/* Restart vs. exit after close *\/$/;"	m	struct:lcp_options	access:public
ret_addr	./inc/ns.h	/^		struct sockaddr ret_addr;$/;"	m	struct:Nsipc::Nsret_accept	typeref:struct:Nsipc::Nsret_accept::sockaddr	access:public
ret_addrlen	./inc/ns.h	/^		socklen_t ret_addrlen;$/;"	m	struct:Nsipc::Nsret_accept	access:public
ret_buf	./inc/fs.h	/^		char ret_buf[PGSIZE];$/;"	m	struct:Fsipc::Fsret_read	access:public
ret_buf	./inc/ns.h	/^		char ret_buf[0];$/;"	m	struct:Nsipc::Nsret_recv	access:public
ret_isdir	./inc/fs.h	/^		int ret_isdir;$/;"	m	struct:Fsipc::Fsret_stat	access:public
ret_name	./inc/fs.h	/^		char ret_name[MAXNAMELEN];$/;"	m	struct:Fsipc::Fsret_stat	access:public
ret_size	./inc/fs.h	/^		off_t ret_size;$/;"	m	struct:Fsipc::Fsret_stat	access:public
retransmit	./net/lwip/netif/ppp/fsm.h	/^  void (*retransmit)(fsm*);                         \/* Retransmission is necessary *\/$/;"	m	struct:fsm_callbacks	access:public
retransmits	./net/lwip/netif/ppp/fsm.h	/^  int retransmits;                 \/* Number of retransmissions left *\/$/;"	m	struct:fsm	access:public
rhl	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_resp_header_lengths rhl;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_resp_header_lengths	access:public
rid	./net/lwip/include/lwip/snmp_msg.h	/^  s32_t rid;$/;"	m	struct:snmp_msg_pstat	access:public
ridlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t ridlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
ridlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t ridlenlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
rstate	./net/lwip/netif/ppp/vj.h	/^  struct cstate rstate[MAX_SLOTS]; \/* receive connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate	access:public
rt	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t rt;$/;"	m	struct:snmp_msg_pstat	access:public
rterr	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER rterr;            \/* Routing error. *\/$/;"	m	struct:stats_proto	access:public
rtime	./net/lwip/include/lwip/tcp.h	/^  s16_t rtime;$/;"	m	struct:tcp_pcb	access:public
rto	./net/lwip/include/lwip/tcp.h	/^  s16_t rto;    \/* retransmission time-out *\/$/;"	m	struct:tcp_pcb	access:public
rtseq	./net/lwip/include/lwip/tcp.h	/^  u32_t rtseq;  \/* sequence number being timed *\/$/;"	m	struct:tcp_pcb	access:public
rttest	./net/lwip/include/lwip/tcp.h	/^  u32_t rttest; \/* RTT estimate in 500ms ticks *\/$/;"	m	struct:tcp_pcb	access:public
s16_t	./net/lwip/jos/arch/cc.h	/^typedef int16_t s16_t;$/;"	t
s32_t	./net/lwip/jos/arch/cc.h	/^typedef int32_t s32_t;$/;"	t
s64_t	./net/lwip/jos/arch/cc.h	/^typedef int64_t s64_t;$/;"	t
s8_t	./net/lwip/jos/arch/cc.h	/^typedef int8_t s8_t;$/;"	t
s_addr	./net/lwip/include/ipv4/lwip/inet.h	/^  u32_t s_addr;$/;"	m	struct:in_addr	access:public
s_magic	./inc/fs.h	/^	uint32_t s_magic;		\/\/ Magic number: FS_MAGIC$/;"	m	struct:Super	access:public
s_nblocks	./inc/fs.h	/^	uint32_t s_nblocks;		\/\/ Total number of blocks on disk$/;"	m	struct:Super	access:public
s_root	./inc/fs.h	/^	struct File s_root;		\/\/ Root directory node$/;"	m	struct:Super	typeref:struct:Super::File	access:public
sa	./net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb	access:public
sa_data	./net/lwip/include/lwip/sockets.h	/^  char sa_data[14];$/;"	m	struct:sockaddr	access:public
sa_family	./net/lwip/include/lwip/sockets.h	/^  u8_t sa_family;$/;"	m	struct:sockaddr	access:public
sa_len	./net/lwip/include/lwip/sockets.h	/^  u8_t sa_len;$/;"	m	struct:sockaddr	access:public
sched_yield	./kern/sched.h	/^void sched_yield(void) __attribute__((noreturn));$/;"	p	signature:(void)
sd_avl	./inc/mmu.h	/^	unsigned sd_avl : 1;        \/\/ Unused (available for software use)$/;"	m	struct:Segdesc	access:public
sd_base_15_0	./inc/mmu.h	/^	unsigned sd_base_15_0 : 16; \/\/ Low bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_23_16	./inc/mmu.h	/^	unsigned sd_base_23_16 : 8; \/\/ Middle bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_base_31_24	./inc/mmu.h	/^	unsigned sd_base_31_24 : 8; \/\/ High bits of segment base address$/;"	m	struct:Segdesc	access:public
sd_db	./inc/mmu.h	/^	unsigned sd_db : 1;         \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:Segdesc	access:public
sd_dpl	./inc/mmu.h	/^	unsigned sd_dpl : 2;        \/\/ Descriptor Privilege Level$/;"	m	struct:Segdesc	access:public
sd_g	./inc/mmu.h	/^	unsigned sd_g : 1;          \/\/ Granularity: limit scaled by 4K when set$/;"	m	struct:Segdesc	access:public
sd_lim_15_0	./inc/mmu.h	/^	unsigned sd_lim_15_0 : 16;  \/\/ Low bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_lim_19_16	./inc/mmu.h	/^	unsigned sd_lim_19_16 : 4;  \/\/ High bits of segment limit$/;"	m	struct:Segdesc	access:public
sd_p	./inc/mmu.h	/^	unsigned sd_p : 1;          \/\/ Present$/;"	m	struct:Segdesc	access:public
sd_rsv1	./inc/mmu.h	/^	unsigned sd_rsv1 : 1;       \/\/ Reserved$/;"	m	struct:Segdesc	access:public
sd_s	./inc/mmu.h	/^	unsigned sd_s : 1;          \/\/ 0 = system, 1 = application$/;"	m	struct:Segdesc	access:public
sd_type	./inc/mmu.h	/^	unsigned sd_type : 4;       \/\/ Segment type (see STS_ constants)$/;"	m	struct:Segdesc	access:public
seek	./inc/lib.h	/^int	seek(int fd, off_t offset);$/;"	p	signature:(int fd, off_t offset)
seen_ack	./net/lwip/netif/ppp/fsm.h	/^  u_char seen_ack;                 \/* Have received valid Ack\/Nak\/Rej to Req *\/$/;"	m	struct:fsm	access:public
select	./net/lwip/include/lwip/sockets.h	341;"	d
sem	./net/lwip/include/lwip/api_msg.h	/^  sys_sem_t sem;$/;"	m	struct:dns_api_msg	access:public
sem	./net/lwip/include/lwip/netifapi.h	/^  sys_sem_t sem;$/;"	m	struct:netifapi_msg_msg	access:public
sem	./net/lwip/include/lwip/stats.h	/^  struct stats_syselem sem;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem	access:public
sem	./net/lwip/include/lwip/tcpip.h	/^  sys_sem_t *sem;$/;"	m	struct:tcpip_msg	access:public
send	./inc/ns.h	/^	} send;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_send	access:public
send	./net/lwip/include/lwip/sockets.h	338;"	d
sendto	./net/lwip/include/lwip/sockets.h	339;"	d
sent	./net/lwip/include/lwip/tcp.h	/^  err_t (* sent)(void *arg, struct tcp_pcb *pcb, u16_t space);$/;"	m	struct:tcp_pcb	access:public
sent_num	./net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t sent_num;            \/* sent number of probes or announces, dependent on state *\/$/;"	m	struct:autoip	access:public
seqlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
seqlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
seqlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind	access:public
seqlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind_root	access:public
seqlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
seqlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
seqlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind	access:public
seqlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind_root	access:public
seqno	./net/lwip/include/ipv6/lwip/icmp.h	/^  u16_t seqno;$/;"	m	struct:icmp_echo_hdr	access:public
serial_intr	./kern/console.h	/^void serial_intr(void); \/\/ irq 4$/;"	p	signature:(void)
server_ip_addr	./net/lwip/include/lwip/dhcp.h	/^  struct ip_addr server_ip_addr; \/* dhcp server address that offered this lease *\/$/;"	m	struct:dhcp	typeref:struct:dhcp::ip_addr	access:public
serverstate	./net/lwip/netif/ppp/chap.h	/^  int serverstate;                        \/* Server state *\/$/;"	m	struct:chap_state	access:public
set_pgfault_handler	./inc/lib.h	/^void	set_pgfault_handler(void (*handler)(struct UTrapframe *utf));$/;"	p	signature:(void (*handler)(struct UTrapframe *utf))
set_size	./inc/fs.h	/^	} set_size;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_set_size	access:public
set_test	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node	access:public
set_test	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node	access:public
set_test	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode	access:public
set_test	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_node	access:public
set_test	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node	access:public
set_test_a	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t (*set_test_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node	access:public
set_test_pc	./net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node	access:public
set_test_q	./net/lwip/include/lwip/snmp_structs.h	/^  void (*set_test_q)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node	access:public
set_value	./net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);  $/;"	m	struct:mib_node	access:public
set_value	./net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_array_node	access:public
set_value	./net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node	access:public
set_value	./net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_list_rootnode	access:public
set_value	./net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value)(struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_ram_array_node	access:public
set_value_a	./net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_a)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node	access:public
set_value_pc	./net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_pc)(u8_t rid, struct obj_def *od);$/;"	m	struct:mib_external_node	access:public
set_value_q	./net/lwip/include/lwip/snmp_structs.h	/^  void (*set_value_q)(u8_t rid, struct obj_def *od, u16_t len, void *value);$/;"	m	struct:mib_external_node	access:public
setsockopt	./net/lwip/include/lwip/sockets.h	333;"	d
sfork	./inc/lib.h	/^envid_t	sfork(void);	\/\/ Challenge!$/;"	p	signature:(void)
sh_addr	./inc/elf.h	/^	uint32_t sh_addr;$/;"	m	struct:Secthdr	access:public
sh_addralign	./inc/elf.h	/^	uint32_t sh_addralign;$/;"	m	struct:Secthdr	access:public
sh_entsize	./inc/elf.h	/^	uint32_t sh_entsize;$/;"	m	struct:Secthdr	access:public
sh_flags	./inc/elf.h	/^	uint32_t sh_flags;$/;"	m	struct:Secthdr	access:public
sh_info	./inc/elf.h	/^	uint32_t sh_info;$/;"	m	struct:Secthdr	access:public
sh_link	./inc/elf.h	/^	uint32_t sh_link;$/;"	m	struct:Secthdr	access:public
sh_name	./inc/elf.h	/^	uint32_t sh_name;$/;"	m	struct:Secthdr	access:public
sh_offset	./inc/elf.h	/^	uint32_t sh_offset;$/;"	m	struct:Secthdr	access:public
sh_size	./inc/elf.h	/^	uint32_t sh_size;$/;"	m	struct:Secthdr	access:public
sh_type	./inc/elf.h	/^	uint32_t sh_type;$/;"	m	struct:Secthdr	access:public
shutdown	./inc/lib.h	/^int     shutdown(int s, int how);$/;"	p	signature:(int s, int how)
shutdown	./inc/ns.h	/^	} shutdown;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_shutdown	access:public
shutdown	./net/lwip/include/lwip/sockets.h	328;"	d
sifaddr	./net/lwip/netif/ppp/ppp.h	/^int  sifaddr (int, u32_t, u32_t, u32_t, u32_t, u32_t);$/;"	p	signature:(int, u32_t, u32_t, u32_t, u32_t, u32_t)
sifdefaultroute	./net/lwip/netif/ppp/ppp.h	/^int  sifdefaultroute (int, u32_t, u32_t);$/;"	p	signature:(int, u32_t, u32_t)
sifdown	./net/lwip/netif/ppp/ppp.h	/^int  sifdown (int);$/;"	p	signature:(int)
sifnpmode	./net/lwip/netif/ppp/ppp.h	/^int  sifnpmode (int u, int proto, enum NPmode mode);$/;"	p	signature:(int u, int proto, enum NPmode mode)
sifup	./net/lwip/netif/ppp/ppp.h	/^int  sifup (int);$/;"	p	signature:(int)
sifvjcomp	./net/lwip/netif/ppp/ppp.h	/^int  sifvjcomp (int, int, int, int);$/;"	p	signature:(int, int, int, int)
silent	./net/lwip/netif/ppp/lcp.h	/^    u_int silent            : 1; \/* Wait for the other end to start first *\/$/;"	m	struct:lcp_options	access:public
sin_addr	./net/lwip/include/lwip/sockets.h	/^  struct in_addr sin_addr;$/;"	m	struct:sockaddr_in	typeref:struct:sockaddr_in::in_addr	access:public
sin_family	./net/lwip/include/lwip/sockets.h	/^  u8_t sin_family;$/;"	m	struct:sockaddr_in	access:public
sin_len	./net/lwip/include/lwip/sockets.h	/^  u8_t sin_len;$/;"	m	struct:sockaddr_in	access:public
sin_port	./net/lwip/include/lwip/sockets.h	/^  u16_t sin_port;$/;"	m	struct:sockaddr_in	access:public
sin_zero	./net/lwip/include/lwip/sockets.h	/^  char sin_zero[8];$/;"	m	struct:sockaddr_in	access:public
single_step	./kern/monitor.h	/^int single_step(int argc, char **argv, struct Trapframe *tf);$/;"	p	signature:(int argc, char **argv, struct Trapframe *tf)
sio_fd_t	./net/lwip/include/lwip/sio.h	/^typedef void * sio_fd_t;$/;"	t
sio_open	./net/lwip/include/lwip/sio.h	/^sio_fd_t sio_open(u8_t);$/;"	p	signature:(u8_t)
sio_read	./net/lwip/include/lwip/sio.h	/^u32_t sio_read(sio_fd_t, u8_t *, u32_t);$/;"	p	signature:(sio_fd_t, u8_t *, u32_t)
sio_read_abort	./net/lwip/include/lwip/sio.h	/^void sio_read_abort(sio_fd_t);$/;"	p	signature:(sio_fd_t)
sio_recv	./net/lwip/include/lwip/sio.h	/^u8_t sio_recv(sio_fd_t);$/;"	p	signature:(sio_fd_t)
sio_send	./net/lwip/include/lwip/sio.h	/^void sio_send(u8_t, sio_fd_t);$/;"	p	signature:(u8_t, sio_fd_t)
sio_write	./net/lwip/include/lwip/sio.h	/^u32_t sio_write(sio_fd_t, u8_t *, u32_t);$/;"	p	signature:(sio_fd_t, u8_t *, u32_t)
sip	./net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr sip;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::ip_addr	access:public
sip_raw	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t sip_raw[4];$/;"	m	struct:snmp_msg_trap	access:public
size_t	./inc/types.h	/^typedef uint32_t size_t;$/;"	t
slipif_init	./net/lwip/include/netif/slipif.h	/^err_t slipif_init(struct netif * netif);$/;"	p	signature:(struct netif * netif)
snd_buf	./net/lwip/include/lwip/tcp.h	/^  u16_t snd_buf;   \/* Available buffer space for sending (in bytes). *\/$/;"	m	struct:tcp_pcb	access:public
snd_lbb	./net/lwip/include/lwip/tcp.h	/^    snd_lbb;       \/* Sequence number of next byte to be buffered. *\/$/;"	m	struct:tcp_pcb	access:public
snd_max	./net/lwip/include/lwip/tcp.h	/^    snd_max;       \/* Highest seqno sent. *\/$/;"	m	struct:tcp_pcb	access:public
snd_nxt	./net/lwip/include/lwip/tcp.h	/^  u32_t snd_nxt,   \/* next seqno to be sent *\/$/;"	m	struct:tcp_pcb	access:public
snd_queuelen	./net/lwip/include/lwip/tcp.h	/^  u16_t snd_queuelen; \/* Available buffer space for sending (in tcp_segs). *\/$/;"	m	struct:tcp_pcb	access:public
snd_wl1	./net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb	access:public
snd_wl2	./net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb	access:public
snd_wnd	./net/lwip/include/lwip/tcp.h	/^  u16_t snd_wnd;   \/* sender window *\/$/;"	m	struct:tcp_pcb	access:public
snmp_add_ifinoctets	./net/lwip/include/lwip/snmp.h	/^void snmp_add_ifinoctets(struct netif *ni, u32_t value); $/;"	p	signature:(struct netif *ni, u32_t value)
snmp_add_ifinoctets	./net/lwip/include/lwip/snmp.h	242;"	d
snmp_add_ifoutoctets	./net/lwip/include/lwip/snmp.h	/^void snmp_add_ifoutoctets(struct netif *ni, u32_t value);$/;"	p	signature:(struct netif *ni, u32_t value)
snmp_add_ifoutoctets	./net/lwip/include/lwip/snmp.h	246;"	d
snmp_add_snmpintotalreqvars	./net/lwip/include/lwip/snmp.h	/^void snmp_add_snmpintotalreqvars(u8_t value);$/;"	p	signature:(u8_t value)
snmp_add_snmpintotalreqvars	./net/lwip/include/lwip/snmp.h	338;"	d
snmp_add_snmpintotalsetvars	./net/lwip/include/lwip/snmp.h	/^void snmp_add_snmpintotalsetvars(u8_t value);$/;"	p	signature:(u8_t value)
snmp_add_snmpintotalsetvars	./net/lwip/include/lwip/snmp.h	339;"	d
snmp_add_sysuptime	./net/lwip/include/lwip/snmp.h	/^void snmp_add_sysuptime(u32_t value);$/;"	p	signature:(u32_t value)
snmp_add_sysuptime	./net/lwip/include/lwip/snmp.h	235;"	d
snmp_asn1_dec_length	./net/lwip/include/lwip/snmp_asn1.h	/^err_t snmp_asn1_dec_length(struct pbuf *p, u16_t ofs, u8_t *octets_used, u16_t *length);$/;"	p	signature:(struct pbuf *p, u16_t ofs, u8_t *octets_used, u16_t *length)
snmp_asn1_dec_oid	./net/lwip/include/lwip/snmp_asn1.h	/^err_t snmp_asn1_dec_oid(struct pbuf *p, u16_t ofs, u16_t len, struct snmp_obj_id *oid);$/;"	p	signature:(struct pbuf *p, u16_t ofs, u16_t len, struct snmp_obj_id *oid)
snmp_asn1_dec_raw	./net/lwip/include/lwip/snmp_asn1.h	/^err_t snmp_asn1_dec_raw(struct pbuf *p, u16_t ofs, u16_t len, u16_t raw_len, u8_t *raw);$/;"	p	signature:(struct pbuf *p, u16_t ofs, u16_t len, u16_t raw_len, u8_t *raw)
snmp_asn1_dec_s32t	./net/lwip/include/lwip/snmp_asn1.h	/^err_t snmp_asn1_dec_s32t(struct pbuf *p, u16_t ofs, u16_t len, s32_t *value);$/;"	p	signature:(struct pbuf *p, u16_t ofs, u16_t len, s32_t *value)
snmp_asn1_dec_type	./net/lwip/include/lwip/snmp_asn1.h	/^err_t snmp_asn1_dec_type(struct pbuf *p, u16_t ofs, u8_t *type);$/;"	p	signature:(struct pbuf *p, u16_t ofs, u8_t *type)
snmp_asn1_dec_u32t	./net/lwip/include/lwip/snmp_asn1.h	/^err_t snmp_asn1_dec_u32t(struct pbuf *p, u16_t ofs, u16_t len, u32_t *value);$/;"	p	signature:(struct pbuf *p, u16_t ofs, u16_t len, u32_t *value)
snmp_asn1_enc_length	./net/lwip/include/lwip/snmp_asn1.h	/^err_t snmp_asn1_enc_length(struct pbuf *p, u16_t ofs, u16_t length);$/;"	p	signature:(struct pbuf *p, u16_t ofs, u16_t length)
snmp_asn1_enc_length_cnt	./net/lwip/include/lwip/snmp_asn1.h	/^void snmp_asn1_enc_length_cnt(u16_t length, u8_t *octets_needed);$/;"	p	signature:(u16_t length, u8_t *octets_needed)
snmp_asn1_enc_oid	./net/lwip/include/lwip/snmp_asn1.h	/^err_t snmp_asn1_enc_oid(struct pbuf *p, u16_t ofs, u8_t ident_len, s32_t *ident);$/;"	p	signature:(struct pbuf *p, u16_t ofs, u8_t ident_len, s32_t *ident)
snmp_asn1_enc_oid_cnt	./net/lwip/include/lwip/snmp_asn1.h	/^void snmp_asn1_enc_oid_cnt(u8_t ident_len, s32_t *ident, u16_t *octets_needed);$/;"	p	signature:(u8_t ident_len, s32_t *ident, u16_t *octets_needed)
snmp_asn1_enc_raw	./net/lwip/include/lwip/snmp_asn1.h	/^err_t snmp_asn1_enc_raw(struct pbuf *p, u16_t ofs, u8_t raw_len, u8_t *raw);$/;"	p	signature:(struct pbuf *p, u16_t ofs, u8_t raw_len, u8_t *raw)
snmp_asn1_enc_s32t	./net/lwip/include/lwip/snmp_asn1.h	/^err_t snmp_asn1_enc_s32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, s32_t value);$/;"	p	signature:(struct pbuf *p, u16_t ofs, u8_t octets_needed, s32_t value)
snmp_asn1_enc_s32t_cnt	./net/lwip/include/lwip/snmp_asn1.h	/^void snmp_asn1_enc_s32t_cnt(s32_t value, u16_t *octets_needed);$/;"	p	signature:(s32_t value, u16_t *octets_needed)
snmp_asn1_enc_type	./net/lwip/include/lwip/snmp_asn1.h	/^err_t snmp_asn1_enc_type(struct pbuf *p, u16_t ofs, u8_t type);$/;"	p	signature:(struct pbuf *p, u16_t ofs, u8_t type)
snmp_asn1_enc_u32t	./net/lwip/include/lwip/snmp_asn1.h	/^err_t snmp_asn1_enc_u32t(struct pbuf *p, u16_t ofs, u8_t octets_needed, u32_t value);$/;"	p	signature:(struct pbuf *p, u16_t ofs, u8_t octets_needed, u32_t value)
snmp_asn1_enc_u32t_cnt	./net/lwip/include/lwip/snmp_asn1.h	/^void snmp_asn1_enc_u32t_cnt(u32_t value, u16_t *octets_needed);$/;"	p	signature:(u32_t value, u16_t *octets_needed)
snmp_authfail_trap	./net/lwip/include/lwip/snmp_msg.h	/^void snmp_authfail_trap(void);$/;"	p	signature:(void)
snmp_coldstart_trap	./net/lwip/include/lwip/snmp_msg.h	/^void snmp_coldstart_trap(void);$/;"	p	signature:(void)
snmp_dec_iflist	./net/lwip/include/lwip/snmp.h	/^void snmp_dec_iflist(void);$/;"	p	signature:(void)
snmp_dec_iflist	./net/lwip/include/lwip/snmp.h	251;"	d
snmp_delete_arpidx_tree	./net/lwip/include/lwip/snmp.h	/^void snmp_delete_arpidx_tree(struct netif *ni, struct ip_addr *ip);$/;"	p	signature:(struct netif *ni, struct ip_addr *ip)
snmp_delete_arpidx_tree	./net/lwip/include/lwip/snmp.h	255;"	d
snmp_delete_ipaddridx_tree	./net/lwip/include/lwip/snmp.h	/^void snmp_delete_ipaddridx_tree(struct netif *ni);$/;"	p	signature:(struct netif *ni)
snmp_delete_ipaddridx_tree	./net/lwip/include/lwip/snmp.h	276;"	d
snmp_delete_iprteidx_tree	./net/lwip/include/lwip/snmp.h	/^void snmp_delete_iprteidx_tree(u8_t dflt, struct netif *ni);$/;"	p	signature:(u8_t dflt, struct netif *ni)
snmp_delete_iprteidx_tree	./net/lwip/include/lwip/snmp.h	278;"	d
snmp_delete_udpidx_tree	./net/lwip/include/lwip/snmp.h	/^void snmp_delete_udpidx_tree(struct udp_pcb *pcb);$/;"	p	signature:(struct udp_pcb *pcb)
snmp_delete_udpidx_tree	./net/lwip/include/lwip/snmp.h	324;"	d
snmp_expand_tree	./net/lwip/include/lwip/snmp_structs.h	/^struct mib_node* snmp_expand_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret);$/;"	p	signature:(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)
snmp_get_snmpenableauthentraps	./net/lwip/include/lwip/snmp.h	/^void snmp_get_snmpenableauthentraps(u8_t *value);$/;"	p	signature:(u8_t *value)
snmp_get_snmpenableauthentraps	./net/lwip/include/lwip/snmp.h	356;"	d
snmp_get_snmpgrpid_ptr	./net/lwip/include/lwip/snmp.h	/^void snmp_get_snmpgrpid_ptr(struct snmp_obj_id **oid);$/;"	p	signature:(struct snmp_obj_id **oid)
snmp_get_snmpgrpid_ptr	./net/lwip/include/lwip/snmp.h	354;"	d
snmp_get_sysobjid_ptr	./net/lwip/include/lwip/snmp.h	/^void snmp_get_sysobjid_ptr(struct snmp_obj_id **oid);$/;"	p	signature:(struct snmp_obj_id **oid)
snmp_get_sysobjid_ptr	./net/lwip/include/lwip/snmp.h	233;"	d
snmp_get_sysuptime	./net/lwip/include/lwip/snmp.h	/^void snmp_get_sysuptime(u32_t *value);$/;"	p	signature:(u32_t *value)
snmp_get_sysuptime	./net/lwip/include/lwip/snmp.h	236;"	d
snmp_ifType	./net/lwip/include/lwip/snmp.h	/^enum snmp_ifType {$/;"	g
snmp_ifType_basicISDN	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_basicISDN,$/;"	e	enum:snmp_ifType
snmp_ifType_ddn_x25	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ddn_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_ds1	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds1,                    \/* T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ds3	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ds3,                    \/* T-3 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_e1	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_e1,                     \/* european equiv. of T-1 *\/$/;"	e	enum:snmp_ifType
snmp_ifType_eon	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_eon,                    \/* CLNP over IP [11] *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_3Mbit	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_3Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_ethernet_csmacd	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ethernet_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_fddi	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_fddi,$/;"	e	enum:snmp_ifType
snmp_ifType_frame_relay	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_frame_relay$/;"	e	enum:snmp_ifType
snmp_ifType_hdh1822	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hdh1822,$/;"	e	enum:snmp_ifType
snmp_ifType_hyperchannel	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_hyperchannel,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88023_csmacd	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88023_csmacd,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88024_tokenBus	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88024_tokenBus,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88025_tokenRing	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88025_tokenRing,$/;"	e	enum:snmp_ifType
snmp_ifType_iso88026_man	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_iso88026_man,$/;"	e	enum:snmp_ifType
snmp_ifType_lapb	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_lapb,$/;"	e	enum:snmp_ifType
snmp_ifType_nsip	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_nsip,                   \/* XNS over IP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_other	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_other=1,                \/* none of the following *\/$/;"	e	enum:snmp_ifType
snmp_ifType_ppp	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ppp,$/;"	e	enum:snmp_ifType
snmp_ifType_primaryISDN	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_primaryISDN,            \/* proprietary serial *\/$/;"	e	enum:snmp_ifType
snmp_ifType_propPointToPointSerial	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_propPointToPointSerial,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_10Mbit	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_10Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_proteon_80Mbit	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_proteon_80Mbit,$/;"	e	enum:snmp_ifType
snmp_ifType_regular1822	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_regular1822,$/;"	e	enum:snmp_ifType
snmp_ifType_rfc877_x25	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_rfc877_x25,$/;"	e	enum:snmp_ifType
snmp_ifType_sdlc	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sdlc,$/;"	e	enum:snmp_ifType
snmp_ifType_sip	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_sip,                    \/* SMDS *\/$/;"	e	enum:snmp_ifType
snmp_ifType_slip	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_slip,                   \/* generic SLIP *\/$/;"	e	enum:snmp_ifType
snmp_ifType_softwareLoopback	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_softwareLoopback,$/;"	e	enum:snmp_ifType
snmp_ifType_starLan	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_starLan,$/;"	e	enum:snmp_ifType
snmp_ifType_ultra	./net/lwip/include/lwip/snmp.h	/^  snmp_ifType_ultra,                  \/* ULTRA technologies *\/$/;"	e	enum:snmp_ifType
snmp_ifindextonetif	./net/lwip/include/lwip/snmp_structs.h	/^void snmp_ifindextonetif(s32_t ifindex, struct netif **netif);$/;"	p	signature:(s32_t ifindex, struct netif **netif)
snmp_inc_icmpinaddrmaskreps	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpinaddrmaskreps(void);$/;"	p	signature:(void)
snmp_inc_icmpinaddrmaskreps	./net/lwip/include/lwip/snmp.h	293;"	d
snmp_inc_icmpinaddrmasks	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpinaddrmasks(void);$/;"	p	signature:(void)
snmp_inc_icmpinaddrmasks	./net/lwip/include/lwip/snmp.h	292;"	d
snmp_inc_icmpindestunreachs	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpindestunreachs(void);$/;"	p	signature:(void)
snmp_inc_icmpindestunreachs	./net/lwip/include/lwip/snmp.h	283;"	d
snmp_inc_icmpinechoreps	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpinechoreps(void);$/;"	p	signature:(void)
snmp_inc_icmpinechoreps	./net/lwip/include/lwip/snmp.h	289;"	d
snmp_inc_icmpinechos	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpinechos(void);$/;"	p	signature:(void)
snmp_inc_icmpinechos	./net/lwip/include/lwip/snmp.h	288;"	d
snmp_inc_icmpinerrors	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpinerrors(void);$/;"	p	signature:(void)
snmp_inc_icmpinerrors	./net/lwip/include/lwip/snmp.h	282;"	d
snmp_inc_icmpinmsgs	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpinmsgs(void);$/;"	p	signature:(void)
snmp_inc_icmpinmsgs	./net/lwip/include/lwip/snmp.h	281;"	d
snmp_inc_icmpinparmprobs	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpinparmprobs(void);$/;"	p	signature:(void)
snmp_inc_icmpinparmprobs	./net/lwip/include/lwip/snmp.h	285;"	d
snmp_inc_icmpinredirects	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpinredirects(void);$/;"	p	signature:(void)
snmp_inc_icmpinredirects	./net/lwip/include/lwip/snmp.h	287;"	d
snmp_inc_icmpinsrcquenchs	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpinsrcquenchs(void);$/;"	p	signature:(void)
snmp_inc_icmpinsrcquenchs	./net/lwip/include/lwip/snmp.h	286;"	d
snmp_inc_icmpintimeexcds	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpintimeexcds(void);$/;"	p	signature:(void)
snmp_inc_icmpintimeexcds	./net/lwip/include/lwip/snmp.h	284;"	d
snmp_inc_icmpintimestampreps	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpintimestampreps(void);$/;"	p	signature:(void)
snmp_inc_icmpintimestampreps	./net/lwip/include/lwip/snmp.h	291;"	d
snmp_inc_icmpintimestamps	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpintimestamps(void);$/;"	p	signature:(void)
snmp_inc_icmpintimestamps	./net/lwip/include/lwip/snmp.h	290;"	d
snmp_inc_icmpoutaddrmaskreps	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpoutaddrmaskreps(void);$/;"	p	signature:(void)
snmp_inc_icmpoutaddrmaskreps	./net/lwip/include/lwip/snmp.h	306;"	d
snmp_inc_icmpoutaddrmasks	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpoutaddrmasks(void);$/;"	p	signature:(void)
snmp_inc_icmpoutaddrmasks	./net/lwip/include/lwip/snmp.h	305;"	d
snmp_inc_icmpoutdestunreachs	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpoutdestunreachs(void);$/;"	p	signature:(void)
snmp_inc_icmpoutdestunreachs	./net/lwip/include/lwip/snmp.h	296;"	d
snmp_inc_icmpoutechoreps	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpoutechoreps(void);$/;"	p	signature:(void)
snmp_inc_icmpoutechoreps	./net/lwip/include/lwip/snmp.h	302;"	d
snmp_inc_icmpoutechos	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpoutechos(void);$/;"	p	signature:(void)
snmp_inc_icmpoutechos	./net/lwip/include/lwip/snmp.h	301;"	d
snmp_inc_icmpouterrors	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpouterrors(void);$/;"	p	signature:(void)
snmp_inc_icmpouterrors	./net/lwip/include/lwip/snmp.h	295;"	d
snmp_inc_icmpoutmsgs	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpoutmsgs(void);$/;"	p	signature:(void)
snmp_inc_icmpoutmsgs	./net/lwip/include/lwip/snmp.h	294;"	d
snmp_inc_icmpoutparmprobs	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpoutparmprobs(void);$/;"	p	signature:(void)
snmp_inc_icmpoutparmprobs	./net/lwip/include/lwip/snmp.h	298;"	d
snmp_inc_icmpoutredirects	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpoutredirects(void); $/;"	p	signature:(void)
snmp_inc_icmpoutredirects	./net/lwip/include/lwip/snmp.h	300;"	d
snmp_inc_icmpoutsrcquenchs	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpoutsrcquenchs(void);$/;"	p	signature:(void)
snmp_inc_icmpoutsrcquenchs	./net/lwip/include/lwip/snmp.h	299;"	d
snmp_inc_icmpouttimeexcds	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpouttimeexcds(void);$/;"	p	signature:(void)
snmp_inc_icmpouttimeexcds	./net/lwip/include/lwip/snmp.h	297;"	d
snmp_inc_icmpouttimestampreps	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpouttimestampreps(void);$/;"	p	signature:(void)
snmp_inc_icmpouttimestampreps	./net/lwip/include/lwip/snmp.h	304;"	d
snmp_inc_icmpouttimestamps	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_icmpouttimestamps(void);$/;"	p	signature:(void)
snmp_inc_icmpouttimestamps	./net/lwip/include/lwip/snmp.h	303;"	d
snmp_inc_ifindiscards	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_ifindiscards(struct netif *ni);$/;"	p	signature:(struct netif *ni)
snmp_inc_ifindiscards	./net/lwip/include/lwip/snmp.h	245;"	d
snmp_inc_ifinnucastpkts	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_ifinnucastpkts(struct netif *ni);$/;"	p	signature:(struct netif *ni)
snmp_inc_ifinnucastpkts	./net/lwip/include/lwip/snmp.h	244;"	d
snmp_inc_ifinucastpkts	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_ifinucastpkts(struct netif *ni);$/;"	p	signature:(struct netif *ni)
snmp_inc_ifinucastpkts	./net/lwip/include/lwip/snmp.h	243;"	d
snmp_inc_iflist	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_iflist(void);$/;"	p	signature:(void)
snmp_inc_iflist	./net/lwip/include/lwip/snmp.h	250;"	d
snmp_inc_ifoutdiscards	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_ifoutdiscards(struct netif *ni);$/;"	p	signature:(struct netif *ni)
snmp_inc_ifoutdiscards	./net/lwip/include/lwip/snmp.h	249;"	d
snmp_inc_ifoutnucastpkts	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_ifoutnucastpkts(struct netif *ni);$/;"	p	signature:(struct netif *ni)
snmp_inc_ifoutnucastpkts	./net/lwip/include/lwip/snmp.h	248;"	d
snmp_inc_ifoutucastpkts	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_ifoutucastpkts(struct netif *ni);$/;"	p	signature:(struct netif *ni)
snmp_inc_ifoutucastpkts	./net/lwip/include/lwip/snmp.h	247;"	d
snmp_inc_ipforwdatagrams	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_ipforwdatagrams(void);$/;"	p	signature:(void)
snmp_inc_ipforwdatagrams	./net/lwip/include/lwip/snmp.h	261;"	d
snmp_inc_ipfragcreates	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_ipfragcreates(void);$/;"	p	signature:(void)
snmp_inc_ipfragcreates	./net/lwip/include/lwip/snmp.h	273;"	d
snmp_inc_ipfragfails	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_ipfragfails(void);$/;"	p	signature:(void)
snmp_inc_ipfragfails	./net/lwip/include/lwip/snmp.h	272;"	d
snmp_inc_ipfragoks	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_ipfragoks(void);$/;"	p	signature:(void)
snmp_inc_ipfragoks	./net/lwip/include/lwip/snmp.h	271;"	d
snmp_inc_ipinaddrerrors	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_ipinaddrerrors(void);$/;"	p	signature:(void)
snmp_inc_ipinaddrerrors	./net/lwip/include/lwip/snmp.h	260;"	d
snmp_inc_ipindelivers	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_ipindelivers(void);$/;"	p	signature:(void)
snmp_inc_ipindelivers	./net/lwip/include/lwip/snmp.h	264;"	d
snmp_inc_ipindiscards	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_ipindiscards(void);$/;"	p	signature:(void)
snmp_inc_ipindiscards	./net/lwip/include/lwip/snmp.h	263;"	d
snmp_inc_ipinhdrerrors	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_ipinhdrerrors(void);$/;"	p	signature:(void)
snmp_inc_ipinhdrerrors	./net/lwip/include/lwip/snmp.h	259;"	d
snmp_inc_ipinreceives	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_ipinreceives(void);$/;"	p	signature:(void)
snmp_inc_ipinreceives	./net/lwip/include/lwip/snmp.h	258;"	d
snmp_inc_ipinunknownprotos	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_ipinunknownprotos(void);$/;"	p	signature:(void)
snmp_inc_ipinunknownprotos	./net/lwip/include/lwip/snmp.h	262;"	d
snmp_inc_ipoutdiscards	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_ipoutdiscards(void);$/;"	p	signature:(void)
snmp_inc_ipoutdiscards	./net/lwip/include/lwip/snmp.h	266;"	d
snmp_inc_ipoutnoroutes	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_ipoutnoroutes(void);$/;"	p	signature:(void)
snmp_inc_ipoutnoroutes	./net/lwip/include/lwip/snmp.h	267;"	d
snmp_inc_ipoutrequests	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_ipoutrequests(void);$/;"	p	signature:(void)
snmp_inc_ipoutrequests	./net/lwip/include/lwip/snmp.h	265;"	d
snmp_inc_ipreasmfails	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_ipreasmfails(void);$/;"	p	signature:(void)
snmp_inc_ipreasmfails	./net/lwip/include/lwip/snmp.h	270;"	d
snmp_inc_ipreasmoks	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_ipreasmoks(void);$/;"	p	signature:(void)
snmp_inc_ipreasmoks	./net/lwip/include/lwip/snmp.h	269;"	d
snmp_inc_ipreasmreqds	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_ipreasmreqds(void);$/;"	p	signature:(void)
snmp_inc_ipreasmreqds	./net/lwip/include/lwip/snmp.h	268;"	d
snmp_inc_iproutingdiscards	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_iproutingdiscards(void);$/;"	p	signature:(void)
snmp_inc_iproutingdiscards	./net/lwip/include/lwip/snmp.h	274;"	d
snmp_inc_snmpinasnparseerrs	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpinasnparseerrs(void);$/;"	p	signature:(void)
snmp_inc_snmpinasnparseerrs	./net/lwip/include/lwip/snmp.h	332;"	d
snmp_inc_snmpinbadcommunitynames	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpinbadcommunitynames(void);$/;"	p	signature:(void)
snmp_inc_snmpinbadcommunitynames	./net/lwip/include/lwip/snmp.h	330;"	d
snmp_inc_snmpinbadcommunityuses	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpinbadcommunityuses(void);$/;"	p	signature:(void)
snmp_inc_snmpinbadcommunityuses	./net/lwip/include/lwip/snmp.h	331;"	d
snmp_inc_snmpinbadvalues	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpinbadvalues(void);$/;"	p	signature:(void)
snmp_inc_snmpinbadvalues	./net/lwip/include/lwip/snmp.h	335;"	d
snmp_inc_snmpinbadversions	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpinbadversions(void);$/;"	p	signature:(void)
snmp_inc_snmpinbadversions	./net/lwip/include/lwip/snmp.h	329;"	d
snmp_inc_snmpingenerrs	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpingenerrs(void);$/;"	p	signature:(void)
snmp_inc_snmpingenerrs	./net/lwip/include/lwip/snmp.h	337;"	d
snmp_inc_snmpingetnexts	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpingetnexts(void);$/;"	p	signature:(void)
snmp_inc_snmpingetnexts	./net/lwip/include/lwip/snmp.h	341;"	d
snmp_inc_snmpingetrequests	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpingetrequests(void);$/;"	p	signature:(void)
snmp_inc_snmpingetrequests	./net/lwip/include/lwip/snmp.h	340;"	d
snmp_inc_snmpingetresponses	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpingetresponses(void);$/;"	p	signature:(void)
snmp_inc_snmpingetresponses	./net/lwip/include/lwip/snmp.h	343;"	d
snmp_inc_snmpinnosuchnames	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpinnosuchnames(void);$/;"	p	signature:(void)
snmp_inc_snmpinnosuchnames	./net/lwip/include/lwip/snmp.h	334;"	d
snmp_inc_snmpinpkts	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpinpkts(void);$/;"	p	signature:(void)
snmp_inc_snmpinpkts	./net/lwip/include/lwip/snmp.h	327;"	d
snmp_inc_snmpinreadonlys	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpinreadonlys(void);$/;"	p	signature:(void)
snmp_inc_snmpinreadonlys	./net/lwip/include/lwip/snmp.h	336;"	d
snmp_inc_snmpinsetrequests	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpinsetrequests(void);$/;"	p	signature:(void)
snmp_inc_snmpinsetrequests	./net/lwip/include/lwip/snmp.h	342;"	d
snmp_inc_snmpintoobigs	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpintoobigs(void);$/;"	p	signature:(void)
snmp_inc_snmpintoobigs	./net/lwip/include/lwip/snmp.h	333;"	d
snmp_inc_snmpintraps	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpintraps(void);$/;"	p	signature:(void)
snmp_inc_snmpintraps	./net/lwip/include/lwip/snmp.h	344;"	d
snmp_inc_snmpoutbadvalues	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpoutbadvalues(void);$/;"	p	signature:(void)
snmp_inc_snmpoutbadvalues	./net/lwip/include/lwip/snmp.h	347;"	d
snmp_inc_snmpoutgenerrs	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpoutgenerrs(void);$/;"	p	signature:(void)
snmp_inc_snmpoutgenerrs	./net/lwip/include/lwip/snmp.h	348;"	d
snmp_inc_snmpoutgetnexts	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpoutgetnexts(void);$/;"	p	signature:(void)
snmp_inc_snmpoutgetnexts	./net/lwip/include/lwip/snmp.h	350;"	d
snmp_inc_snmpoutgetrequests	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpoutgetrequests(void);$/;"	p	signature:(void)
snmp_inc_snmpoutgetrequests	./net/lwip/include/lwip/snmp.h	349;"	d
snmp_inc_snmpoutgetresponses	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpoutgetresponses(void);$/;"	p	signature:(void)
snmp_inc_snmpoutgetresponses	./net/lwip/include/lwip/snmp.h	352;"	d
snmp_inc_snmpoutnosuchnames	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpoutnosuchnames(void);$/;"	p	signature:(void)
snmp_inc_snmpoutnosuchnames	./net/lwip/include/lwip/snmp.h	346;"	d
snmp_inc_snmpoutpkts	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpoutpkts(void);$/;"	p	signature:(void)
snmp_inc_snmpoutpkts	./net/lwip/include/lwip/snmp.h	328;"	d
snmp_inc_snmpoutsetrequests	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpoutsetrequests(void);$/;"	p	signature:(void)
snmp_inc_snmpoutsetrequests	./net/lwip/include/lwip/snmp.h	351;"	d
snmp_inc_snmpouttoobigs	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpouttoobigs(void);$/;"	p	signature:(void)
snmp_inc_snmpouttoobigs	./net/lwip/include/lwip/snmp.h	345;"	d
snmp_inc_snmpouttraps	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_snmpouttraps(void);$/;"	p	signature:(void)
snmp_inc_snmpouttraps	./net/lwip/include/lwip/snmp.h	353;"	d
snmp_inc_sysuptime	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_sysuptime(void);$/;"	p	signature:(void)
snmp_inc_sysuptime	./net/lwip/include/lwip/snmp.h	234;"	d
snmp_inc_tcpactiveopens	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_tcpactiveopens(void);$/;"	p	signature:(void)
snmp_inc_tcpactiveopens	./net/lwip/include/lwip/snmp.h	308;"	d
snmp_inc_tcpattemptfails	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_tcpattemptfails(void);$/;"	p	signature:(void)
snmp_inc_tcpattemptfails	./net/lwip/include/lwip/snmp.h	310;"	d
snmp_inc_tcpestabresets	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_tcpestabresets(void);$/;"	p	signature:(void)
snmp_inc_tcpestabresets	./net/lwip/include/lwip/snmp.h	311;"	d
snmp_inc_tcpinerrs	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_tcpinerrs(void);$/;"	p	signature:(void)
snmp_inc_tcpinerrs	./net/lwip/include/lwip/snmp.h	315;"	d
snmp_inc_tcpinsegs	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_tcpinsegs(void);$/;"	p	signature:(void)
snmp_inc_tcpinsegs	./net/lwip/include/lwip/snmp.h	312;"	d
snmp_inc_tcpoutrsts	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_tcpoutrsts(void);$/;"	p	signature:(void)
snmp_inc_tcpoutrsts	./net/lwip/include/lwip/snmp.h	316;"	d
snmp_inc_tcpoutsegs	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_tcpoutsegs(void);$/;"	p	signature:(void)
snmp_inc_tcpoutsegs	./net/lwip/include/lwip/snmp.h	313;"	d
snmp_inc_tcppassiveopens	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_tcppassiveopens(void);$/;"	p	signature:(void)
snmp_inc_tcppassiveopens	./net/lwip/include/lwip/snmp.h	309;"	d
snmp_inc_tcpretranssegs	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_tcpretranssegs(void);$/;"	p	signature:(void)
snmp_inc_tcpretranssegs	./net/lwip/include/lwip/snmp.h	314;"	d
snmp_inc_udpindatagrams	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_udpindatagrams(void);$/;"	p	signature:(void)
snmp_inc_udpindatagrams	./net/lwip/include/lwip/snmp.h	319;"	d
snmp_inc_udpinerrors	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_udpinerrors(void);$/;"	p	signature:(void)
snmp_inc_udpinerrors	./net/lwip/include/lwip/snmp.h	321;"	d
snmp_inc_udpnoports	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_udpnoports(void);$/;"	p	signature:(void)
snmp_inc_udpnoports	./net/lwip/include/lwip/snmp.h	320;"	d
snmp_inc_udpoutdatagrams	./net/lwip/include/lwip/snmp.h	/^void snmp_inc_udpoutdatagrams(void);$/;"	p	signature:(void)
snmp_inc_udpoutdatagrams	./net/lwip/include/lwip/snmp.h	322;"	d
snmp_init	./net/lwip/include/lwip/snmp_msg.h	/^void snmp_init(void);$/;"	p	signature:(void)
snmp_insert_arpidx_tree	./net/lwip/include/lwip/snmp.h	/^void snmp_insert_arpidx_tree(struct netif *ni, struct ip_addr *ip);$/;"	p	signature:(struct netif *ni, struct ip_addr *ip)
snmp_insert_arpidx_tree	./net/lwip/include/lwip/snmp.h	254;"	d
snmp_insert_ipaddridx_tree	./net/lwip/include/lwip/snmp.h	/^void snmp_insert_ipaddridx_tree(struct netif *ni);$/;"	p	signature:(struct netif *ni)
snmp_insert_ipaddridx_tree	./net/lwip/include/lwip/snmp.h	275;"	d
snmp_insert_iprteidx_tree	./net/lwip/include/lwip/snmp.h	/^void snmp_insert_iprteidx_tree(u8_t dflt, struct netif *ni);$/;"	p	signature:(u8_t dflt, struct netif *ni)
snmp_insert_iprteidx_tree	./net/lwip/include/lwip/snmp.h	277;"	d
snmp_insert_udpidx_tree	./net/lwip/include/lwip/snmp.h	/^void snmp_insert_udpidx_tree(struct udp_pcb *pcb);$/;"	p	signature:(struct udp_pcb *pcb)
snmp_insert_udpidx_tree	./net/lwip/include/lwip/snmp.h	323;"	d
snmp_iptooid	./net/lwip/include/lwip/snmp_structs.h	/^void snmp_iptooid(struct ip_addr *ip, s32_t *ident);$/;"	p	signature:(struct ip_addr *ip, s32_t *ident)
snmp_iso_prefix_expand	./net/lwip/include/lwip/snmp_structs.h	/^u8_t snmp_iso_prefix_expand(u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret);$/;"	p	signature:(u8_t ident_len, s32_t *ident, struct snmp_obj_id *oidret)
snmp_iso_prefix_tst	./net/lwip/include/lwip/snmp_structs.h	/^u8_t snmp_iso_prefix_tst(u8_t ident_len, s32_t *ident);$/;"	p	signature:(u8_t ident_len, s32_t *ident)
snmp_mib_ln_alloc	./net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_node* snmp_mib_ln_alloc(s32_t id);$/;"	p	signature:(s32_t id)
snmp_mib_ln_free	./net/lwip/include/lwip/snmp_structs.h	/^void snmp_mib_ln_free(struct mib_list_node *ln);$/;"	p	signature:(struct mib_list_node *ln)
snmp_mib_lrn_alloc	./net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_rootnode* snmp_mib_lrn_alloc(void);$/;"	p	signature:(void)
snmp_mib_lrn_free	./net/lwip/include/lwip/snmp_structs.h	/^void snmp_mib_lrn_free(struct mib_list_rootnode *lrn);$/;"	p	signature:(struct mib_list_rootnode *lrn)
snmp_mib_node_delete	./net/lwip/include/lwip/snmp_structs.h	/^struct mib_list_rootnode *snmp_mib_node_delete(struct mib_list_rootnode *rn, struct mib_list_node *n);$/;"	p	signature:(struct mib_list_rootnode *rn, struct mib_list_node *n)
snmp_mib_node_find	./net/lwip/include/lwip/snmp_structs.h	/^s8_t snmp_mib_node_find(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **fn);$/;"	p	signature:(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **fn)
snmp_mib_node_insert	./net/lwip/include/lwip/snmp_structs.h	/^s8_t snmp_mib_node_insert(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **insn);$/;"	p	signature:(struct mib_list_rootnode *rn, s32_t objid, struct mib_list_node **insn)
snmp_msg_event	./net/lwip/include/lwip/snmp_msg.h	/^void snmp_msg_event(u8_t request_id);$/;"	p	signature:(u8_t request_id)
snmp_msg_pstat	./net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_pstat$/;"	s
snmp_msg_pstat::com_strlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t com_strlen;$/;"	m	struct:snmp_msg_pstat	access:public
snmp_msg_pstat::community	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t community[SNMP_COMMUNITY_STR_LEN + 1];$/;"	m	struct:snmp_msg_pstat	access:public
snmp_msg_pstat::error_index	./net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_index;$/;"	m	struct:snmp_msg_pstat	access:public
snmp_msg_pstat::error_status	./net/lwip/include/lwip/snmp_msg.h	/^  s32_t error_status;$/;"	m	struct:snmp_msg_pstat	access:public
snmp_msg_pstat::ext_mib_node	./net/lwip/include/lwip/snmp_msg.h	/^  struct mib_external_node *ext_mib_node;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::mib_external_node	access:public
snmp_msg_pstat::ext_name_ptr	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_name_ptr ext_name_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_name_ptr	access:public
snmp_msg_pstat::ext_object_def	./net/lwip/include/lwip/snmp_msg.h	/^  struct obj_def ext_object_def;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::obj_def	access:public
snmp_msg_pstat::ext_oid	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id ext_oid;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_obj_id	access:public
snmp_msg_pstat::invb	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root invb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root	access:public
snmp_msg_pstat::outvb	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind_root	access:public
snmp_msg_pstat::pcb	./net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::udp_pcb	access:public
snmp_msg_pstat::rhl	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_resp_header_lengths rhl;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_resp_header_lengths	access:public
snmp_msg_pstat::rid	./net/lwip/include/lwip/snmp_msg.h	/^  s32_t rid;$/;"	m	struct:snmp_msg_pstat	access:public
snmp_msg_pstat::rt	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t rt;$/;"	m	struct:snmp_msg_pstat	access:public
snmp_msg_pstat::sip	./net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr sip;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::ip_addr	access:public
snmp_msg_pstat::sp	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t sp;$/;"	m	struct:snmp_msg_pstat	access:public
snmp_msg_pstat::state	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t state;$/;"	m	struct:snmp_msg_pstat	access:public
snmp_msg_pstat::vb_idx	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t vb_idx;$/;"	m	struct:snmp_msg_pstat	access:public
snmp_msg_pstat::vb_ptr	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *vb_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind	access:public
snmp_msg_trap	./net/lwip/include/lwip/snmp_msg.h	/^struct snmp_msg_trap$/;"	s
snmp_msg_trap::dip	./net/lwip/include/lwip/snmp_msg.h	/^  struct ip_addr dip;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::ip_addr	access:public
snmp_msg_trap::enterprise	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_obj_id *enterprise;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_obj_id	access:public
snmp_msg_trap::gen_trap	./net/lwip/include/lwip/snmp_msg.h	/^  u32_t gen_trap;$/;"	m	struct:snmp_msg_trap	access:public
snmp_msg_trap::outvb	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind_root outvb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_varbind_root	access:public
snmp_msg_trap::pcb	./net/lwip/include/lwip/snmp_msg.h	/^  struct udp_pcb *pcb;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::udp_pcb	access:public
snmp_msg_trap::sip_raw	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t sip_raw[4];$/;"	m	struct:snmp_msg_trap	access:public
snmp_msg_trap::spc_trap	./net/lwip/include/lwip/snmp_msg.h	/^  u32_t spc_trap;$/;"	m	struct:snmp_msg_trap	access:public
snmp_msg_trap::thl	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_trap_header_lengths thl;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_trap_header_lengths	access:public
snmp_msg_trap::ts	./net/lwip/include/lwip/snmp_msg.h	/^  u32_t ts;$/;"	m	struct:snmp_msg_trap	access:public
snmp_name_ptr	./net/lwip/include/lwip/snmp_structs.h	/^struct snmp_name_ptr$/;"	s
snmp_name_ptr::ident	./net/lwip/include/lwip/snmp_structs.h	/^  s32_t *ident;$/;"	m	struct:snmp_name_ptr	access:public
snmp_name_ptr::ident_len	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t ident_len;$/;"	m	struct:snmp_name_ptr	access:public
snmp_netiftoifindex	./net/lwip/include/lwip/snmp_structs.h	/^void snmp_netiftoifindex(struct netif *netif, s32_t *ifidx);$/;"	p	signature:(struct netif *netif, s32_t *ifidx)
snmp_obj_id	./net/lwip/include/lwip/snmp.h	/^struct snmp_obj_id$/;"	s
snmp_obj_id::id	./net/lwip/include/lwip/snmp.h	/^  s32_t id[LWIP_SNMP_OBJ_ID_LEN];$/;"	m	struct:snmp_obj_id	access:public
snmp_obj_id::len	./net/lwip/include/lwip/snmp.h	/^  u8_t len;$/;"	m	struct:snmp_obj_id	access:public
snmp_oidtoip	./net/lwip/include/lwip/snmp_structs.h	/^void snmp_oidtoip(s32_t *ident, struct ip_addr *ip);$/;"	p	signature:(s32_t *ident, struct ip_addr *ip)
snmp_resp_header_lengths	./net/lwip/include/lwip/snmp_msg.h	/^struct snmp_resp_header_lengths$/;"	s
snmp_resp_header_lengths::comlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
snmp_resp_header_lengths::comlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
snmp_resp_header_lengths::erridxlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t erridxlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
snmp_resp_header_lengths::erridxlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t erridxlenlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
snmp_resp_header_lengths::errstatlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t errstatlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
snmp_resp_header_lengths::errstatlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t errstatlenlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
snmp_resp_header_lengths::pdulen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_resp_header_lengths	access:public
snmp_resp_header_lengths::pdulenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
snmp_resp_header_lengths::ridlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t ridlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
snmp_resp_header_lengths::ridlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t ridlenlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
snmp_resp_header_lengths::seqlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
snmp_resp_header_lengths::seqlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
snmp_resp_header_lengths::verlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
snmp_resp_header_lengths::verlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
snmp_search_tree	./net/lwip/include/lwip/snmp_structs.h	/^struct mib_node* snmp_search_tree(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_name_ptr *np);$/;"	p	signature:(struct mib_node *node, u8_t ident_len, s32_t *ident, struct snmp_name_ptr *np)
snmp_send_response	./net/lwip/include/lwip/snmp_msg.h	/^err_t snmp_send_response(struct snmp_msg_pstat *m_stat);$/;"	p	signature:(struct snmp_msg_pstat *m_stat)
snmp_send_trap	./net/lwip/include/lwip/snmp_msg.h	/^err_t snmp_send_trap(s8_t generic_trap, struct snmp_obj_id *eoid, s32_t specific_trap);$/;"	p	signature:(s8_t generic_trap, struct snmp_obj_id *eoid, s32_t specific_trap)
snmp_set_snmpenableauthentraps	./net/lwip/include/lwip/snmp.h	/^void snmp_set_snmpenableauthentraps(u8_t *value);$/;"	p	signature:(u8_t *value)
snmp_set_snmpenableauthentraps	./net/lwip/include/lwip/snmp.h	355;"	d
snmp_set_syscontact	./net/lwip/include/lwip/snmp.h	/^void snmp_set_syscontact(u8_t *ocstr, u8_t *ocstrlen);$/;"	p	signature:(u8_t *ocstr, u8_t *ocstrlen)
snmp_set_syscontact	./net/lwip/include/lwip/snmp.h	237;"	d
snmp_set_sysdesr	./net/lwip/include/lwip/snmp.h	/^void snmp_set_sysdesr(u8_t* str, u8_t* len);$/;"	p	signature:(u8_t* str, u8_t* len)
snmp_set_sysdesr	./net/lwip/include/lwip/snmp.h	231;"	d
snmp_set_syslocation	./net/lwip/include/lwip/snmp.h	/^void snmp_set_syslocation(u8_t *ocstr, u8_t *ocstrlen);$/;"	p	signature:(u8_t *ocstr, u8_t *ocstrlen)
snmp_set_syslocation	./net/lwip/include/lwip/snmp.h	239;"	d
snmp_set_sysname	./net/lwip/include/lwip/snmp.h	/^void snmp_set_sysname(u8_t *ocstr, u8_t *ocstrlen);$/;"	p	signature:(u8_t *ocstr, u8_t *ocstrlen)
snmp_set_sysname	./net/lwip/include/lwip/snmp.h	238;"	d
snmp_set_sysobjid	./net/lwip/include/lwip/snmp.h	/^void snmp_set_sysobjid(struct snmp_obj_id *oid);$/;"	p	signature:(struct snmp_obj_id *oid)
snmp_set_sysobjid	./net/lwip/include/lwip/snmp.h	232;"	d
snmp_trap_dst_enable	./net/lwip/include/lwip/snmp_msg.h	/^void snmp_trap_dst_enable(u8_t dst_idx, u8_t enable);$/;"	p	signature:(u8_t dst_idx, u8_t enable)
snmp_trap_dst_ip_set	./net/lwip/include/lwip/snmp_msg.h	/^void snmp_trap_dst_ip_set(u8_t dst_idx, struct ip_addr *dst);$/;"	p	signature:(u8_t dst_idx, struct ip_addr *dst)
snmp_trap_header_lengths	./net/lwip/include/lwip/snmp_msg.h	/^struct snmp_trap_header_lengths$/;"	s
snmp_trap_header_lengths::aaddrlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t aaddrlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
snmp_trap_header_lengths::aaddrlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t aaddrlenlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
snmp_trap_header_lengths::comlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t comlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
snmp_trap_header_lengths::comlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t comlenlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
snmp_trap_header_lengths::eidlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t eidlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
snmp_trap_header_lengths::eidlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t eidlenlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
snmp_trap_header_lengths::gtrplen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t gtrplen;$/;"	m	struct:snmp_trap_header_lengths	access:public
snmp_trap_header_lengths::gtrplenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t gtrplenlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
snmp_trap_header_lengths::pdulen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t pdulen;$/;"	m	struct:snmp_trap_header_lengths	access:public
snmp_trap_header_lengths::pdulenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t pdulenlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
snmp_trap_header_lengths::seqlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
snmp_trap_header_lengths::seqlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
snmp_trap_header_lengths::strplen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t strplen;$/;"	m	struct:snmp_trap_header_lengths	access:public
snmp_trap_header_lengths::strplenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t strplenlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
snmp_trap_header_lengths::tslen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t tslen;$/;"	m	struct:snmp_trap_header_lengths	access:public
snmp_trap_header_lengths::tslenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t tslenlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
snmp_trap_header_lengths::verlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
snmp_trap_header_lengths::verlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
snmp_varbind	./net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind$/;"	s
snmp_varbind::ident	./net/lwip/include/lwip/snmp_msg.h	/^  s32_t *ident;$/;"	m	struct:snmp_varbind	access:public
snmp_varbind::ident_len	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t ident_len;$/;"	m	struct:snmp_varbind	access:public
snmp_varbind::next	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *next;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind	access:public
snmp_varbind::olen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t olen;$/;"	m	struct:snmp_varbind	access:public
snmp_varbind::olenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t olenlen;$/;"	m	struct:snmp_varbind	access:public
snmp_varbind::prev	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *prev;$/;"	m	struct:snmp_varbind	typeref:struct:snmp_varbind::snmp_varbind	access:public
snmp_varbind::seqlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind	access:public
snmp_varbind::seqlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind	access:public
snmp_varbind::value	./net/lwip/include/lwip/snmp_msg.h	/^  void *value;$/;"	m	struct:snmp_varbind	access:public
snmp_varbind::value_len	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_len;$/;"	m	struct:snmp_varbind	access:public
snmp_varbind::value_type	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_type;$/;"	m	struct:snmp_varbind	access:public
snmp_varbind::vlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t vlen;$/;"	m	struct:snmp_varbind	access:public
snmp_varbind::vlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t vlenlen;$/;"	m	struct:snmp_varbind	access:public
snmp_varbind_alloc	./net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind* snmp_varbind_alloc(struct snmp_obj_id *oid, u8_t type, u8_t len);$/;"	p	signature:(struct snmp_obj_id *oid, u8_t type, u8_t len)
snmp_varbind_free	./net/lwip/include/lwip/snmp_msg.h	/^void snmp_varbind_free(struct snmp_varbind *vb);$/;"	p	signature:(struct snmp_varbind *vb)
snmp_varbind_list_free	./net/lwip/include/lwip/snmp_msg.h	/^void snmp_varbind_list_free(struct snmp_varbind_root *root);$/;"	p	signature:(struct snmp_varbind_root *root)
snmp_varbind_root	./net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind_root$/;"	s
snmp_varbind_root::count	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t count;$/;"	m	struct:snmp_varbind_root	access:public
snmp_varbind_root::head	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *head;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind	access:public
snmp_varbind_root::seqlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t seqlen;$/;"	m	struct:snmp_varbind_root	access:public
snmp_varbind_root::seqlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t seqlenlen;$/;"	m	struct:snmp_varbind_root	access:public
snmp_varbind_root::tail	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *tail;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind	access:public
snmp_varbind_tail_add	./net/lwip/include/lwip/snmp_msg.h	/^void snmp_varbind_tail_add(struct snmp_varbind_root *root, struct snmp_varbind *vb);$/;"	p	signature:(struct snmp_varbind_root *root, struct snmp_varbind *vb)
snmp_varbind_tail_remove	./net/lwip/include/lwip/snmp_msg.h	/^struct snmp_varbind* snmp_varbind_tail_remove(struct snmp_varbind_root *root);$/;"	p	signature:(struct snmp_varbind_root *root)
snprintf	./inc/stdio.h	/^int	snprintf(char *str, int size, const char *fmt, ...);$/;"	p	signature:(char *str, int size, const char *fmt, ...)
sockaddr	./net/lwip/include/lwip/sockets.h	/^struct sockaddr {$/;"	s
sockaddr::sa_data	./net/lwip/include/lwip/sockets.h	/^  char sa_data[14];$/;"	m	struct:sockaddr	access:public
sockaddr::sa_family	./net/lwip/include/lwip/sockets.h	/^  u8_t sa_family;$/;"	m	struct:sockaddr	access:public
sockaddr::sa_len	./net/lwip/include/lwip/sockets.h	/^  u8_t sa_len;$/;"	m	struct:sockaddr	access:public
sockaddr_in	./net/lwip/include/lwip/sockets.h	/^struct sockaddr_in {$/;"	s
sockaddr_in::sin_addr	./net/lwip/include/lwip/sockets.h	/^  struct in_addr sin_addr;$/;"	m	struct:sockaddr_in	typeref:struct:sockaddr_in::in_addr	access:public
sockaddr_in::sin_family	./net/lwip/include/lwip/sockets.h	/^  u8_t sin_family;$/;"	m	struct:sockaddr_in	access:public
sockaddr_in::sin_len	./net/lwip/include/lwip/sockets.h	/^  u8_t sin_len;$/;"	m	struct:sockaddr_in	access:public
sockaddr_in::sin_port	./net/lwip/include/lwip/sockets.h	/^  u16_t sin_port;$/;"	m	struct:sockaddr_in	access:public
sockaddr_in::sin_zero	./net/lwip/include/lwip/sockets.h	/^  char sin_zero[8];$/;"	m	struct:sockaddr_in	access:public
socket	./inc/lib.h	/^int     socket(int domain, int type, int protocol);$/;"	p	signature:(int domain, int type, int protocol)
socket	./inc/ns.h	/^	} socket;$/;"	m	union:Nsipc	typeref:struct:Nsipc::Nsreq_socket	access:public
socket	./net/lwip/include/lwip/api.h	/^  int socket;$/;"	m	struct:netconn	access:public
socket	./net/lwip/include/lwip/sockets.h	340;"	d
sockid	./inc/fd.h	/^	int sockid;$/;"	m	struct:FdSock	access:public
socklen_t	./net/lwip/include/lwip/sockets.h	64;"	d
sp	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t sp;$/;"	m	struct:snmp_msg_pstat	access:public
spawn	./inc/lib.h	/^envid_t	spawn(const char *program, const char **argv);$/;"	p	signature:(const char *program, const char **argv)
spawnl	./inc/lib.h	/^envid_t	spawnl(const char *program, const char *arg0, ...);$/;"	p	signature:(const char *program, const char *arg0, ...)
spc_trap	./net/lwip/include/lwip/snmp_msg.h	/^  u32_t spc_trap;$/;"	m	struct:snmp_msg_trap	access:public
special	./kern/e1000.h	/^	uint16_t special;$/;"	m	struct:e1000_rx_desc	access:public
special	./kern/e1000.h	/^	uint16_t special;$/;"	m	struct:e1000_tx_desc	access:public
spin_initlock	./kern/spinlock.h	26;"	d
spin_lock	./kern/spinlock.h	/^void spin_lock(struct spinlock *lk);$/;"	p	signature:(struct spinlock *lk)
spin_unlock	./kern/spinlock.h	/^void spin_unlock(struct spinlock *lk);$/;"	p	signature:(struct spinlock *lk)
spinlock	./kern/spinlock.h	/^struct spinlock {$/;"	s
spinlock::cpu	./kern/spinlock.h	/^	struct CpuInfo *cpu;   \/\/ The CPU holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::CpuInfo	access:public
spinlock::locked	./kern/spinlock.h	/^	unsigned locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock	access:public
spinlock::name	./kern/spinlock.h	/^	char *name;            \/\/ Name of lock.$/;"	m	struct:spinlock	access:public
spinlock::pcs	./kern/spinlock.h	/^	uintptr_t pcs[10];     \/\/ The call stack (an array of program counters)$/;"	m	struct:spinlock	access:public
src	./net/lwip/include/ipv6/lwip/ip.h	/^  struct ip_addr src, dest;          \/* source and destination IP addresses *\/$/;"	m	struct:ip_hdr	typeref:struct:ip_hdr::ip_addr	access:public
ssize_t	./inc/types.h	/^typedef int32_t ssize_t;$/;"	t
ssthresh	./net/lwip/include/lwip/tcp.h	/^  u16_t ssthresh;$/;"	m	struct:tcp_pcb	access:public
st_dev	./inc/fd.h	/^	struct Dev *st_dev;$/;"	m	struct:Stat	typeref:struct:Stat::Dev	access:public
st_isdir	./inc/fd.h	/^	int st_isdir;$/;"	m	struct:Stat	access:public
st_name	./inc/fd.h	/^	char st_name[MAXNAMELEN];$/;"	m	struct:Stat	access:public
st_size	./inc/fd.h	/^	off_t st_size;$/;"	m	struct:Stat	access:public
stack_size	./net/lwip/jos/arch/threadq.h	/^enum { stack_size = PGSIZE };$/;"	e	enum:__anon36
starting	./net/lwip/netif/ppp/fsm.h	/^  void (*starting)(fsm*);                           \/* Called when we want the lower layer *\/$/;"	m	struct:fsm_callbacks	access:public
stat	./inc/fs.h	/^	} stat;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_stat	access:public
stat	./inc/lib.h	/^int	stat(const char *path, struct Stat *statbuf);$/;"	p	signature:(const char *path, struct Stat *statbuf)
statRet	./inc/fs.h	/^	} statRet;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsret_stat	access:public
state	./net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t state;               \/* current AutoIP state machine state *\/$/;"	m	struct:autoip	access:public
state	./net/lwip/include/lwip/api.h	/^  enum netconn_state state;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_state	access:public
state	./net/lwip/include/lwip/dhcp.h	/^  u8_t state;$/;"	m	struct:dhcp	access:public
state	./net/lwip/include/lwip/netif.h	/^  void *state;$/;"	m	struct:netif	access:public
state	./net/lwip/include/lwip/netifapi.h	/^      void *state;$/;"	m	struct:netifapi_msg_msg::__anon31::__anon32	access:public
state	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t state;$/;"	m	struct:snmp_msg_pstat	access:public
state	./net/lwip/netif/ppp/fsm.h	/^  int state;                       \/* State *\/$/;"	m	struct:fsm	access:public
static_assert	./inc/assert.h	18;"	d
stats	./net/lwip/netif/ppp/vj.h	/^  struct vjstat stats;$/;"	m	struct:vjcompress	typeref:struct:vjcompress::vjstat	access:public
stats_	./net/lwip/include/lwip/stats.h	/^struct stats_ {$/;"	s
stats_::etharp	./net/lwip/include/lwip/stats.h	/^  struct stats_proto etharp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto	access:public
stats_::icmp	./net/lwip/include/lwip/stats.h	/^  struct stats_proto icmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto	access:public
stats_::igmp	./net/lwip/include/lwip/stats.h	/^  struct stats_igmp igmp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_igmp	access:public
stats_::ip	./net/lwip/include/lwip/stats.h	/^  struct stats_proto ip;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto	access:public
stats_::ip_frag	./net/lwip/include/lwip/stats.h	/^  struct stats_proto ip_frag;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto	access:public
stats_::link	./net/lwip/include/lwip/stats.h	/^  struct stats_proto link;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto	access:public
stats_::mem	./net/lwip/include/lwip/stats.h	/^  struct stats_mem mem;$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem	access:public
stats_::memp	./net/lwip/include/lwip/stats.h	/^  struct stats_mem memp[MEMP_MAX];$/;"	m	struct:stats_	typeref:struct:stats_::stats_mem	access:public
stats_::sys	./net/lwip/include/lwip/stats.h	/^  struct stats_sys sys;$/;"	m	struct:stats_	typeref:struct:stats_::stats_sys	access:public
stats_::tcp	./net/lwip/include/lwip/stats.h	/^  struct stats_proto tcp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto	access:public
stats_::udp	./net/lwip/include/lwip/stats.h	/^  struct stats_proto udp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto	access:public
stats_display	./net/lwip/include/lwip/stats.h	/^void stats_display(void);$/;"	p	signature:(void)
stats_display	./net/lwip/include/lwip/stats.h	271;"	d
stats_display_igmp	./net/lwip/include/lwip/stats.h	/^void stats_display_igmp(struct stats_igmp *igmp);$/;"	p	signature:(struct stats_igmp *igmp)
stats_display_igmp	./net/lwip/include/lwip/stats.h	273;"	d
stats_display_mem	./net/lwip/include/lwip/stats.h	/^void stats_display_mem(struct stats_mem *mem, char *name);$/;"	p	signature:(struct stats_mem *mem, char *name)
stats_display_mem	./net/lwip/include/lwip/stats.h	274;"	d
stats_display_memp	./net/lwip/include/lwip/stats.h	/^void stats_display_memp(struct stats_mem *mem, int index);$/;"	p	signature:(struct stats_mem *mem, int index)
stats_display_memp	./net/lwip/include/lwip/stats.h	275;"	d
stats_display_proto	./net/lwip/include/lwip/stats.h	/^void stats_display_proto(struct stats_proto *proto, char *name);$/;"	p	signature:(struct stats_proto *proto, char *name)
stats_display_proto	./net/lwip/include/lwip/stats.h	272;"	d
stats_display_sys	./net/lwip/include/lwip/stats.h	/^void stats_display_sys(struct stats_sys *sys);$/;"	p	signature:(struct stats_sys *sys)
stats_display_sys	./net/lwip/include/lwip/stats.h	276;"	d
stats_igmp	./net/lwip/include/lwip/stats.h	/^struct stats_igmp {$/;"	s
stats_igmp::chkerr	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_igmp	access:public
stats_igmp::group_query_rxed	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER group_query_rxed; \/* *\/$/;"	m	struct:stats_igmp	access:public
stats_igmp::join_sent	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER join_sent;        \/* *\/$/;"	m	struct:stats_igmp	access:public
stats_igmp::leave_sent	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER leave_sent;       \/* *\/$/;"	m	struct:stats_igmp	access:public
stats_igmp::lenerr	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_igmp	access:public
stats_igmp::report_rxed	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_rxed;      \/* *\/$/;"	m	struct:stats_igmp	access:public
stats_igmp::report_sent	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER report_sent;      \/* *\/$/;"	m	struct:stats_igmp	access:public
stats_igmp::unicast_query	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER unicast_query;    \/* *\/$/;"	m	struct:stats_igmp	access:public
stats_igmp::v1_rxed	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER v1_rxed;          \/* *\/$/;"	m	struct:stats_igmp	access:public
stats_init	./net/lwip/include/lwip/stats.h	142;"	d
stats_init	./net/lwip/include/lwip/stats.h	147;"	d
stats_mem	./net/lwip/include/lwip/stats.h	/^struct stats_mem {$/;"	s
stats_mem::avail	./net/lwip/include/lwip/stats.h	/^  mem_size_t avail;$/;"	m	struct:stats_mem	access:public
stats_mem::err	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_mem	access:public
stats_mem::illegal	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER illegal;$/;"	m	struct:stats_mem	access:public
stats_mem::max	./net/lwip/include/lwip/stats.h	/^  mem_size_t max;$/;"	m	struct:stats_mem	access:public
stats_mem::used	./net/lwip/include/lwip/stats.h	/^  mem_size_t used;$/;"	m	struct:stats_mem	access:public
stats_proto	./net/lwip/include/lwip/stats.h	/^struct stats_proto {$/;"	s
stats_proto::cachehit	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER cachehit;$/;"	m	struct:stats_proto	access:public
stats_proto::chkerr	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER chkerr;           \/* Checksum error. *\/$/;"	m	struct:stats_proto	access:public
stats_proto::drop	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER drop;             \/* Dropped packets. *\/$/;"	m	struct:stats_proto	access:public
stats_proto::err	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;              \/* Misc error. *\/$/;"	m	struct:stats_proto	access:public
stats_proto::fw	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER fw;               \/* Forwarded packets. *\/$/;"	m	struct:stats_proto	access:public
stats_proto::lenerr	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER lenerr;           \/* Invalid length error. *\/$/;"	m	struct:stats_proto	access:public
stats_proto::memerr	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER memerr;           \/* Out of memory error. *\/$/;"	m	struct:stats_proto	access:public
stats_proto::opterr	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER opterr;           \/* Error in options. *\/$/;"	m	struct:stats_proto	access:public
stats_proto::proterr	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER proterr;          \/* Protocol error. *\/$/;"	m	struct:stats_proto	access:public
stats_proto::recv	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER recv;             \/* Received packets. *\/$/;"	m	struct:stats_proto	access:public
stats_proto::rterr	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER rterr;            \/* Routing error. *\/$/;"	m	struct:stats_proto	access:public
stats_proto::xmit	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER xmit;             \/* Transmitted packets. *\/$/;"	m	struct:stats_proto	access:public
stats_sys	./net/lwip/include/lwip/stats.h	/^struct stats_sys {$/;"	s
stats_sys::mbox	./net/lwip/include/lwip/stats.h	/^  struct stats_syselem mbox;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem	access:public
stats_sys::sem	./net/lwip/include/lwip/stats.h	/^  struct stats_syselem sem;$/;"	m	struct:stats_sys	typeref:struct:stats_sys::stats_syselem	access:public
stats_syselem	./net/lwip/include/lwip/stats.h	/^struct stats_syselem {$/;"	s
stats_syselem::err	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER err;$/;"	m	struct:stats_syselem	access:public
stats_syselem::max	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER max;$/;"	m	struct:stats_syselem	access:public
stats_syselem::used	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER used;$/;"	m	struct:stats_syselem	access:public
status	./kern/e1000.h	/^	uint8_t status;      \/* Descriptor status *\/$/;"	m	struct:e1000_rx_desc	access:public
status	./kern/e1000.h	/^	uint8_t status;     \/* Descriptor status *\/$/;"	m	struct:e1000_tx_desc	access:public
status_callback	./net/lwip/include/lwip/netif.h	/^  void (* status_callback)(struct netif *netif);$/;"	m	struct:netif	access:public
strcat	./inc/string.h	/^char *	strcat(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strchr	./inc/string.h	/^char *	strchr(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strcmp	./inc/string.h	/^int	strcmp(const char *s1, const char *s2);$/;"	p	signature:(const char *s1, const char *s2)
strcpy	./inc/string.h	/^char *	strcpy(char *dst, const char *src);$/;"	p	signature:(char *dst, const char *src)
strfind	./inc/string.h	/^char *	strfind(const char *s, char c);$/;"	p	signature:(const char *s, char c)
strlcpy	./inc/string.h	/^size_t	strlcpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strlen	./inc/string.h	/^int	strlen(const char *s);$/;"	p	signature:(const char *s)
strncmp	./inc/string.h	/^int	strncmp(const char *s1, const char *s2, size_t size);$/;"	p	signature:(const char *s1, const char *s2, size_t size)
strncpy	./inc/string.h	/^char *	strncpy(char *dst, const char *src, size_t size);$/;"	p	signature:(char *dst, const char *src, size_t size)
strnlen	./inc/string.h	/^int	strnlen(const char *s, size_t size);$/;"	p	signature:(const char *s, size_t size)
strplen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t strplen;$/;"	m	struct:snmp_trap_header_lengths	access:public
strplenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t strplenlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
strtol	./inc/string.h	/^long	strtol(const char *s, char **endptr, int base);$/;"	p	signature:(const char *s, char **endptr, int base)
super	./fs/fs.h	/^struct Super *super;		\/\/ superblock$/;"	v	typeref:struct:Super
sv	./net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb	access:public
sync	./inc/lib.h	/^int	sync(void);$/;"	p	signature:(void)
sys	./net/lwip/include/lwip/stats.h	/^  struct stats_sys sys;$/;"	m	struct:stats_	typeref:struct:stats_::stats_sys	access:public
sys_arch_mbox_fetch	./net/lwip/include/lwip/sys.h	/^u32_t sys_arch_mbox_fetch(sys_mbox_t mbox, void **msg, u32_t timeout);$/;"	p	signature:(sys_mbox_t mbox, void **msg, u32_t timeout)
sys_arch_mbox_tryfetch	./net/lwip/include/lwip/sys.h	/^u32_t sys_arch_mbox_tryfetch(sys_mbox_t mbox, void **msg);$/;"	p	signature:(sys_mbox_t mbox, void **msg)
sys_arch_protect	./net/lwip/include/lwip/sys.h	/^sys_prot_t sys_arch_protect(void);$/;"	p	signature:(void)
sys_arch_sem_wait	./net/lwip/include/lwip/sys.h	/^u32_t sys_arch_sem_wait(sys_sem_t sem, u32_t timeout);$/;"	p	signature:(sys_sem_t sem, u32_t timeout)
sys_arch_sem_wait	./net/lwip/include/lwip/sys.h	57;"	d
sys_arch_timeouts	./net/lwip/include/lwip/sys.h	/^struct sys_timeouts *sys_arch_timeouts(void);$/;"	p	signature:(void)
sys_arch_unprotect	./net/lwip/include/lwip/sys.h	/^void sys_arch_unprotect(sys_prot_t pval);$/;"	p	signature:(sys_prot_t pval)
sys_cgetc	./inc/lib.h	/^int	sys_cgetc(void);$/;"	p	signature:(void)
sys_cputs	./inc/lib.h	/^void	sys_cputs(const char *string, size_t len);$/;"	p	signature:(const char *string, size_t len)
sys_e1000_get_mac	./inc/lib.h	/^int sys_e1000_get_mac(uint8_t* mac_addr);$/;"	p	signature:(uint8_t* mac_addr)
sys_e1000_receive	./inc/lib.h	/^int sys_e1000_receive(char *pkt, size_t* length);$/;"	p	signature:(char *pkt, size_t* length)
sys_e1000_transmit	./inc/lib.h	/^int sys_e1000_transmit(char *pkt, size_t length);$/;"	p	signature:(char *pkt, size_t length)
sys_env_destroy	./inc/lib.h	/^int	sys_env_destroy(envid_t);$/;"	p	signature:(envid_t)
sys_env_set_pgfault_upcall	./inc/lib.h	/^int	sys_env_set_pgfault_upcall(envid_t env, void *upcall);$/;"	p	signature:(envid_t env, void *upcall)
sys_env_set_status	./inc/lib.h	/^int	sys_env_set_status(envid_t env, int status);$/;"	p	signature:(envid_t env, int status)
sys_env_set_trapframe	./inc/lib.h	/^int	sys_env_set_trapframe(envid_t env, struct Trapframe *tf);$/;"	p	signature:(envid_t env, struct Trapframe *tf)
sys_exofork	./inc/lib.h	/^static envid_t sys_exofork(void);$/;"	p	signature:(void)
sys_exofork	./inc/lib.h	/^sys_exofork(void)$/;"	f	signature:(void)
sys_getenvid	./inc/lib.h	/^envid_t	sys_getenvid(void);$/;"	p	signature:(void)
sys_init	./net/lwip/include/lwip/sys.h	/^void sys_init(void);$/;"	p	signature:(void)
sys_init	./net/lwip/include/lwip/sys.h	50;"	d
sys_ipc_recv	./inc/lib.h	/^int	sys_ipc_recv(void *rcv_pg);$/;"	p	signature:(void *rcv_pg)
sys_ipc_try_send	./inc/lib.h	/^int	sys_ipc_try_send(envid_t to_env, uint32_t value, void *pg, int perm);$/;"	p	signature:(envid_t to_env, uint32_t value, void *pg, int perm)
sys_jiffies	./net/lwip/include/lwip/sys.h	/^u32_t sys_jiffies(void); \/* since power up. *\/$/;"	p	signature:(void)
sys_mbox_fetch	./net/lwip/include/lwip/sys.h	/^void sys_mbox_fetch(sys_mbox_t mbox, void **msg);$/;"	p	signature:(sys_mbox_t mbox, void **msg)
sys_mbox_fetch	./net/lwip/include/lwip/sys.h	60;"	d
sys_mbox_free	./net/lwip/include/lwip/sys.h	/^void sys_mbox_free(sys_mbox_t mbox);$/;"	p	signature:(sys_mbox_t mbox)
sys_mbox_free	./net/lwip/include/lwip/sys.h	64;"	d
sys_mbox_new	./net/lwip/include/lwip/sys.h	/^sys_mbox_t sys_mbox_new(int size);$/;"	p	signature:(int size)
sys_mbox_new	./net/lwip/include/lwip/sys.h	59;"	d
sys_mbox_post	./net/lwip/include/lwip/sys.h	/^void sys_mbox_post(sys_mbox_t mbox, void *msg);$/;"	p	signature:(sys_mbox_t mbox, void *msg)
sys_mbox_post	./net/lwip/include/lwip/sys.h	62;"	d
sys_mbox_t	./net/lwip/include/lwip/sys.h	/^typedef u8_t sys_mbox_t;$/;"	t
sys_mbox_t	./net/lwip/jos/arch/sys_arch.h	/^typedef int sys_mbox_t;$/;"	t
sys_mbox_tryfetch	./net/lwip/include/lwip/sys.h	135;"	d
sys_mbox_tryfetch	./net/lwip/include/lwip/sys.h	61;"	d
sys_mbox_trypost	./net/lwip/include/lwip/sys.h	/^err_t sys_mbox_trypost(sys_mbox_t mbox, void *msg);$/;"	p	signature:(sys_mbox_t mbox, void *msg)
sys_mbox_trypost	./net/lwip/include/lwip/sys.h	63;"	d
sys_msleep	./net/lwip/include/lwip/sys.h	/^void sys_msleep(u32_t ms); \/* only has a (close to) 1 jiffy resolution. *\/$/;"	p	signature:(u32_t ms)
sys_now	./net/lwip/include/lwip/sys.h	/^unsigned long sys_now(void);$/;"	p	signature:(void)
sys_page_alloc	./inc/lib.h	/^int	sys_page_alloc(envid_t env, void *pg, int perm);$/;"	p	signature:(envid_t env, void *pg, int perm)
sys_page_map	./inc/lib.h	/^int	sys_page_map(envid_t src_env, void *src_pg,$/;"	p	signature:(envid_t src_env, void *src_pg, envid_t dst_env, void *dst_pg, int perm)
sys_page_unmap	./inc/lib.h	/^int	sys_page_unmap(envid_t env, void *pg);$/;"	p	signature:(envid_t env, void *pg)
sys_prot_t	./net/lwip/include/lwip/sys.h	/^typedef u8_t sys_prot_t;$/;"	t
sys_sem_free	./net/lwip/include/lwip/sys.h	/^void sys_sem_free(sys_sem_t sem);$/;"	p	signature:(sys_sem_t sem)
sys_sem_free	./net/lwip/include/lwip/sys.h	58;"	d
sys_sem_new	./net/lwip/include/lwip/sys.h	/^sys_sem_t sys_sem_new(u8_t count);$/;"	p	signature:(u8_t count)
sys_sem_new	./net/lwip/include/lwip/sys.h	53;"	d
sys_sem_signal	./net/lwip/include/lwip/sys.h	/^void sys_sem_signal(sys_sem_t sem);$/;"	p	signature:(sys_sem_t sem)
sys_sem_signal	./net/lwip/include/lwip/sys.h	54;"	d
sys_sem_t	./net/lwip/include/lwip/sys.h	/^typedef u8_t sys_sem_t;$/;"	t
sys_sem_t	./net/lwip/jos/arch/sys_arch.h	/^typedef	int sys_sem_t;$/;"	t
sys_sem_wait	./net/lwip/include/lwip/sys.h	/^void sys_sem_wait(sys_sem_t sem);$/;"	p	signature:(sys_sem_t sem)
sys_sem_wait	./net/lwip/include/lwip/sys.h	55;"	d
sys_sem_wait_timeout	./net/lwip/include/lwip/sys.h	/^int sys_sem_wait_timeout(sys_sem_t sem, u32_t timeout);$/;"	p	signature:(sys_sem_t sem, u32_t timeout)
sys_sem_wait_timeout	./net/lwip/include/lwip/sys.h	56;"	d
sys_thread_new	./net/lwip/include/lwip/sys.h	/^sys_thread_t sys_thread_new(char *name, void (* thread)(void *arg), void *arg, int stacksize, int prio);$/;"	p	signature:(char *name, void (* thread)(void *arg), void *arg, int stacksize, int prio)
sys_thread_new	./net/lwip/include/lwip/sys.h	66;"	d
sys_thread_t	./net/lwip/jos/arch/sys_arch.h	/^typedef int sys_thread_t;$/;"	t
sys_time_msec	./inc/lib.h	/^unsigned int sys_time_msec(void);$/;"	p	signature:(void)
sys_timeo	./net/lwip/include/lwip/sys.h	/^struct sys_timeo {$/;"	s
sys_timeo	./net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	s
sys_timeo::arg	./net/lwip/include/lwip/sys.h	/^  void *arg;$/;"	m	struct:sys_timeo	access:public
sys_timeo::dummy	./net/lwip/include/lwip/sys.h	/^struct sys_timeo {u8_t dummy;};$/;"	m	struct:sys_timeo	access:public
sys_timeo::h	./net/lwip/include/lwip/sys.h	/^  sys_timeout_handler h;$/;"	m	struct:sys_timeo	access:public
sys_timeo::next	./net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeo	typeref:struct:sys_timeo::sys_timeo	access:public
sys_timeo::time	./net/lwip/include/lwip/sys.h	/^  u32_t time;$/;"	m	struct:sys_timeo	access:public
sys_timeout	./net/lwip/include/lwip/sys.h	/^void sys_timeout(u32_t msecs, sys_timeout_handler h, void *arg);$/;"	p	signature:(u32_t msecs, sys_timeout_handler h, void *arg)
sys_timeout	./net/lwip/include/lwip/sys.h	51;"	d
sys_timeout_handler	./net/lwip/include/lwip/sys.h	/^typedef void (* sys_timeout_handler)(void *arg);$/;"	t
sys_timeouts	./net/lwip/include/lwip/sys.h	/^struct sys_timeouts {$/;"	s
sys_timeouts::next	./net/lwip/include/lwip/sys.h	/^  struct sys_timeo *next;$/;"	m	struct:sys_timeouts	typeref:struct:sys_timeouts::sys_timeo	access:public
sys_untimeout	./net/lwip/include/lwip/sys.h	/^void sys_untimeout(sys_timeout_handler h, void *arg);$/;"	p	signature:(sys_timeout_handler h, void *arg)
sys_untimeout	./net/lwip/include/lwip/sys.h	52;"	d
sys_yield	./inc/lib.h	/^void	sys_yield(void);$/;"	p	signature:(void)
syscall	./kern/syscall.h	/^int32_t syscall(uint32_t num, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5);$/;"	p	signature:(uint32_t num, uint32_t a1, uint32_t a2, uint32_t a3, uint32_t a4, uint32_t a5)
system_call_handler	./kern/trap.h	/^int32_t system_call_handler(struct Trapframe*);$/;"	p	signature:(struct Trapframe*)
t1_timeout	./net/lwip/include/lwip/dhcp.h	/^  u16_t t1_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for renewal time *\/$/;"	m	struct:dhcp	access:public
t2_timeout	./net/lwip/include/lwip/dhcp.h	/^  u16_t t2_timeout;  \/* #ticks with period DHCP_COARSE_TIMER_SECS for rebind time *\/$/;"	m	struct:dhcp	access:public
tail	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *tail;$/;"	m	struct:snmp_varbind_root	typeref:struct:snmp_varbind_root::snmp_varbind	access:public
tail	./net/lwip/include/lwip/snmp_structs.h	/^  struct mib_list_node *tail;$/;"	m	struct:mib_list_rootnode	typeref:struct:mib_list_rootnode::mib_list_node	access:public
tc_arg	./net/lwip/jos/arch/threadq.h	/^    uint32_t		tc_arg;$/;"	m	struct:thread_context	access:public
tc_entry	./net/lwip/jos/arch/threadq.h	/^    void		(*tc_entry)(uint32_t);$/;"	m	struct:thread_context	access:public
tc_jb	./net/lwip/jos/arch/threadq.h	/^    struct jos_jmp_buf	tc_jb;$/;"	m	struct:thread_context	typeref:struct:thread_context::jos_jmp_buf	access:public
tc_name	./net/lwip/jos/arch/threadq.h	/^    char 		tc_name[name_size];$/;"	m	struct:thread_context	access:public
tc_nonhalt	./net/lwip/jos/arch/threadq.h	/^    int			tc_nonhalt;$/;"	m	struct:thread_context	access:public
tc_onhalt	./net/lwip/jos/arch/threadq.h	/^    void		(*tc_onhalt[THREAD_NUM_ONHALT])(thread_id_t);$/;"	m	struct:thread_context	access:public
tc_queue_link	./net/lwip/jos/arch/threadq.h	/^    struct thread_context *tc_queue_link;$/;"	m	struct:thread_context	typeref:struct:thread_context::thread_context	access:public
tc_stack_bottom	./net/lwip/jos/arch/threadq.h	/^    void		*tc_stack_bottom;$/;"	m	struct:thread_context	access:public
tc_tid	./net/lwip/jos/arch/threadq.h	/^    thread_id_t		tc_tid;$/;"	m	struct:thread_context	access:public
tc_wait_addr	./net/lwip/jos/arch/threadq.h	/^    volatile uint32_t	*tc_wait_addr;$/;"	m	struct:thread_context	access:public
tc_wakeup	./net/lwip/jos/arch/threadq.h	/^    volatile char	tc_wakeup;$/;"	m	struct:thread_context	access:public
tclass1	./net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr	access:public
tclass2	./net/lwip/include/ipv6/lwip/ip.h	/^  u8_t flow1:4, tclass2:4;  $/;"	m	struct:ip_hdr	access:public
tcp	./net/lwip/include/lwip/api.h	/^    struct tcp_pcb *tcp;$/;"	m	union:netconn::__anon34	typeref:struct:netconn::__anon34::tcp_pcb	access:public
tcp	./net/lwip/include/lwip/stats.h	/^  struct stats_proto tcp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto	access:public
tcp_abort	./net/lwip/include/lwip/tcp.h	/^void             tcp_abort   (struct tcp_pcb *pcb);$/;"	p	signature:(struct tcp_pcb *pcb)
tcp_accept	./net/lwip/include/lwip/tcp.h	/^void             tcp_accept  (struct tcp_pcb *pcb,$/;"	p	signature:(struct tcp_pcb *pcb, err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err))
tcp_accepted	./net/lwip/include/lwip/tcp.h	83;"	d
tcp_accepted	./net/lwip/include/lwip/tcp.h	85;"	d
tcp_ack	./net/lwip/include/lwip/tcp.h	509;"	d
tcp_ack_now	./net/lwip/include/lwip/tcp.h	517;"	d
tcp_alloc	./net/lwip/include/lwip/tcp.h	/^struct tcp_pcb * tcp_alloc   (u8_t prio);$/;"	p	signature:(u8_t prio)
tcp_arg	./net/lwip/include/lwip/tcp.h	/^void             tcp_arg     (struct tcp_pcb *pcb, void *arg);$/;"	p	signature:(struct tcp_pcb *pcb, void *arg)
tcp_bind	./net/lwip/include/lwip/tcp.h	/^err_t            tcp_bind    (struct tcp_pcb *pcb, struct ip_addr *ipaddr,$/;"	p	signature:(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)
tcp_close	./net/lwip/include/lwip/tcp.h	/^err_t            tcp_close   (struct tcp_pcb *pcb);$/;"	p	signature:(struct tcp_pcb *pcb)
tcp_connect	./net/lwip/include/lwip/tcp.h	/^err_t            tcp_connect (struct tcp_pcb *pcb, struct ip_addr *ipaddr,$/;"	p	signature:(struct tcp_pcb *pcb, struct ip_addr *ipaddr, u16_t port, err_t (* connected)(void *arg, struct tcp_pcb *tpcb, err_t err))
tcp_debug_print	./net/lwip/include/lwip/tcp.h	/^void tcp_debug_print(struct tcp_hdr *tcphdr);$/;"	p	signature:(struct tcp_hdr *tcphdr)
tcp_debug_print	./net/lwip/include/lwip/tcp.h	550;"	d
tcp_debug_print_flags	./net/lwip/include/lwip/tcp.h	/^void tcp_debug_print_flags(u8_t flags);$/;"	p	signature:(u8_t flags)
tcp_debug_print_flags	./net/lwip/include/lwip/tcp.h	551;"	d
tcp_debug_print_pcbs	./net/lwip/include/lwip/tcp.h	/^void tcp_debug_print_pcbs(void);$/;"	p	signature:(void)
tcp_debug_print_pcbs	./net/lwip/include/lwip/tcp.h	553;"	d
tcp_debug_print_state	./net/lwip/include/lwip/tcp.h	/^void tcp_debug_print_state(enum tcp_state s);$/;"	p	signature:(enum tcp_state s)
tcp_debug_print_state	./net/lwip/include/lwip/tcp.h	552;"	d
tcp_do_output_nagle	./net/lwip/include/lwip/tcp.h	134;"	d
tcp_eff_send_mss	./net/lwip/include/lwip/tcp.h	/^u16_t tcp_eff_send_mss(u16_t sendmss, struct ip_addr *addr);$/;"	p	signature:(u16_t sendmss, struct ip_addr *addr)
tcp_enqueue	./net/lwip/include/lwip/tcp.h	/^err_t tcp_enqueue(struct tcp_pcb *pcb, void *dataptr, u16_t len,$/;"	p	signature:(struct tcp_pcb *pcb, void *dataptr, u16_t len, u8_t flags, u8_t apiflags, u8_t *optdata, u8_t optlen)
tcp_err	./net/lwip/include/lwip/tcp.h	/^void             tcp_err     (struct tcp_pcb *pcb,$/;"	p	signature:(struct tcp_pcb *pcb, void (* err)(void *arg, err_t err))
tcp_fasttmr	./net/lwip/include/lwip/tcp.h	/^void             tcp_fasttmr (void);$/;"	p	signature:(void)
tcp_hdr	./net/lwip/include/lwip/tcp.h	/^struct tcp_hdr {$/;"	s
tcp_hdr::PACK_STRUCT_FIELD	./net/lwip/include/lwip/tcp.h	/^  PACK_STRUCT_FIELD(u16_t _hdrlen_rsvd_flags);$/;"	p	struct:tcp_hdr	access:public	signature:(u16_t _hdrlen_rsvd_flags)
tcp_hdr::PACK_STRUCT_FIELD	./net/lwip/include/lwip/tcp.h	/^  PACK_STRUCT_FIELD(u16_t chksum);$/;"	p	struct:tcp_hdr	access:public	signature:(u16_t chksum)
tcp_hdr::PACK_STRUCT_FIELD	./net/lwip/include/lwip/tcp.h	/^  PACK_STRUCT_FIELD(u16_t dest);$/;"	p	struct:tcp_hdr	access:public	signature:(u16_t dest)
tcp_hdr::PACK_STRUCT_FIELD	./net/lwip/include/lwip/tcp.h	/^  PACK_STRUCT_FIELD(u16_t src);$/;"	p	struct:tcp_hdr	access:public	signature:(u16_t src)
tcp_hdr::PACK_STRUCT_FIELD	./net/lwip/include/lwip/tcp.h	/^  PACK_STRUCT_FIELD(u16_t urgp);$/;"	p	struct:tcp_hdr	access:public	signature:(u16_t urgp)
tcp_hdr::PACK_STRUCT_FIELD	./net/lwip/include/lwip/tcp.h	/^  PACK_STRUCT_FIELD(u16_t wnd);$/;"	p	struct:tcp_hdr	access:public	signature:(u16_t wnd)
tcp_hdr::PACK_STRUCT_FIELD	./net/lwip/include/lwip/tcp.h	/^  PACK_STRUCT_FIELD(u32_t ackno);$/;"	p	struct:tcp_hdr	access:public	signature:(u32_t ackno)
tcp_hdr::PACK_STRUCT_FIELD	./net/lwip/include/lwip/tcp.h	/^  PACK_STRUCT_FIELD(u32_t seqno);$/;"	p	struct:tcp_hdr	access:public	signature:(u32_t seqno)
tcp_init	./net/lwip/include/lwip/tcp.h	55;"	d
tcp_input	./net/lwip/include/lwip/tcp.h	/^void             tcp_input   (struct pbuf *p, struct netif *inp);$/;"	p	signature:(struct pbuf *p, struct netif *inp)
tcp_keepalive	./net/lwip/include/lwip/tcp.h	/^void tcp_keepalive(struct tcp_pcb *pcb);$/;"	p	signature:(struct tcp_pcb *pcb)
tcp_listen	./net/lwip/include/lwip/tcp.h	97;"	d
tcp_listen_pcbs_t	./net/lwip/include/lwip/tcp.h	/^union tcp_listen_pcbs_t { \/* List of all TCP PCBs in LISTEN state. *\/$/;"	u
tcp_listen_pcbs_t::listen_pcbs	./net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb_listen *listen_pcbs; $/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb_listen	access:public
tcp_listen_pcbs_t::pcbs	./net/lwip/include/lwip/tcp.h	/^  struct tcp_pcb *pcbs;$/;"	m	union:tcp_listen_pcbs_t	typeref:struct:tcp_listen_pcbs_t::tcp_pcb	access:public
tcp_listen_with_backlog	./net/lwip/include/lwip/tcp.h	/^struct tcp_pcb * tcp_listen_with_backlog(struct tcp_pcb *pcb, u8_t backlog);$/;"	p	signature:(struct tcp_pcb *pcb, u8_t backlog)
tcp_mss	./net/lwip/include/lwip/tcp.h	79;"	d
tcp_new	./net/lwip/include/lwip/tcp.h	/^struct tcp_pcb * tcp_new     (void);$/;"	p	signature:(void)
tcp_next_iss	./net/lwip/include/lwip/tcp.h	/^u32_t tcp_next_iss(void);$/;"	p	signature:(void)
tcp_output	./net/lwip/include/lwip/tcp.h	/^err_t            tcp_output  (struct tcp_pcb *pcb);$/;"	p	signature:(struct tcp_pcb *pcb)
tcp_output_nagle	./net/lwip/include/lwip/tcp.h	138;"	d
tcp_pcb	./net/lwip/include/lwip/tcp.h	/^struct tcp_pcb {$/;"	s
tcp_pcb::IP_PCB	./net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::TCP_PCB_COMMON	./net/lwip/include/lwip/tcp.h	/^  TCP_PCB_COMMON(struct tcp_pcb);$/;"	p	struct:tcp_pcb	access:public	signature:(struct tcp_pcb)
tcp_pcb::accept	./net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::acked	./net/lwip/include/lwip/tcp.h	/^  u16_t acked;$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::connected	./net/lwip/include/lwip/tcp.h	/^  err_t (* connected)(void *arg, struct tcp_pcb *pcb, err_t err);$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::cwnd	./net/lwip/include/lwip/tcp.h	/^  u16_t cwnd;  $/;"	m	struct:tcp_pcb	access:public
tcp_pcb::dupacks	./net/lwip/include/lwip/tcp.h	/^  u8_t dupacks;$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::errf	./net/lwip/include/lwip/tcp.h	/^  void (* errf)(void *arg, err_t err);$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::flags	./net/lwip/include/lwip/tcp.h	/^  u8_t flags;$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::keep_cnt	./net/lwip/include/lwip/tcp.h	/^  u32_t keep_cnt;$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::keep_cnt_sent	./net/lwip/include/lwip/tcp.h	/^  u8_t keep_cnt_sent;$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::keep_idle	./net/lwip/include/lwip/tcp.h	/^  u32_t keep_idle;$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::keep_intvl	./net/lwip/include/lwip/tcp.h	/^  u32_t keep_intvl;$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::lastack	./net/lwip/include/lwip/tcp.h	/^  u32_t lastack; \/* Highest acknowledged seqno. *\/$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::mss	./net/lwip/include/lwip/tcp.h	/^  u16_t mss;   \/* maximum segment size *\/$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::nrtx	./net/lwip/include/lwip/tcp.h	/^  u8_t nrtx;    \/* number of retransmissions *\/$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::ooseq	./net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *ooseq;    \/* Received out of sequence segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg	access:public
tcp_pcb::persist_backoff	./net/lwip/include/lwip/tcp.h	/^  u8_t persist_backoff;$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::persist_cnt	./net/lwip/include/lwip/tcp.h	/^  u32_t persist_cnt;$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::poll	./net/lwip/include/lwip/tcp.h	/^  err_t (* poll)(void *arg, struct tcp_pcb *pcb);$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::pollinterval	./net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::polltmr	./net/lwip/include/lwip/tcp.h	/^  u8_t polltmr, pollinterval;$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::rcv_ann_wnd	./net/lwip/include/lwip/tcp.h	/^  u16_t rcv_ann_wnd; \/* announced receive window *\/$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::rcv_nxt	./net/lwip/include/lwip/tcp.h	/^  u32_t rcv_nxt;   \/* next seqno expected *\/$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::rcv_wnd	./net/lwip/include/lwip/tcp.h	/^  u16_t rcv_wnd;   \/* receiver window *\/$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::recv	./net/lwip/include/lwip/tcp.h	/^  err_t (* recv)(void *arg, struct tcp_pcb *pcb, struct pbuf *p, err_t err);$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::refused_data	./net/lwip/include/lwip/tcp.h	/^  struct pbuf *refused_data; \/* Data previously received but not yet taken by upper layer *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::pbuf	access:public
tcp_pcb::remote_port	./net/lwip/include/lwip/tcp.h	/^  u16_t remote_port;$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::rtime	./net/lwip/include/lwip/tcp.h	/^  s16_t rtime;$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::rto	./net/lwip/include/lwip/tcp.h	/^  s16_t rto;    \/* retransmission time-out *\/$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::rtseq	./net/lwip/include/lwip/tcp.h	/^  u32_t rtseq;  \/* sequence number being timed *\/$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::rttest	./net/lwip/include/lwip/tcp.h	/^  u32_t rttest; \/* RTT estimate in 500ms ticks *\/$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::sa	./net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::sent	./net/lwip/include/lwip/tcp.h	/^  err_t (* sent)(void *arg, struct tcp_pcb *pcb, u16_t space);$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::snd_buf	./net/lwip/include/lwip/tcp.h	/^  u16_t snd_buf;   \/* Available buffer space for sending (in bytes). *\/$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::snd_lbb	./net/lwip/include/lwip/tcp.h	/^    snd_lbb;       \/* Sequence number of next byte to be buffered. *\/$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::snd_max	./net/lwip/include/lwip/tcp.h	/^    snd_max;       \/* Highest seqno sent. *\/$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::snd_nxt	./net/lwip/include/lwip/tcp.h	/^  u32_t snd_nxt,   \/* next seqno to be sent *\/$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::snd_queuelen	./net/lwip/include/lwip/tcp.h	/^  u16_t snd_queuelen; \/* Available buffer space for sending (in tcp_segs). *\/$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::snd_wl1	./net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::snd_wl2	./net/lwip/include/lwip/tcp.h	/^  u32_t snd_wl1, snd_wl2, \/* Sequence and acknowledgement numbers of last$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::snd_wnd	./net/lwip/include/lwip/tcp.h	/^  u16_t snd_wnd;   \/* sender window *\/$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::ssthresh	./net/lwip/include/lwip/tcp.h	/^  u16_t ssthresh;$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::sv	./net/lwip/include/lwip/tcp.h	/^  s16_t sa, sv; \/* @todo document this *\/$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::tmr	./net/lwip/include/lwip/tcp.h	/^  u32_t tmr;$/;"	m	struct:tcp_pcb	access:public
tcp_pcb::unacked	./net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unacked;  \/* Sent but unacknowledged segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg	access:public
tcp_pcb::unsent	./net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unsent;   \/* Unsent (queued) segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg	access:public
tcp_pcb_copy	./net/lwip/include/lwip/tcp.h	/^struct tcp_pcb *tcp_pcb_copy(struct tcp_pcb *pcb);$/;"	p	signature:(struct tcp_pcb *pcb)
tcp_pcb_listen	./net/lwip/include/lwip/tcp.h	/^struct tcp_pcb_listen {  $/;"	s
tcp_pcb_listen::IP_PCB	./net/lwip/include/lwip/tcp.h	/^  IP_PCB;$/;"	m	struct:tcp_pcb_listen	access:public
tcp_pcb_listen::TCP_PCB_COMMON	./net/lwip/include/lwip/tcp.h	/^  TCP_PCB_COMMON(struct tcp_pcb_listen);$/;"	p	struct:tcp_pcb_listen	access:public	signature:(struct tcp_pcb_listen)
tcp_pcb_listen::accept	./net/lwip/include/lwip/tcp.h	/^  err_t (* accept)(void *arg, struct tcp_pcb *newpcb, err_t err);$/;"	m	struct:tcp_pcb_listen	access:public
tcp_pcb_listen::accepts_pending	./net/lwip/include/lwip/tcp.h	/^  u8_t accepts_pending;$/;"	m	struct:tcp_pcb_listen	access:public
tcp_pcb_listen::backlog	./net/lwip/include/lwip/tcp.h	/^  u8_t backlog;$/;"	m	struct:tcp_pcb_listen	access:public
tcp_pcb_purge	./net/lwip/include/lwip/tcp.h	/^void tcp_pcb_purge(struct tcp_pcb *pcb);$/;"	p	signature:(struct tcp_pcb *pcb)
tcp_pcb_remove	./net/lwip/include/lwip/tcp.h	/^void tcp_pcb_remove(struct tcp_pcb **pcblist, struct tcp_pcb *pcb);$/;"	p	signature:(struct tcp_pcb **pcblist, struct tcp_pcb *pcb)
tcp_pcbs_sane	./net/lwip/include/lwip/tcp.h	/^s16_t tcp_pcbs_sane(void);$/;"	p	signature:(void)
tcp_pcbs_sane	./net/lwip/include/lwip/tcp.h	554;"	d
tcp_poll	./net/lwip/include/lwip/tcp.h	/^void             tcp_poll    (struct tcp_pcb *pcb,$/;"	p	signature:(struct tcp_pcb *pcb, err_t (* poll)(void *arg, struct tcp_pcb *tpcb), u8_t interval)
tcp_recv	./net/lwip/include/lwip/tcp.h	/^void             tcp_recv    (struct tcp_pcb *pcb,$/;"	p	signature:(struct tcp_pcb *pcb, err_t (* recv)(void *arg, struct tcp_pcb *tpcb, struct pbuf *p, err_t err))
tcp_recved	./net/lwip/include/lwip/tcp.h	/^void             tcp_recved  (struct tcp_pcb *pcb, u16_t len);$/;"	p	signature:(struct tcp_pcb *pcb, u16_t len)
tcp_rexmit	./net/lwip/include/lwip/tcp.h	/^void             tcp_rexmit  (struct tcp_pcb *pcb);$/;"	p	signature:(struct tcp_pcb *pcb)
tcp_rexmit_rto	./net/lwip/include/lwip/tcp.h	/^void             tcp_rexmit_rto  (struct tcp_pcb *pcb);$/;"	p	signature:(struct tcp_pcb *pcb)
tcp_rexmit_seg	./net/lwip/include/lwip/tcp.h	/^void tcp_rexmit_seg(struct tcp_pcb *pcb, struct tcp_seg *seg);$/;"	p	signature:(struct tcp_pcb *pcb, struct tcp_seg *seg)
tcp_rst	./net/lwip/include/lwip/tcp.h	/^void tcp_rst(u32_t seqno, u32_t ackno,$/;"	p	signature:(u32_t seqno, u32_t ackno, struct ip_addr *local_ip, struct ip_addr *remote_ip, u16_t local_port, u16_t remote_port)
tcp_seg	./net/lwip/include/lwip/tcp.h	/^struct tcp_seg {$/;"	s
tcp_seg::dataptr	./net/lwip/include/lwip/tcp.h	/^  void *dataptr;           \/* pointer to the TCP data in the pbuf *\/$/;"	m	struct:tcp_seg	access:public
tcp_seg::len	./net/lwip/include/lwip/tcp.h	/^  u16_t len;               \/* the TCP length of this segment *\/$/;"	m	struct:tcp_seg	access:public
tcp_seg::next	./net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *next;    \/* used when putting segements on a queue *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_seg	access:public
tcp_seg::p	./net/lwip/include/lwip/tcp.h	/^  struct pbuf *p;          \/* buffer containing data + TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::pbuf	access:public
tcp_seg::tcphdr	./net/lwip/include/lwip/tcp.h	/^  struct tcp_hdr *tcphdr;  \/* the TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_hdr	access:public
tcp_seg_copy	./net/lwip/include/lwip/tcp.h	/^struct tcp_seg *tcp_seg_copy(struct tcp_seg *seg);$/;"	p	signature:(struct tcp_seg *seg)
tcp_seg_free	./net/lwip/include/lwip/tcp.h	/^u8_t tcp_seg_free(struct tcp_seg *seg);$/;"	p	signature:(struct tcp_seg *seg)
tcp_segs_free	./net/lwip/include/lwip/tcp.h	/^u8_t tcp_segs_free(struct tcp_seg *seg);$/;"	p	signature:(struct tcp_seg *seg)
tcp_send_ctrl	./net/lwip/include/lwip/tcp.h	/^err_t tcp_send_ctrl(struct tcp_pcb *pcb, u8_t flags);$/;"	p	signature:(struct tcp_pcb *pcb, u8_t flags)
tcp_sent	./net/lwip/include/lwip/tcp.h	/^void             tcp_sent    (struct tcp_pcb *pcb,$/;"	p	signature:(struct tcp_pcb *pcb, err_t (* sent)(void *arg, struct tcp_pcb *tpcb, u16_t len))
tcp_seq	./net/lwip/netif/ppp/vjbsdhdr.h	/^typedef u32_t tcp_seq;$/;"	t
tcp_setprio	./net/lwip/include/lwip/tcp.h	/^void             tcp_setprio (struct tcp_pcb *pcb, u8_t prio);$/;"	p	signature:(struct tcp_pcb *pcb, u8_t prio)
tcp_slowtmr	./net/lwip/include/lwip/tcp.h	/^void             tcp_slowtmr (void);$/;"	p	signature:(void)
tcp_sndbuf	./net/lwip/include/lwip/tcp.h	80;"	d
tcp_state	./net/lwip/include/lwip/tcp.h	/^enum tcp_state {$/;"	g
tcp_timer_needed	./net/lwip/include/lwip/tcp.h	/^void tcp_timer_needed(void);$/;"	p	signature:(void)
tcp_timer_needed	./net/lwip/include/lwip/tcp.h	558;"	d
tcp_tmr	./net/lwip/include/lwip/tcp.h	/^void             tcp_tmr     (void);  \/* Must be called every$/;"	p	signature:(void)
tcp_write	./net/lwip/include/lwip/tcp.h	/^err_t            tcp_write   (struct tcp_pcb *pcb, const void *dataptr, u16_t len,$/;"	p	signature:(struct tcp_pcb *pcb, const void *dataptr, u16_t len, u8_t apiflags)
tcp_zero_window_probe	./net/lwip/include/lwip/tcp.h	/^void tcp_zero_window_probe(struct tcp_pcb *pcb);$/;"	p	signature:(struct tcp_pcb *pcb)
tcphdr	./net/lwip/include/lwip/tcp.h	/^  struct tcp_hdr *tcphdr;  \/* the TCP header *\/$/;"	m	struct:tcp_seg	typeref:struct:tcp_seg::tcp_hdr	access:public
tcphdr	./net/lwip/netif/ppp/vjbsdhdr.h	/^struct tcphdr  $/;"	s
tcphdr::th_ack	./net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_ack;      \/* acknowledgement number *\/$/;"	m	struct:tcphdr	access:public
tcphdr::th_dport	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_dport;    \/* destination port *\/$/;"	m	struct:tcphdr	access:public
tcphdr::th_flags	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_flags;$/;"	m	struct:tcphdr	access:public
tcphdr::th_off	./net/lwip/netif/ppp/vjbsdhdr.h	/^           th_off:4;    \/* data offset *\/$/;"	m	struct:tcphdr	access:public
tcphdr::th_off	./net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_off:4,    \/* data offset *\/$/;"	m	struct:tcphdr	access:public
tcphdr::th_seq	./net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_seq;      \/* sequence number *\/$/;"	m	struct:tcphdr	access:public
tcphdr::th_sport	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sport;    \/* source port *\/$/;"	m	struct:tcphdr	access:public
tcphdr::th_sum	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sum;      \/* checksum *\/$/;"	m	struct:tcphdr	access:public
tcphdr::th_urp	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_urp;      \/* urgent pointer *\/$/;"	m	struct:tcphdr	access:public
tcphdr::th_win	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_win;      \/* window *\/$/;"	m	struct:tcphdr	access:public
tcphdr::th_x2	./net/lwip/netif/ppp/vjbsdhdr.h	/^           th_x2 :4;    \/* (unused) *\/$/;"	m	struct:tcphdr	access:public
tcphdr::th_x2	./net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_x2 :4,    \/* (unused) *\/$/;"	m	struct:tcphdr	access:public
tcphdr::th_x2_off	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_x2_off;$/;"	m	struct:tcphdr	access:public
tcpip_apimsg	./net/lwip/include/lwip/tcpip.h	/^err_t tcpip_apimsg(struct api_msg *apimsg);$/;"	p	signature:(struct api_msg *apimsg)
tcpip_apimsg_lock	./net/lwip/include/lwip/tcpip.h	/^err_t tcpip_apimsg_lock(struct api_msg *apimsg);$/;"	p	signature:(struct api_msg *apimsg)
tcpip_callback	./net/lwip/include/lwip/tcpip.h	86;"	d
tcpip_callback_with_block	./net/lwip/include/lwip/tcpip.h	/^err_t tcpip_callback_with_block(void (*f)(void *ctx), void *ctx, u8_t block);$/;"	p	signature:(void (*f)(void *ctx), void *ctx, u8_t block)
tcpip_init	./net/lwip/include/lwip/tcpip.h	/^void tcpip_init(void (* tcpip_init_done)(void *), void *arg);$/;"	p	signature:(void (* tcpip_init_done)(void *), void *arg)
tcpip_input	./net/lwip/include/lwip/tcpip.h	/^err_t tcpip_input(struct pbuf *p, struct netif *inp);$/;"	p	signature:(struct pbuf *p, struct netif *inp)
tcpip_msg	./net/lwip/include/lwip/tcpip.h	/^struct tcpip_msg {$/;"	s
tcpip_msg::__anon27::__anon28::netif	./net/lwip/include/lwip/tcpip.h	/^      struct netif *netif;$/;"	m	struct:tcpip_msg::__anon27::__anon28	typeref:struct:tcpip_msg::__anon27::__anon28::netif	access:public
tcpip_msg::__anon27::__anon28::p	./net/lwip/include/lwip/tcpip.h	/^      struct pbuf *p;$/;"	m	struct:tcpip_msg::__anon27::__anon28	typeref:struct:tcpip_msg::__anon27::__anon28::pbuf	access:public
tcpip_msg::__anon27::__anon29::ctx	./net/lwip/include/lwip/tcpip.h	/^      void *ctx;$/;"	m	struct:tcpip_msg::__anon27::__anon29	access:public
tcpip_msg::__anon27::__anon29::f	./net/lwip/include/lwip/tcpip.h	/^      void (*f)(void *ctx);$/;"	m	struct:tcpip_msg::__anon27::__anon29	access:public
tcpip_msg::__anon27::__anon30::arg	./net/lwip/include/lwip/tcpip.h	/^      void *arg;$/;"	m	struct:tcpip_msg::__anon27::__anon30	access:public
tcpip_msg::__anon27::__anon30::h	./net/lwip/include/lwip/tcpip.h	/^      sys_timeout_handler h;$/;"	m	struct:tcpip_msg::__anon27::__anon30	access:public
tcpip_msg::__anon27::__anon30::msecs	./net/lwip/include/lwip/tcpip.h	/^      u32_t msecs;$/;"	m	struct:tcpip_msg::__anon27::__anon30	access:public
tcpip_msg::__anon27::apimsg	./net/lwip/include/lwip/tcpip.h	/^    struct api_msg *apimsg;$/;"	m	union:tcpip_msg::__anon27	typeref:struct:tcpip_msg::__anon27::api_msg	access:public
tcpip_msg::__anon27::cb	./net/lwip/include/lwip/tcpip.h	/^    } cb;$/;"	m	union:tcpip_msg::__anon27	typeref:struct:tcpip_msg::__anon27::__anon29	access:public
tcpip_msg::__anon27::inp	./net/lwip/include/lwip/tcpip.h	/^    } inp;$/;"	m	union:tcpip_msg::__anon27	typeref:struct:tcpip_msg::__anon27::__anon28	access:public
tcpip_msg::__anon27::netifapimsg	./net/lwip/include/lwip/tcpip.h	/^    struct netifapi_msg *netifapimsg;$/;"	m	union:tcpip_msg::__anon27	typeref:struct:tcpip_msg::__anon27::netifapi_msg	access:public
tcpip_msg::__anon27::tmo	./net/lwip/include/lwip/tcpip.h	/^    } tmo;$/;"	m	union:tcpip_msg::__anon27	typeref:struct:tcpip_msg::__anon27::__anon30	access:public
tcpip_msg::msg	./net/lwip/include/lwip/tcpip.h	/^  } msg;$/;"	m	struct:tcpip_msg	typeref:union:tcpip_msg::__anon27	access:public
tcpip_msg::sem	./net/lwip/include/lwip/tcpip.h	/^  sys_sem_t *sem;$/;"	m	struct:tcpip_msg	access:public
tcpip_msg::type	./net/lwip/include/lwip/tcpip.h	/^  enum tcpip_msg_type type;$/;"	m	struct:tcpip_msg	typeref:enum:tcpip_msg::tcpip_msg_type	access:public
tcpip_msg_type	./net/lwip/include/lwip/tcpip.h	/^enum tcpip_msg_type {$/;"	g
tcpip_netifapi	./net/lwip/include/lwip/tcpip.h	/^err_t tcpip_netifapi(struct netifapi_msg *netifapimsg);$/;"	p	signature:(struct netifapi_msg *netifapimsg)
tcpip_netifapi_lock	./net/lwip/include/lwip/tcpip.h	/^err_t tcpip_netifapi_lock(struct netifapi_msg *netifapimsg);$/;"	p	signature:(struct netifapi_msg *netifapimsg)
tcpip_timeout	./net/lwip/include/lwip/tcpip.h	/^err_t tcpip_timeout(u32_t msecs, sys_timeout_handler h, void *arg);$/;"	p	signature:(u32_t msecs, sys_timeout_handler h, void *arg)
tcpip_untimeout	./net/lwip/include/lwip/tcpip.h	93;"	d
term_reason	./net/lwip/netif/ppp/fsm.h	/^  char* term_reason;               \/* Reason for closing protocol *\/$/;"	m	struct:fsm	access:public
term_reason_len	./net/lwip/netif/ppp/fsm.h	/^  int term_reason_len;             \/* Length of term_reason *\/$/;"	m	struct:fsm	access:public
tf_cs	./inc/trap.h	/^	uint16_t tf_cs;$/;"	m	struct:Trapframe	access:public
tf_ds	./inc/trap.h	/^	uint16_t tf_ds;$/;"	m	struct:Trapframe	access:public
tf_eflags	./inc/trap.h	/^	uint32_t tf_eflags;$/;"	m	struct:Trapframe	access:public
tf_eip	./inc/trap.h	/^	uintptr_t tf_eip;$/;"	m	struct:Trapframe	access:public
tf_err	./inc/trap.h	/^	uint32_t tf_err;$/;"	m	struct:Trapframe	access:public
tf_es	./inc/trap.h	/^	uint16_t tf_es;$/;"	m	struct:Trapframe	access:public
tf_esp	./inc/trap.h	/^	uintptr_t tf_esp;$/;"	m	struct:Trapframe	access:public
tf_padding1	./inc/trap.h	/^	uint16_t tf_padding1;$/;"	m	struct:Trapframe	access:public
tf_padding2	./inc/trap.h	/^	uint16_t tf_padding2;$/;"	m	struct:Trapframe	access:public
tf_padding3	./inc/trap.h	/^	uint16_t tf_padding3;$/;"	m	struct:Trapframe	access:public
tf_padding4	./inc/trap.h	/^	uint16_t tf_padding4;$/;"	m	struct:Trapframe	access:public
tf_regs	./inc/trap.h	/^	struct PushRegs tf_regs;$/;"	m	struct:Trapframe	typeref:struct:Trapframe::PushRegs	access:public
tf_ss	./inc/trap.h	/^	uint16_t tf_ss;$/;"	m	struct:Trapframe	access:public
tf_trapno	./inc/trap.h	/^	uint32_t tf_trapno;$/;"	m	struct:Trapframe	access:public
th_ack	./net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_ack;      \/* acknowledgement number *\/$/;"	m	struct:tcphdr	access:public
th_dport	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_dport;    \/* destination port *\/$/;"	m	struct:tcphdr	access:public
th_flags	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_flags;$/;"	m	struct:tcphdr	access:public
th_off	./net/lwip/netif/ppp/vjbsdhdr.h	/^           th_off:4;    \/* data offset *\/$/;"	m	struct:tcphdr	access:public
th_off	./net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_off:4,    \/* data offset *\/$/;"	m	struct:tcphdr	access:public
th_seq	./net/lwip/netif/ppp/vjbsdhdr.h	/^  tcp_seq  th_seq;      \/* sequence number *\/$/;"	m	struct:tcphdr	access:public
th_sport	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sport;    \/* source port *\/$/;"	m	struct:tcphdr	access:public
th_sum	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_sum;      \/* checksum *\/$/;"	m	struct:tcphdr	access:public
th_urp	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_urp;      \/* urgent pointer *\/$/;"	m	struct:tcphdr	access:public
th_win	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_short  th_win;      \/* window *\/$/;"	m	struct:tcphdr	access:public
th_x2	./net/lwip/netif/ppp/vjbsdhdr.h	/^           th_x2 :4;    \/* (unused) *\/$/;"	m	struct:tcphdr	access:public
th_x2	./net/lwip/netif/ppp/vjbsdhdr.h	/^  unsigned th_x2 :4,    \/* (unused) *\/$/;"	m	struct:tcphdr	access:public
th_x2_off	./net/lwip/netif/ppp/vjbsdhdr.h	/^  u_char   th_x2_off;$/;"	m	struct:tcphdr	access:public
thiscpu	./kern/cpu.h	38;"	d
thl	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_trap_header_lengths thl;$/;"	m	struct:snmp_msg_trap	typeref:struct:snmp_msg_trap::snmp_trap_header_lengths	access:public
thread_context	./net/lwip/jos/arch/threadq.h	/^struct thread_context {$/;"	s
thread_context::tc_arg	./net/lwip/jos/arch/threadq.h	/^    uint32_t		tc_arg;$/;"	m	struct:thread_context	access:public
thread_context::tc_entry	./net/lwip/jos/arch/threadq.h	/^    void		(*tc_entry)(uint32_t);$/;"	m	struct:thread_context	access:public
thread_context::tc_jb	./net/lwip/jos/arch/threadq.h	/^    struct jos_jmp_buf	tc_jb;$/;"	m	struct:thread_context	typeref:struct:thread_context::jos_jmp_buf	access:public
thread_context::tc_name	./net/lwip/jos/arch/threadq.h	/^    char 		tc_name[name_size];$/;"	m	struct:thread_context	access:public
thread_context::tc_nonhalt	./net/lwip/jos/arch/threadq.h	/^    int			tc_nonhalt;$/;"	m	struct:thread_context	access:public
thread_context::tc_onhalt	./net/lwip/jos/arch/threadq.h	/^    void		(*tc_onhalt[THREAD_NUM_ONHALT])(thread_id_t);$/;"	m	struct:thread_context	access:public
thread_context::tc_queue_link	./net/lwip/jos/arch/threadq.h	/^    struct thread_context *tc_queue_link;$/;"	m	struct:thread_context	typeref:struct:thread_context::thread_context	access:public
thread_context::tc_stack_bottom	./net/lwip/jos/arch/threadq.h	/^    void		*tc_stack_bottom;$/;"	m	struct:thread_context	access:public
thread_context::tc_tid	./net/lwip/jos/arch/threadq.h	/^    thread_id_t		tc_tid;$/;"	m	struct:thread_context	access:public
thread_context::tc_wait_addr	./net/lwip/jos/arch/threadq.h	/^    volatile uint32_t	*tc_wait_addr;$/;"	m	struct:thread_context	access:public
thread_context::tc_wakeup	./net/lwip/jos/arch/threadq.h	/^    volatile char	tc_wakeup;$/;"	m	struct:thread_context	access:public
thread_create	./net/lwip/jos/arch/thread.h	/^int thread_create(thread_id_t *tid, const char *name, $/;"	p	signature:(thread_id_t *tid, const char *name, void (*entry)(uint32_t), uint32_t arg)
thread_halt	./net/lwip/jos/arch/thread.h	/^void thread_halt(void);$/;"	p	signature:(void)
thread_id	./net/lwip/jos/arch/thread.h	/^thread_id_t thread_id(void);$/;"	p	signature:(void)
thread_id_t	./net/lwip/jos/arch/thread.h	/^typedef uint32_t thread_id_t;$/;"	t
thread_init	./net/lwip/jos/arch/thread.h	/^void thread_init(void);$/;"	p	signature:(void)
thread_onhalt	./net/lwip/jos/arch/thread.h	/^int thread_onhalt(void (*fun)(thread_id_t));$/;"	p	signature:(void (*fun)(thread_id_t))
thread_queue	./net/lwip/jos/arch/threadq.h	/^struct thread_queue$/;"	s
thread_queue::tq_first	./net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_first;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context	access:public
thread_queue::tq_last	./net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_last;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context	access:public
thread_wait	./net/lwip/jos/arch/thread.h	/^void thread_wait(volatile uint32_t *addr, uint32_t val, uint32_t msec);$/;"	p	signature:(volatile uint32_t *addr, uint32_t val, uint32_t msec)
thread_wakeup	./net/lwip/jos/arch/thread.h	/^void thread_wakeup(volatile uint32_t *addr);$/;"	p	signature:(volatile uint32_t *addr)
thread_wakeups_pending	./net/lwip/jos/arch/thread.h	/^int thread_wakeups_pending(void);$/;"	p	signature:(void)
thread_yield	./net/lwip/jos/arch/thread.h	/^void thread_yield(void);$/;"	p	signature:(void)
threadq_init	./net/lwip/jos/arch/threadq.h	/^threadq_init(struct thread_queue *tq)$/;"	f	signature:(struct thread_queue *tq)
threadq_pop	./net/lwip/jos/arch/threadq.h	/^threadq_pop(struct thread_queue *tq)$/;"	f	signature:(struct thread_queue *tq)
threadq_push	./net/lwip/jos/arch/threadq.h	/^threadq_push(struct thread_queue *tq, struct thread_context *tc)$/;"	f	signature:(struct thread_queue *tq, struct thread_context *tc)
time	./net/lwip/include/lwip/sys.h	/^  u32_t time;$/;"	m	struct:sys_timeo	access:public
time_init	./kern/time.h	/^void time_init(void);$/;"	p	signature:(void)
time_msec	./kern/time.h	/^unsigned int time_msec(void);$/;"	p	signature:(void)
time_tick	./kern/time.h	/^void time_tick(void);$/;"	p	signature:(void)
timeouttime	./net/lwip/netif/ppp/chap.h	/^  int timeouttime;                        \/* Timeout time in seconds *\/$/;"	m	struct:chap_state	access:public
timeouttime	./net/lwip/netif/ppp/fsm.h	/^  int timeouttime;                 \/* Timeout time in milliseconds *\/$/;"	m	struct:fsm	access:public
timer	./net/lwip/include/ipv4/lwip/igmp.h	/^  u16_t              timer;$/;"	m	struct:igmp_group	access:public
timer	./net/lwip/include/ipv4/lwip/ip_frag.h	/^  u8_t timer;$/;"	m	struct:ip_reassdata	access:public
timer	./net/ns.h	/^void timer(envid_t ns_envid, uint32_t initial_to);$/;"	p	signature:(envid_t ns_envid, uint32_t initial_to)
timeval	./net/lwip/include/lwip/sockets.h	/^struct timeval {$/;"	s
timeval::tv_sec	./net/lwip/include/lwip/sockets.h	/^  long    tv_sec;         \/* seconds *\/$/;"	m	struct:timeval	access:public
timeval::tv_usec	./net/lwip/include/lwip/sockets.h	/^  long    tv_usec;        \/* and microseconds *\/$/;"	m	struct:timeval	access:public
tlb_invalidate	./kern/pmap.h	/^void	tlb_invalidate(pde_t *pgdir, void *va);$/;"	p	signature:(pde_t *pgdir, void *va)
tlbflush	./inc/x86.h	/^static __inline void tlbflush(void) __attribute__((always_inline));$/;"	p	signature:(void)
tlbflush	./inc/x86.h	/^tlbflush(void)$/;"	f	signature:(void)
tmo	./net/lwip/include/lwip/tcpip.h	/^    } tmo;$/;"	m	union:tcpip_msg::__anon27	typeref:struct:tcpip_msg::__anon27::__anon30	access:public
tmr	./net/lwip/include/lwip/tcp.h	/^  u32_t tmr;$/;"	m	struct:tcp_pcb	access:public
tot_len	./net/lwip/include/lwip/pbuf.h	/^  u16_t tot_len;$/;"	m	struct:pbuf	access:public
tq_first	./net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_first;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context	access:public
tq_last	./net/lwip/jos/arch/threadq.h	/^    struct thread_context *tq_last;$/;"	m	struct:thread_queue	typeref:struct:thread_queue::thread_context	access:public
trap_init	./kern/trap.h	/^void trap_init(void);$/;"	p	signature:(void)
trap_init_percpu	./kern/trap.h	/^void trap_init_percpu(void);$/;"	p	signature:(void)
tree_levels	./net/lwip/include/lwip/snmp_structs.h	/^  u8_t tree_levels;$/;"	m	struct:mib_external_node	access:public
tried_llipaddr	./net/lwip/include/ipv4/lwip/autoip.h	/^  u8_t tried_llipaddr;      \/* total number of probed\/used Link Local IP-Addresses *\/$/;"	m	struct:autoip	access:public
tries	./net/lwip/include/lwip/dhcp.h	/^  u8_t tries;$/;"	m	struct:dhcp	access:public
true	./inc/types.h	/^enum { false, true };$/;"	e	enum:__anon5
ts	./net/lwip/include/lwip/netif.h	/^  u32_t ts;$/;"	m	struct:netif	access:public
ts	./net/lwip/include/lwip/snmp_msg.h	/^  u32_t ts;$/;"	m	struct:snmp_msg_trap	access:public
ts_cr3	./inc/mmu.h	/^	physaddr_t ts_cr3;	\/\/ Page directory base$/;"	m	struct:Taskstate	access:public
ts_cs	./inc/mmu.h	/^	uint16_t ts_cs;$/;"	m	struct:Taskstate	access:public
ts_ds	./inc/mmu.h	/^	uint16_t ts_ds;$/;"	m	struct:Taskstate	access:public
ts_eax	./inc/mmu.h	/^	uint32_t ts_eax;	\/\/ More saved state (registers)$/;"	m	struct:Taskstate	access:public
ts_ebp	./inc/mmu.h	/^	uintptr_t ts_ebp;$/;"	m	struct:Taskstate	access:public
ts_ebx	./inc/mmu.h	/^	uint32_t ts_ebx;$/;"	m	struct:Taskstate	access:public
ts_ecx	./inc/mmu.h	/^	uint32_t ts_ecx;$/;"	m	struct:Taskstate	access:public
ts_edi	./inc/mmu.h	/^	uint32_t ts_edi;$/;"	m	struct:Taskstate	access:public
ts_edx	./inc/mmu.h	/^	uint32_t ts_edx;$/;"	m	struct:Taskstate	access:public
ts_eflags	./inc/mmu.h	/^	uint32_t ts_eflags;$/;"	m	struct:Taskstate	access:public
ts_eip	./inc/mmu.h	/^	uintptr_t ts_eip;	\/\/ Saved state from last task switch$/;"	m	struct:Taskstate	access:public
ts_es	./inc/mmu.h	/^	uint16_t ts_es;		\/\/ Even more saved state (segment selectors)$/;"	m	struct:Taskstate	access:public
ts_esi	./inc/mmu.h	/^	uint32_t ts_esi;$/;"	m	struct:Taskstate	access:public
ts_esp	./inc/mmu.h	/^	uintptr_t ts_esp;$/;"	m	struct:Taskstate	access:public
ts_esp0	./inc/mmu.h	/^	uintptr_t ts_esp0;	\/\/ Stack pointers and segment selectors$/;"	m	struct:Taskstate	access:public
ts_esp1	./inc/mmu.h	/^	uintptr_t ts_esp1;$/;"	m	struct:Taskstate	access:public
ts_esp2	./inc/mmu.h	/^	uintptr_t ts_esp2;$/;"	m	struct:Taskstate	access:public
ts_fs	./inc/mmu.h	/^	uint16_t ts_fs;$/;"	m	struct:Taskstate	access:public
ts_gs	./inc/mmu.h	/^	uint16_t ts_gs;$/;"	m	struct:Taskstate	access:public
ts_iomb	./inc/mmu.h	/^	uint16_t ts_iomb;	\/\/ I\/O map base address$/;"	m	struct:Taskstate	access:public
ts_ldt	./inc/mmu.h	/^	uint16_t ts_ldt;$/;"	m	struct:Taskstate	access:public
ts_link	./inc/mmu.h	/^	uint32_t ts_link;	\/\/ Old ts selector$/;"	m	struct:Taskstate	access:public
ts_padding1	./inc/mmu.h	/^	uint16_t ts_padding1;$/;"	m	struct:Taskstate	access:public
ts_padding10	./inc/mmu.h	/^	uint16_t ts_padding10;$/;"	m	struct:Taskstate	access:public
ts_padding2	./inc/mmu.h	/^	uint16_t ts_padding2;$/;"	m	struct:Taskstate	access:public
ts_padding3	./inc/mmu.h	/^	uint16_t ts_padding3;$/;"	m	struct:Taskstate	access:public
ts_padding4	./inc/mmu.h	/^	uint16_t ts_padding4;$/;"	m	struct:Taskstate	access:public
ts_padding5	./inc/mmu.h	/^	uint16_t ts_padding5;$/;"	m	struct:Taskstate	access:public
ts_padding6	./inc/mmu.h	/^	uint16_t ts_padding6;$/;"	m	struct:Taskstate	access:public
ts_padding7	./inc/mmu.h	/^	uint16_t ts_padding7;$/;"	m	struct:Taskstate	access:public
ts_padding8	./inc/mmu.h	/^	uint16_t ts_padding8;$/;"	m	struct:Taskstate	access:public
ts_padding9	./inc/mmu.h	/^	uint16_t ts_padding9;$/;"	m	struct:Taskstate	access:public
ts_ss	./inc/mmu.h	/^	uint16_t ts_ss;$/;"	m	struct:Taskstate	access:public
ts_ss0	./inc/mmu.h	/^	uint16_t ts_ss0;	\/\/   after an increase in privilege level$/;"	m	struct:Taskstate	access:public
ts_ss1	./inc/mmu.h	/^	uint16_t ts_ss1;$/;"	m	struct:Taskstate	access:public
ts_ss2	./inc/mmu.h	/^	uint16_t ts_ss2;$/;"	m	struct:Taskstate	access:public
ts_t	./inc/mmu.h	/^	uint16_t ts_t;		\/\/ Trap on task switch$/;"	m	struct:Taskstate	access:public
tslen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t tslen;$/;"	m	struct:snmp_trap_header_lengths	access:public
tslenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t tslenlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
tstate	./net/lwip/netif/ppp/vj.h	/^  struct cstate tstate[MAX_SLOTS]; \/* xmit connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate	access:public
ttw	./net/lwip/include/ipv4/lwip/autoip.h	/^  u16_t ttw;                \/* ticks to wait, tick is AUTOIP_TMR_INTERVAL long *\/$/;"	m	struct:autoip	access:public
tv_sec	./net/lwip/include/lwip/sockets.h	/^  long    tv_sec;         \/* seconds *\/$/;"	m	struct:timeval	access:public
tv_usec	./net/lwip/include/lwip/sockets.h	/^  long    tv_usec;        \/* and microseconds *\/$/;"	m	struct:timeval	access:public
type	./inc/partition.h	/^	uint8_t type;$/;"	m	struct:Partitiondesc	access:public
type	./net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_dur_hdr	access:public
type	./net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_echo_hdr	access:public
type	./net/lwip/include/ipv6/lwip/icmp.h	/^  u8_t type;$/;"	m	struct:icmp_te_hdr	access:public
type	./net/lwip/include/lwip/api.h	/^  enum netconn_type type;$/;"	m	struct:netconn	typeref:enum:netconn::netconn_type	access:public
type	./net/lwip/include/lwip/pbuf.h	/^  u8_t \/*pbuf_type*\/ type;$/;"	m	struct:pbuf	access:public
type	./net/lwip/include/lwip/tcpip.h	/^  enum tcpip_msg_type type;$/;"	m	struct:tcpip_msg	typeref:enum:tcpip_msg::tcpip_msg_type	access:public
u16_t	./net/lwip/jos/arch/cc.h	/^typedef uint16_t u16_t;$/;"	t
u32_t	./net/lwip/jos/arch/cc.h	/^typedef uint32_t u32_t;$/;"	t
u64_t	./net/lwip/jos/arch/cc.h	/^typedef uint64_t u64_t;$/;"	t
u8_t	./net/lwip/jos/arch/cc.h	/^typedef uint8_t u8_t;$/;"	t
u_char	./net/lwip/netif/ppp/ppp.h	/^typedef unsigned char  u_char;$/;"	t
u_int	./net/lwip/netif/ppp/ppp.h	/^typedef unsigned int   u_int;$/;"	t
u_long	./net/lwip/netif/ppp/ppp.h	/^typedef unsigned long  u_long;$/;"	t
u_short	./net/lwip/netif/ppp/ppp.h	/^typedef unsigned short u_short;$/;"	t
udp	./net/lwip/include/lwip/api.h	/^    struct udp_pcb *udp;$/;"	m	union:netconn::__anon34	typeref:struct:netconn::__anon34::udp_pcb	access:public
udp	./net/lwip/include/lwip/stats.h	/^  struct stats_proto udp;$/;"	m	struct:stats_	typeref:struct:stats_::stats_proto	access:public
udp_bind	./net/lwip/include/lwip/udp.h	/^err_t            udp_bind       (struct udp_pcb *pcb, struct ip_addr *ipaddr,$/;"	p	signature:(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)
udp_connect	./net/lwip/include/lwip/udp.h	/^err_t            udp_connect    (struct udp_pcb *pcb, struct ip_addr *ipaddr,$/;"	p	signature:(struct udp_pcb *pcb, struct ip_addr *ipaddr, u16_t port)
udp_debug_print	./net/lwip/include/lwip/udp.h	/^void udp_debug_print(struct udp_hdr *udphdr);$/;"	p	signature:(struct udp_hdr *udphdr)
udp_debug_print	./net/lwip/include/lwip/udp.h	141;"	d
udp_disconnect	./net/lwip/include/lwip/udp.h	/^void             udp_disconnect    (struct udp_pcb *pcb);$/;"	p	signature:(struct udp_pcb *pcb)
udp_flags	./net/lwip/include/lwip/udp.h	130;"	d
udp_hdr	./net/lwip/include/lwip/udp.h	/^struct udp_hdr {$/;"	s
udp_hdr::PACK_STRUCT_FIELD	./net/lwip/include/lwip/udp.h	/^  PACK_STRUCT_FIELD(u16_t chksum);$/;"	p	struct:udp_hdr	access:public	signature:(u16_t chksum)
udp_hdr::PACK_STRUCT_FIELD	./net/lwip/include/lwip/udp.h	/^  PACK_STRUCT_FIELD(u16_t dest);  \/* src\/dest UDP ports *\/$/;"	p	struct:udp_hdr	access:public	signature:(u16_t dest)
udp_hdr::PACK_STRUCT_FIELD	./net/lwip/include/lwip/udp.h	/^  PACK_STRUCT_FIELD(u16_t len);$/;"	p	struct:udp_hdr	access:public	signature:(u16_t len)
udp_hdr::PACK_STRUCT_FIELD	./net/lwip/include/lwip/udp.h	/^  PACK_STRUCT_FIELD(u16_t src);$/;"	p	struct:udp_hdr	access:public	signature:(u16_t src)
udp_init	./net/lwip/include/lwip/udp.h	136;"	d
udp_input	./net/lwip/include/lwip/udp.h	/^void             udp_input      (struct pbuf *p, struct netif *inp);$/;"	p	signature:(struct pbuf *p, struct netif *inp)
udp_new	./net/lwip/include/lwip/udp.h	/^struct udp_pcb * udp_new        (void);$/;"	p	signature:(void)
udp_pcb	./net/lwip/include/lwip/udp.h	/^struct udp_pcb {$/;"	s
udp_pcb::IP_PCB	./net/lwip/include/lwip/udp.h	/^  IP_PCB;$/;"	m	struct:udp_pcb	access:public
udp_pcb::chksum_len_rx	./net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb	access:public
udp_pcb::chksum_len_tx	./net/lwip/include/lwip/udp.h	/^  u16_t chksum_len_rx, chksum_len_tx;$/;"	m	struct:udp_pcb	access:public
udp_pcb::flags	./net/lwip/include/lwip/udp.h	/^  u8_t flags;$/;"	m	struct:udp_pcb	access:public
udp_pcb::local_port	./net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb	access:public
udp_pcb::multicast_ip	./net/lwip/include/lwip/udp.h	/^  struct ip_addr multicast_ip;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::ip_addr	access:public
udp_pcb::next	./net/lwip/include/lwip/udp.h	/^  struct udp_pcb *next;$/;"	m	struct:udp_pcb	typeref:struct:udp_pcb::udp_pcb	access:public
udp_pcb::recv	./net/lwip/include/lwip/udp.h	/^  void (* recv)(void *arg, struct udp_pcb *pcb, struct pbuf *p,$/;"	m	struct:udp_pcb	access:public
udp_pcb::recv_arg	./net/lwip/include/lwip/udp.h	/^  void *recv_arg;  $/;"	m	struct:udp_pcb	access:public
udp_pcb::remote_port	./net/lwip/include/lwip/udp.h	/^  u16_t local_port, remote_port;$/;"	m	struct:udp_pcb	access:public
udp_recv	./net/lwip/include/lwip/udp.h	/^void             udp_recv       (struct udp_pcb *pcb,$/;"	p	signature:(struct udp_pcb *pcb, void (* recv)(void *arg, struct udp_pcb *upcb, struct pbuf *p, struct ip_addr *addr, u16_t port), void *recv_arg)
udp_remove	./net/lwip/include/lwip/udp.h	/^void             udp_remove     (struct udp_pcb *pcb);$/;"	p	signature:(struct udp_pcb *pcb)
udp_send	./net/lwip/include/lwip/udp.h	/^err_t            udp_send       (struct udp_pcb *pcb, struct pbuf *p);$/;"	p	signature:(struct udp_pcb *pcb, struct pbuf *p)
udp_sendto	./net/lwip/include/lwip/udp.h	/^err_t            udp_sendto     (struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *dst_ip, u16_t dst_port);$/;"	p	signature:(struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *dst_ip, u16_t dst_port)
udp_sendto_if	./net/lwip/include/lwip/udp.h	/^err_t            udp_sendto_if  (struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *dst_ip, u16_t dst_port, struct netif *netif);$/;"	p	signature:(struct udp_pcb *pcb, struct pbuf *p, struct ip_addr *dst_ip, u16_t dst_port, struct netif *netif)
udp_setflags	./net/lwip/include/lwip/udp.h	131;"	d
uint16_t	./inc/types.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	./inc/types.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	./inc/types.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	./inc/types.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	./inc/types.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	./inc/lib.h	/^void	umain(int argc, char **argv);$/;"	p	signature:(int argc, char **argv)
unacked	./net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unacked;  \/* Sent but unacknowledged segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg	access:public
unicast_query	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER unicast_query;    \/* *\/$/;"	m	struct:stats_igmp	access:public
unit	./net/lwip/netif/ppp/chap.h	/^  int unit;                               \/* Interface unit number *\/$/;"	m	struct:chap_state	access:public
unit	./net/lwip/netif/ppp/fsm.h	/^  int unit;                        \/* Interface unit number *\/$/;"	m	struct:fsm	access:public
unlock_kernel	./kern/spinlock.h	/^unlock_kernel(void)$/;"	f	signature:(void)
unsent	./net/lwip/include/lwip/tcp.h	/^  struct tcp_seg *unsent;   \/* Unsent (queued) segments. *\/$/;"	m	struct:tcp_pcb	typeref:struct:tcp_pcb::tcp_seg	access:public
unused	./net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_dur_hdr	access:public
unused	./net/lwip/include/ipv6/lwip/icmp.h	/^  u32_t unused;$/;"	m	struct:icmp_te_hdr	access:public
up	./net/lwip/netif/ppp/fsm.h	/^  void (*up)(fsm*);                                 \/* Called when fsm reaches LS_OPENED state *\/$/;"	m	struct:fsm_callbacks	access:public
upap_authpeer	./net/lwip/netif/ppp/pap.h	/^void upap_authpeer      (int);$/;"	p	signature:(int)
upap_authwithpeer	./net/lwip/netif/ppp/pap.h	/^void upap_authwithpeer  (int, char *, char *);$/;"	p	signature:(int, char *, char *)
upap_setloginpasswd	./net/lwip/netif/ppp/pap.h	/^void upap_setloginpasswd(int unit, const char *luser, const char *lpassword);$/;"	p	signature:(int unit, const char *luser, const char *lpassword)
upap_state	./net/lwip/netif/ppp/pap.h	/^typedef struct upap_state {$/;"	s
upap_state	./net/lwip/netif/ppp/pap.h	/^} upap_state;$/;"	t	typeref:struct:upap_state
upap_state::us_clientstate	./net/lwip/netif/ppp/pap.h	/^  int us_clientstate;    \/* Client state *\/$/;"	m	struct:upap_state	access:public
upap_state::us_id	./net/lwip/netif/ppp/pap.h	/^  u_char us_id;          \/* Current id *\/$/;"	m	struct:upap_state	access:public
upap_state::us_maxtransmits	./net/lwip/netif/ppp/pap.h	/^  int us_maxtransmits;   \/* Maximum number of auth-reqs to send *\/$/;"	m	struct:upap_state	access:public
upap_state::us_passwd	./net/lwip/netif/ppp/pap.h	/^  const char *us_passwd; \/* Password *\/$/;"	m	struct:upap_state	access:public
upap_state::us_passwdlen	./net/lwip/netif/ppp/pap.h	/^  int us_passwdlen;      \/* Password length *\/$/;"	m	struct:upap_state	access:public
upap_state::us_reqtimeout	./net/lwip/netif/ppp/pap.h	/^  int us_reqtimeout;     \/* Time to wait for auth-req from peer *\/$/;"	m	struct:upap_state	access:public
upap_state::us_serverstate	./net/lwip/netif/ppp/pap.h	/^  int us_serverstate;    \/* Server state *\/$/;"	m	struct:upap_state	access:public
upap_state::us_timeouttime	./net/lwip/netif/ppp/pap.h	/^  int us_timeouttime;    \/* Timeout (seconds) for auth-req retrans. *\/$/;"	m	struct:upap_state	access:public
upap_state::us_transmits	./net/lwip/netif/ppp/pap.h	/^  int us_transmits;      \/* Number of auth-reqs sent *\/$/;"	m	struct:upap_state	access:public
upap_state::us_unit	./net/lwip/netif/ppp/pap.h	/^  int us_unit;           \/* Interface unit number *\/$/;"	m	struct:upap_state	access:public
upap_state::us_user	./net/lwip/netif/ppp/pap.h	/^  const char *us_user;   \/* User *\/$/;"	m	struct:upap_state	access:public
upap_state::us_userlen	./net/lwip/netif/ppp/pap.h	/^  int us_userlen;        \/* User length *\/$/;"	m	struct:upap_state	access:public
us_clientstate	./net/lwip/netif/ppp/pap.h	/^  int us_clientstate;    \/* Client state *\/$/;"	m	struct:upap_state	access:public
us_id	./net/lwip/netif/ppp/pap.h	/^  u_char us_id;          \/* Current id *\/$/;"	m	struct:upap_state	access:public
us_maxtransmits	./net/lwip/netif/ppp/pap.h	/^  int us_maxtransmits;   \/* Maximum number of auth-reqs to send *\/$/;"	m	struct:upap_state	access:public
us_passwd	./net/lwip/netif/ppp/pap.h	/^  const char *us_passwd; \/* Password *\/$/;"	m	struct:upap_state	access:public
us_passwdlen	./net/lwip/netif/ppp/pap.h	/^  int us_passwdlen;      \/* Password length *\/$/;"	m	struct:upap_state	access:public
us_reqtimeout	./net/lwip/netif/ppp/pap.h	/^  int us_reqtimeout;     \/* Time to wait for auth-req from peer *\/$/;"	m	struct:upap_state	access:public
us_serverstate	./net/lwip/netif/ppp/pap.h	/^  int us_serverstate;    \/* Server state *\/$/;"	m	struct:upap_state	access:public
us_timeouttime	./net/lwip/netif/ppp/pap.h	/^  int us_timeouttime;    \/* Timeout (seconds) for auth-req retrans. *\/$/;"	m	struct:upap_state	access:public
us_transmits	./net/lwip/netif/ppp/pap.h	/^  int us_transmits;      \/* Number of auth-reqs sent *\/$/;"	m	struct:upap_state	access:public
us_unit	./net/lwip/netif/ppp/pap.h	/^  int us_unit;           \/* Interface unit number *\/$/;"	m	struct:upap_state	access:public
us_user	./net/lwip/netif/ppp/pap.h	/^  const char *us_user;   \/* User *\/$/;"	m	struct:upap_state	access:public
us_userlen	./net/lwip/netif/ppp/pap.h	/^  int us_userlen;        \/* User length *\/$/;"	m	struct:upap_state	access:public
use	./net/lwip/include/ipv4/lwip/igmp.h	/^  u8_t               use; \/* counter of simultaneous uses *\/$/;"	m	struct:igmp_group	access:public
used	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER used;$/;"	m	struct:stats_syselem	access:public
used	./net/lwip/include/lwip/stats.h	/^  mem_size_t used;$/;"	m	struct:stats_mem	access:public
usehostname	./net/lwip/netif/ppp/ppp.h	/^  u_int  usehostname       : 1;       \/* Use hostname for our_name *\/$/;"	m	struct:ppp_settings	access:public
usepeerdns	./net/lwip/netif/ppp/ppp.h	/^  u_int  usepeerdns        : 1;       \/* Ask peer for DNS adds *\/$/;"	m	struct:ppp_settings	access:public
user	./net/lwip/netif/ppp/ppp.h	/^  char user       [MAXNAMELEN   + 1]; \/* Username for PAP *\/$/;"	m	struct:ppp_settings	access:public
user_mem_assert	./kern/pmap.h	/^void	user_mem_assert(struct Env *env, const void *va, size_t len, int perm);$/;"	p	signature:(struct Env *env, const void *va, size_t len, int perm)
user_mem_check	./kern/pmap.h	/^int	user_mem_check(struct Env *env, const void *va, size_t len, int perm);$/;"	p	signature:(struct Env *env, const void *va, size_t len, int perm)
utf_eflags	./inc/trap.h	/^	uint32_t utf_eflags;$/;"	m	struct:UTrapframe	access:public
utf_eip	./inc/trap.h	/^	uintptr_t utf_eip;$/;"	m	struct:UTrapframe	access:public
utf_err	./inc/trap.h	/^	uint32_t utf_err;$/;"	m	struct:UTrapframe	access:public
utf_esp	./inc/trap.h	/^	uintptr_t utf_esp;$/;"	m	struct:UTrapframe	access:public
utf_fault_va	./inc/trap.h	/^	uint32_t utf_fault_va;	\/* va for T_PGFLT, 0 otherwise *\/$/;"	m	struct:UTrapframe	access:public
utf_regs	./inc/trap.h	/^	struct PushRegs utf_regs;$/;"	m	struct:UTrapframe	typeref:struct:UTrapframe::PushRegs	access:public
v	./net/lwip/include/ipv6/lwip/ip.h	/^  u8_t tclass1:4, v:4;$/;"	m	struct:ip_hdr	access:public
v1_rxed	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER v1_rxed;          \/* *\/$/;"	m	struct:stats_igmp	access:public
v_len	./net/lwip/include/lwip/snmp_structs.h	/^  u16_t v_len;$/;"	m	struct:obj_def	access:public
va_arg	./inc/stdarg.h	10;"	d
va_end	./inc/stdarg.h	12;"	d
va_is_dirty	./fs/fs.h	/^bool	va_is_dirty(void *va);$/;"	p	signature:(void *va)
va_is_mapped	./fs/fs.h	/^bool	va_is_mapped(void *va);$/;"	p	signature:(void *va)
va_list	./inc/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	./inc/stdarg.h	8;"	d
value	./net/lwip/include/lwip/snmp_msg.h	/^  void *value;$/;"	m	struct:snmp_varbind	access:public
value_len	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_len;$/;"	m	struct:snmp_varbind	access:public
value_type	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t value_type;$/;"	m	struct:snmp_varbind	access:public
vb_idx	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t vb_idx;$/;"	m	struct:snmp_msg_pstat	access:public
vb_ptr	./net/lwip/include/lwip/snmp_msg.h	/^  struct snmp_varbind *vb_ptr;$/;"	m	struct:snmp_msg_pstat	typeref:struct:snmp_msg_pstat::snmp_varbind	access:public
vcprintf	./inc/stdio.h	/^int	vcprintf(const char *fmt, va_list);$/;"	p	signature:(const char *fmt, va_list)
verlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
verlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t verlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
verlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_resp_header_lengths	access:public
verlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t verlenlen;$/;"	m	struct:snmp_trap_header_lengths	access:public
vfprintf	./inc/stdio.h	/^int	vfprintf(int fd, const char *fmt, va_list);$/;"	p	signature:(int fd, const char *fmt, va_list)
vj_compress_init	./net/lwip/netif/ppp/vj.h	/^extern void  vj_compress_init    (struct vjcompress *comp);$/;"	p	signature:(struct vjcompress *comp)
vj_compress_tcp	./net/lwip/netif/ppp/vj.h	/^extern u_int vj_compress_tcp     (struct vjcompress *comp, struct pbuf *pb);$/;"	p	signature:(struct vjcompress *comp, struct pbuf *pb)
vj_protocol	./net/lwip/netif/ppp/ipcp.h	/^  u_short vj_protocol;       \/* protocol value to use in VJ option *\/$/;"	m	struct:ipcp_options	access:public
vj_uncompress_err	./net/lwip/netif/ppp/vj.h	/^extern void  vj_uncompress_err   (struct vjcompress *comp);$/;"	p	signature:(struct vjcompress *comp)
vj_uncompress_tcp	./net/lwip/netif/ppp/vj.h	/^extern int   vj_uncompress_tcp   (struct pbuf **nb, struct vjcompress *comp);$/;"	p	signature:(struct pbuf **nb, struct vjcompress *comp)
vj_uncompress_uncomp	./net/lwip/netif/ppp/vj.h	/^extern int   vj_uncompress_uncomp(struct pbuf *nb, struct vjcompress *comp);$/;"	p	signature:(struct pbuf *nb, struct vjcompress *comp)
vjcompress	./net/lwip/netif/ppp/vj.h	/^struct vjcompress {$/;"	s
vjcompress::compressSlot	./net/lwip/netif/ppp/vj.h	/^  u_char compressSlot;             \/* Flag indicating OK to compress slot ID. *\/$/;"	m	struct:vjcompress	access:public
vjcompress::flags	./net/lwip/netif/ppp/vj.h	/^  u_short flags;$/;"	m	struct:vjcompress	access:public
vjcompress::last_cs	./net/lwip/netif/ppp/vj.h	/^  struct cstate *last_cs;          \/* most recently used tstate *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate	access:public
vjcompress::last_recv	./net/lwip/netif/ppp/vj.h	/^  u_char last_recv;                \/* last rcvd conn. id *\/$/;"	m	struct:vjcompress	access:public
vjcompress::last_xmit	./net/lwip/netif/ppp/vj.h	/^  u_char last_xmit;                \/* last sent conn. id *\/$/;"	m	struct:vjcompress	access:public
vjcompress::maxSlotIndex	./net/lwip/netif/ppp/vj.h	/^  u_char maxSlotIndex;$/;"	m	struct:vjcompress	access:public
vjcompress::rstate	./net/lwip/netif/ppp/vj.h	/^  struct cstate rstate[MAX_SLOTS]; \/* receive connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate	access:public
vjcompress::stats	./net/lwip/netif/ppp/vj.h	/^  struct vjstat stats;$/;"	m	struct:vjcompress	typeref:struct:vjcompress::vjstat	access:public
vjcompress::tstate	./net/lwip/netif/ppp/vj.h	/^  struct cstate tstate[MAX_SLOTS]; \/* xmit connection states *\/$/;"	m	struct:vjcompress	typeref:struct:vjcompress::cstate	access:public
vjcs_u	./net/lwip/netif/ppp/vj.h	/^  } vjcs_u;$/;"	m	struct:cstate	typeref:union:cstate::__anon12	access:public
vjs_compressed	./net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressed;     \/* outbound compressed packets *\/$/;"	m	struct:vjstat	access:public
vjs_compressedin	./net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressedin;   \/* inbound compressed packets *\/$/;"	m	struct:vjstat	access:public
vjs_errorin	./net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_errorin;        \/* inbound unknown type packets *\/$/;"	m	struct:vjstat	access:public
vjs_misses	./net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_misses;         \/* times couldn't find conn. state *\/$/;"	m	struct:vjstat	access:public
vjs_packets	./net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_packets;        \/* outbound packets *\/$/;"	m	struct:vjstat	access:public
vjs_searches	./net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_searches;       \/* searches for connection state *\/$/;"	m	struct:vjstat	access:public
vjs_tossed	./net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_tossed;         \/* inbound packets tossed because of error *\/$/;"	m	struct:vjstat	access:public
vjs_uncompressedin	./net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_uncompressedin; \/* inbound uncompressed packets *\/$/;"	m	struct:vjstat	access:public
vjstat	./net/lwip/netif/ppp/vj.h	/^struct vjstat {$/;"	s
vjstat::vjs_compressed	./net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressed;     \/* outbound compressed packets *\/$/;"	m	struct:vjstat	access:public
vjstat::vjs_compressedin	./net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_compressedin;   \/* inbound compressed packets *\/$/;"	m	struct:vjstat	access:public
vjstat::vjs_errorin	./net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_errorin;        \/* inbound unknown type packets *\/$/;"	m	struct:vjstat	access:public
vjstat::vjs_misses	./net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_misses;         \/* times couldn't find conn. state *\/$/;"	m	struct:vjstat	access:public
vjstat::vjs_packets	./net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_packets;        \/* outbound packets *\/$/;"	m	struct:vjstat	access:public
vjstat::vjs_searches	./net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_searches;       \/* searches for connection state *\/$/;"	m	struct:vjstat	access:public
vjstat::vjs_tossed	./net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_tossed;         \/* inbound packets tossed because of error *\/$/;"	m	struct:vjstat	access:public
vjstat::vjs_uncompressedin	./net/lwip/netif/ppp/vj.h	/^  unsigned long vjs_uncompressedin; \/* inbound uncompressed packets *\/$/;"	m	struct:vjstat	access:public
vlen	./net/lwip/include/lwip/snmp_msg.h	/^  u16_t vlen;$/;"	m	struct:snmp_varbind	access:public
vlenlen	./net/lwip/include/lwip/snmp_msg.h	/^  u8_t vlenlen;$/;"	m	struct:snmp_varbind	access:public
voidfunc	./net/lwip/include/lwip/netifapi.h	/^      void  (* voidfunc)(struct netif *netif);$/;"	m	struct:netifapi_msg_msg::__anon31::__anon33	access:public
vpd_key0	./kern/pcireg.h	/^	uint8_t		vpd_key0;$/;"	m	struct:pci_vpd	access:public
vpd_key1	./kern/pcireg.h	/^	uint8_t		vpd_key1;$/;"	m	struct:pci_vpd	access:public
vpd_len	./kern/pcireg.h	/^	uint8_t		vpd_len;		\/* length of data only *\/$/;"	m	struct:pci_vpd	access:public
vpdres_byte0	./kern/pcireg.h	/^	uint8_t		vpdres_byte0;		\/* length of data + tag *\/$/;"	m	struct:pci_vpd_smallres	access:public
vpdres_byte0	./kern/pcireg.h	/^	uint8_t		vpdres_byte0;$/;"	m	struct:pci_vpd_largeres	access:public
vpdres_len_lsb	./kern/pcireg.h	/^	uint8_t		vpdres_len_lsb;		\/* length of data only *\/$/;"	m	struct:pci_vpd_largeres	access:public
vpdres_len_msb	./kern/pcireg.h	/^	uint8_t		vpdres_len_msb;$/;"	m	struct:pci_vpd_largeres	access:public
vprintfmt	./inc/stdio.h	/^void	vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list);$/;"	p	signature:(void (*putch)(int, void*), void *putdat, const char *fmt, va_list)
vsnprintf	./inc/stdio.h	/^int	vsnprintf(char *str, int size, const char *fmt, va_list);$/;"	p	signature:(char *str, int size, const char *fmt, va_list)
w	./net/lwip/include/lwip/api_msg.h	/^    } w;$/;"	m	union:api_msg_msg::__anon17	typeref:struct:api_msg_msg::__anon17::__anon21	access:public
wait	./inc/lib.h	/^void	wait(envid_t env);$/;"	p	signature:(envid_t env)
warn	./inc/assert.h	11;"	d
winsaddr	./net/lwip/netif/ppp/ipcp.h	/^  u32_t   winsaddr[2];       \/* Primary and secondary MS WINS entries *\/$/;"	m	struct:ipcp_options	access:public
write	./inc/fs.h	/^	} write;$/;"	m	union:Fsipc	typeref:struct:Fsipc::Fsreq_write	access:public
write	./inc/lib.h	/^ssize_t	write(int fd, const void *buf, size_t nbytes);$/;"	p	signature:(int fd, const void *buf, size_t nbytes)
write	./net/lwip/include/lwip/sockets.h	346;"	d
write_delayed	./net/lwip/include/lwip/api.h	/^  u8_t write_delayed;$/;"	m	struct:netconn	access:public
write_eflags	./inc/x86.h	/^static __inline void write_eflags(uint32_t eflags) __attribute__((always_inline));$/;"	p	signature:(uint32_t eflags)
write_eflags	./inc/x86.h	/^write_eflags(uint32_t eflags)$/;"	f	signature:(uint32_t eflags)
write_msg	./net/lwip/include/lwip/api.h	/^  struct api_msg_msg *write_msg;$/;"	m	struct:netconn	typeref:struct:netconn::api_msg_msg	access:public
write_offset	./net/lwip/include/lwip/api.h	/^  int write_offset;$/;"	m	struct:netconn	access:public
xchg	./inc/x86.h	/^xchg(volatile uint32_t *addr, uint32_t newval)$/;"	f	signature:(volatile uint32_t *addr, uint32_t newval)
xid	./net/lwip/include/lwip/dhcp.h	/^  u32_t xid;$/;"	m	struct:dhcp	access:public
xmit	./net/lwip/include/lwip/stats.h	/^  STAT_COUNTER xmit;             \/* Transmitted packets. *\/$/;"	m	struct:stats_proto	access:public
xmit_idle	./net/lwip/netif/ppp/ppp.h	/^  u_short xmit_idle;      \/* seconds since last NP packet sent *\/$/;"	m	struct:ppp_idle	access:public
